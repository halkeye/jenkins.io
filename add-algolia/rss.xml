<?xml version="1.0" encoding="utf-8" ?>
<?xml version='1.0' encoding='utf-8' ?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom">
<id>https://halkeye.github.io/jenkins.io/add-algolia/</id>
<title>Jenkins Blog</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<link rel="self" type="application/atom+xml" href="https://halkeye.github.io/jenkins.io/add-algolia/rss.xml" />
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/" />
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2021/02/17/cfp-cdcon/</id>
<title>cdCon 2021 - Call for Jenkins Proposals</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2021-02-17T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2021/02/17/cfp-cdcon/" />
<author>
<name>cdfoundation</name>
</author>
<category term="cdcon"></category>
<category term="cfp"></category>
<category term="cicd"></category>
<category term="continuous delivery"></category>
<summary>
Hear ye! Hear ye! Jenkins Community,


cdCon 2021 (the Continuous Delivery Foundation&#8217;s annual flagship event) is happening June 23-24 and its call for papers is open!


This is your chance to share what you&#8217;ve been doing with Jenkins.
Are you building something cool?
Using it to solve real-world problems?
Are you making things fast?
Secure?
Or maybe you&#8217;re a contributor and want to share what&#8217;s new.
In all cases, we want to hear from you!


Submit your talk for cdCon 2021 to be part of the conversation driving the future of software delivery for technology teams, enterprise leadership, and open-source communities.


Submission Deadlines



Early-Bird Deadline

Friday, February 19 by 11:59 PM PST

Final...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hear ye! Hear ye! Jenkins Community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://events.linuxfoundation.org/cdcon/&quot;&gt;cdCon 2021&lt;/a&gt; (the Continuous Delivery Foundation’s annual flagship event) is happening June 23-24 and its call for papers is open!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is your chance to share what you’ve been doing with Jenkins.
Are you building something cool?
Using it to solve real-world problems?
Are you making things fast?
Secure?
Or maybe you’re a contributor and want to share what’s new.
In all cases, we want to hear from you!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Submit your talk for cdCon 2021 to be part of the conversation driving the future of software delivery for technology teams, enterprise leadership, and open-source communities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;submission-deadlines&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#submission-deadlines&quot; /&gt;Submission Deadlines&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Early-Bird Deadline&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Friday, February 19 by 11:59 PM PST&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Final Deadline&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Friday, March 5 at 11:59 PM PST&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;topics&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#topics&quot; /&gt;Topics&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here are the suggested tracks:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Continuous Delivery Ecosystem&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;This track spans the entire Continuous Delivery ecosystem, from workflow orchestration, configuration management, testing, security, release automation, deployment strategies, developer experience, and more.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Advanced Delivery Techniques&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;For talks on the very cutting edge of continuous delivery and emerging technology, for example, progressive delivery, observability, and MLOps.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;GitOps &amp;amp; Cloud-Native CD&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Submit to this track for talks related to continuous delivery involving containers, Kubernetes, and cloud*native technologies. This includes GitOps, cloud-native CD pipelines, chatops, best practices, etc.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Continuous Delivery in Action&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;This track is for showcasing real-world continuous delivery addressing challenges in specific domains e.g. fintech, embedded, healthcare, retail, etc. Talks may cover topics such as governance, compliance, security, etc.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Leadership Track&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Talks for leaders and decision-makers on topics such as measuring DevOps, build vs buy, scaling, culture, security, FinOps, and developer productivity.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Community Track&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;There is more to open source than code contributions. This track covers topics such as growing open source project communities, diversity &amp;amp; inclusion, measuring community health, project roadmaps, and any other topic around sustaining open source and open source communities.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Singular project focus and/or interoperability between:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jenkins&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jenkins X&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ortelius&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spinnaker&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Screwdriver&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tekton&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Other – e.g. Keptn, Flagger, Argo, Flux&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;View all tracks and read &lt;a href=&quot;https://events.linuxfoundation.org/cdcon/program/cfp/&quot;&gt;CFP details&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We look forward to reading your proposal!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://events.linuxfoundation.org/cdcon/program/cfp/&quot;&gt;Submit it here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2021/cdcon2021jenkinscfp.png&quot; alt=&quot;cdcon2021jenkinscfp&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2021/02/16/contributor-summit-online/</id>
<title>Jenkins Contributor Summit Online Feb 23-25</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2021-02-16T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2021/02/16/contributor-summit-online/" />
<author>
<name>markewaite</name>
</author>
<category term="community"></category>
<category term="events"></category>
<summary>
The Jenkins Contributor Summit brings together current and future contributors to the Jenkins project.
We&#8217;re hosting an online summit this year to encourage contributors from around the world to meet, discuss, and plan for the future.


The Contributor Summit will be Tuesday, February 23rd 2021 through Thursday, February 25, 2021.
The summit brings together community members to learn, meet, and help shape the future of Jenkins.
In the Jenkins commmunity we value all types and sizes of contributions and love to welcome new participants.





Format


The online format allows greater flexibility for meeting times and topics.
Contributors will meet to discuss specific topics in smaller groups at...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins Contributor Summit brings together current and future contributors to the Jenkins project.
We’re hosting an online summit this year to encourage contributors from around the world to meet, discuss, and plan for the future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Contributor Summit will be &lt;strong&gt;Tuesday, February 23rd 2021 through Thursday, February 25, 2021&lt;/strong&gt;.
The summit brings together community members to learn, meet, and help shape the future of Jenkins.
In the Jenkins commmunity we value all types and sizes of contributions and love to welcome new participants.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;a class=&quot;image&quot; href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSdTABEUvRlXdMptACYNFu5tP1aNrhpzUZ60uQEzGH-qTRDvbg/viewform&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/jenkins-is-the-way/register-button.png&quot; alt=&quot;register button&quot; height=&quot;48&quot; /&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;format&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#format&quot; /&gt;Format&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The online format allows greater flexibility for meeting times and topics.
Contributors will meet to discuss specific topics in smaller groups at times that are convenient for those in the meeting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;opening-session&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#opening-session&quot; /&gt;Opening session&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The opening session will start Tuesday, February 23, 2021 at 15:00 UTC.
After an initial welcome and overview, we’ll hear from leaders in the Jenkins project as they share the results from the previous 12 months and outline ideas for the next 12 months.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock right&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2021/2021-02-16-contributor-summit.png&quot; alt=&quot;2021 02 16 contributor summit&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Security - Daniel Beck&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Infrastructure - Olivier Vernin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Release - Tim Jacomb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User experience - Félix Queiruga&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chinese localization - 赵晓杰(Rick)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration as code - Tim Jacomb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google Summer of Code - Kara de la Marck&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation - Mark Waite&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Events and Advocacy - Alyssa Tong&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cloud Native - Kara de la Marck&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Platforms - Mark Waite&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After those presentations, we’ll create &quot;breakout rooms&quot; in the online meeting that will allow those interested in specific tracks to meet, identify preferred times for their tracks, and prepare draft agendas for their tracks.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;tracks&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#tracks&quot; /&gt;Tracks&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Smaller sessions (&quot;tracks&quot;) will be run in the 48 hour period between the opening session and the closing session.
These smaller sessions will be focused on specific topics.
A track leader will organize the track meeting, facilitate discussions in the track meeting, and present a summary of the track results in the closing session.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;closing-session&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#closing-session&quot; /&gt;Closing session&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The opening session will start Thursday, February 25, 2021 at 15:00 UTC.
After an initial welcome and overview, we’ll hear from track leaders as they share the results from their track meetings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’ll identify items that should be added to the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/roadmap/&quot;&gt;Jenkins roadmap&lt;/a&gt;, items that should be further investigated by &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/&quot;&gt;special interest groups&lt;/a&gt;, and items that need further discussion elsewhere.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2021/02/08/docker-base-os-upgrade/</id>
<title>Docker image updates</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2021-02-08T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2021/02/08/docker-base-os-upgrade/" />
<author>
<name>markewaite</name>
</author>
<category term="announcement"></category>
<category term="docker"></category>
<category term="platform-sig"></category>
<summary>
Beginning with Jenkins 2.279 and Jenkins 2.263.4, the Jenkins project is upgrading the base operating system and Java version used in the jenkins/jenkins:latest and jenkins/jenkins:lts images.
The update replaces OpenJDK 8u242 with AdoptOpenJDK 8u282 and replaces Debian 9 ("Stretch") with Debian 10 ("Buster").





Why?


We&#8217;re changing the base image so that we have a better supported operating system and a more current Java release for Jenkins controllers.


Better supported operating system

The Docker images provided by the Jenkins project rely on the operating system security processes of the operating system provider.


Our Docker images have used Debian 9 ("Stretch") for multiple years.
Debian 9 security updates have...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Beginning with Jenkins 2.279 and Jenkins 2.263.4, the Jenkins project is upgrading the base operating system and Java version used in the &lt;code&gt;jenkins/jenkins:latest&lt;/code&gt; and &lt;code&gt;jenkins/jenkins:lts&lt;/code&gt; images.
The update replaces OpenJDK 8u242 with AdoptOpenJDK 8u282 and replaces Debian 9 (&lt;a href=&quot;https://www.debian.org/releases/stretch/&quot;&gt;&quot;Stretch&quot;&lt;/a&gt;) with Debian 10 (&lt;a href=&quot;https://www.debian.org/releases/buster/&quot;&gt;&quot;Buster&quot;&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image right center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/docker/dockerJenkins.png&quot; alt=&quot;Jenkins and Docker&quot; height=&quot;224&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;why&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#why&quot; /&gt;Why?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’re changing the base image so that we have a better supported operating system and a more current Java release for Jenkins controllers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;better-supported-operating-system&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#better-supported-operating-system&quot; /&gt;Better supported operating system&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Docker images provided by the Jenkins project rely on the operating system security processes of the operating system provider.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our Docker images have used Debian 9 (&lt;a href=&quot;https://www.debian.org/releases/stretch/&quot;&gt;&quot;Stretch&quot;&lt;/a&gt;) for multiple years.
Debian 9 security updates have been &lt;a href=&quot;https://www.debian.org/releases/stretch/&quot;&gt;discontinued as of July 6, 2020&lt;/a&gt;.
Debian 9 Long Term Support security updates will be discontinued at the &lt;a href=&quot;https://www.debian.org/releases/stretch/&quot;&gt;end of June 2022&lt;/a&gt;.
The upgrade to Debian 10 keeps us on an operating system maintained by the operating system security team.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;more-current-java-release&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#more-current-java-release&quot; /&gt;More current Java release&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Debian 9 Docker images were based on the &lt;a href=&quot;https://hub.docker.com/layers/openjdk/library/openjdk/8-jdk-stretch/images/sha256-6896e96ce729fd54da25b8d831400773efeef39780c65bffb2d64c1412189455&quot;&gt;&lt;code&gt;openjdk:8-jdk-stretch&lt;/code&gt; Docker image&lt;/a&gt;.
The last update to that image was one year ago with the release of JDK 8u242.
We need a maintained Docker base image that keeps pace with JDK releases and operating system updates so that the controller is running the most recent Java updates and most recent operating system updates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Other Jenkins controller images have already switched from using &lt;code&gt;openjdk&lt;/code&gt; base images to instead use base images provided by &lt;a href=&quot;https://projects.eclipse.org/projects/adoptium&quot;&gt;Eclipse Adoptium&lt;/a&gt;.
&lt;a href=&quot;https://projects.eclipse.org/projects/adoptium&quot;&gt;Eclipse Adoptium&lt;/a&gt; is the Eclipse project formed when &lt;a href=&quot;https://blog.adoptopenjdk.net/2020/06/adoptopenjdk-to-join-the-eclipse-foundation/&quot;&gt;AdoptOpenJDK joined the Eclipse Foundation&lt;/a&gt;.
This change adapts the &lt;code&gt;jenkins/jenkins:latest&lt;/code&gt; and &lt;code&gt;jenkins/jenkins:lts&lt;/code&gt; images to use the Adoptium JDK images in the same pattern as is already used for the Jenkins JDK 11 Docker images like &lt;code&gt;jenkins/jenkins:lts-jdk11&lt;/code&gt;.
The Jenkins Platform SIG has enjoyed very good results in our interactions with the Eclipse Adoptium project.
We look forward to continuing our collaboration with them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks a lot to &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/slide_o_mix/&quot;&gt;Alex Earl&lt;/a&gt; and &lt;a href=&quot;https://github.com/james-crowley&quot;&gt;Jim Crowley&lt;/a&gt; for the image build restructuring groundwork that made the image upgrade possible!
Also thanks to &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/oleg_nenashev/&quot;&gt;Oleg Nenashev&lt;/a&gt; and other contributors for their reviews and testing.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;packaging-changes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#packaging-changes&quot; /&gt;Packaging changes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins Docker image based on Debian 10 (&quot;Buster&quot;) includes some different packages than Debian 9 (&quot;Stretch&quot;).
Some packages have been removed because they are no longer supported by their communities.
Some packages have been removed due to infrequent and decreasing use.
Users of the Jenkins Docker images may need to extend their definition of their Docker image to include packages that are no longer included in the base image.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;scm-packages-removed&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#scm-packages-removed&quot; /&gt;SCM packages removed&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following source control management packages are no longer included in the Jenkins controller images for &lt;code&gt;jenkins/jenkins:latest&lt;/code&gt; or for &lt;code&gt;jenkins/jenkins:lts&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;bzr&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mercurial&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;subversion&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;other-packages-removed&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#other-packages-removed&quot; /&gt;Other packages removed&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Additional packages that are no longer included in the Jenkins controller images include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;bzip2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mime-support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;python (the Python project stopped supporting Python 2 January 1, 2020)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;xz-utils&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A detailed list of the exact package changes is available in the &lt;a href=&quot;https://github.com/jenkinsci/docker/pull/1070&quot;&gt;pull request&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;upgrade-and-compatibility-notes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upgrade-and-compatibility-notes&quot; /&gt;Upgrade and compatibility notes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins controller images are designed to be extended to meet user needs.
Custom Jenkins controller images can be created from the base images and are designed to allow additional Jenkins plugins and additional operating system packages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example, the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/docker/&quot;&gt;Installing Docker&lt;/a&gt; instructions illustrate a technique to install the &lt;a href=&quot;https://plugins.jenkins.io/blueocean&quot;&gt;Blue Ocean plugins&lt;/a&gt; and some operating system packages in a custom Docker image.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;docker-image-with-subversion&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#docker-image-with-subversion&quot; /&gt;Docker image with Subversion&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following Docker image definition installs the most recent &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/download/lts/&quot;&gt;Jenkins Long Term Support&lt;/a&gt; release with the &lt;a href=&quot;https://plugins.jenkins.io/subversion&quot;&gt;subversion plugin&lt;/a&gt; and the operating system &lt;code&gt;subversion&lt;/code&gt; command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code&gt;FROM jenkins/jenkins:lts
USER root
RUN apt-get update &amp;amp;&amp;amp; \
    apt-get install -y --no-install-recommends subversion
USER jenkins
RUN jenkins-plugin-cli --plugins subversion:2.14.0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Build a new docker image from this Dockerfile and assign the image a meaningful name, e.g. &quot;myjenkins-subversion:1.1&quot;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;docker build -t myjenkins-subversion:1.1 .&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;docker-image-with-mercurial&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#docker-image-with-mercurial&quot; /&gt;Docker image with Mercurial&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following Docker image definition installs the most recent &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/download/weekly/&quot;&gt;Jenkins Weekly&lt;/a&gt; release with the &lt;a href=&quot;https://plugins.jenkins.io/mercurial&quot;&gt;mercurial plugin&lt;/a&gt; and the operating system &lt;code&gt;hg&lt;/code&gt; command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code&gt;FROM jenkins/jenkins:latest
USER root
RUN apt-get update &amp;amp;&amp;amp; \
    apt-get install -y --no-install-recommends mercurial
USER jenkins
RUN jenkins-plugin-cli --plugins mercurial:2.12&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Build a new docker image from this Dockerfile and assign the image a meaningful name, e.g. &quot;myjenkins-mercurial:1.1&quot;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;docker build -t myjenkins-mercurial:1.1 .&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#whats-next&quot; /&gt;What’s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will continue Docker image updates as new Java versions are released.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you are interested in new features in Jenkins Docker packaging,
stay tuned for future announcements!
There are multiple ongoing initiatives which you can find on the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/roadmap/&quot;&gt;public Jenkins roadmap&lt;/a&gt;.
Some stories:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Switching to AdoptOpenJDK.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;General availability of Windows images.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for more platforms (AArch64, IBM s390x, PowerPC).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Introducing multi-platform Docker images.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you are interested in any of these projects and would like to contribute,
please reach out to the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/platform&quot;&gt;Platform Special Interest Group&lt;/a&gt; which coordinates initiatives related to Jenkins in Docker.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2021/01/26/new-ebook-build-deploy-and-automate-great-stuff-with-jenkins/</id>
<title>New eBook: Build, deploy, and automate great stuff with Jenkins</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2021-01-26T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2021/01/26/new-ebook-build-deploy-and-automate-great-stuff-with-jenkins/" />
<author>
<name>alyssat</name>
</author>
<category term="jenkins"></category>
<category term="jenkinsistheway"></category>
<category term="casestudies"></category>
<category term="Jenkinsuserstories"></category>
<summary>
In April of last year, we launched a new Jenkins community website called JenkinsIsTheWay.
The Jenkins Is The Way site has collected the experiences of Jenkins users around the world as they develop software and create solutions.
They are charting new paths, discovering new opportunities, and overcoming challenges.


That&#8217;s what makes Jenkins Is The Way tick.
Engineers in the Netherlands might have already met challenges faced by developers in India.
Solutions uncovered by DevOps teams in Spain may benefit those just starting in the USA.
Interns in Bogota may develop pipeline solutions that can be integrated into workflows used across the globe in Tokyo.
Or vice versa!


No...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image right center&quot;&gt;&lt;a class=&quot;image&quot; href=&quot;https://jenkinsistheway.io/&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/jenkins-is-the-way/jenkins-is-the-way.png&quot; alt=&quot;Jenkins Is The Way&quot; height=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In April of last year, we launched a new Jenkins community website called &lt;a href=&quot;https://jenkinsistheway.io/&quot;&gt;JenkinsIsTheWay&lt;/a&gt;.
The Jenkins Is The Way site has collected the experiences of Jenkins users around the world as they develop software and create solutions.
They are charting new paths, discovering new opportunities, and overcoming challenges.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That’s what makes Jenkins Is The Way tick.
Engineers in the Netherlands might have already met challenges faced by developers in India.
Solutions uncovered by DevOps teams in Spain may benefit those just starting in the USA.
Interns in Bogota may develop pipeline solutions that can be integrated into workflows used across the globe in Tokyo.
Or vice versa!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No matter where you are, regardless of whether your solution is regional or global in nature, Jenkins Is The Way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;telling-your-stories-in-a-new-ebook&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#telling-your-stories-in-a-new-ebook&quot; /&gt;Telling your stories in a new eBook&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To date, we have nearly 60 user stories, a handful of case studies, and some new user testimonial videos from the Jenkins community.
You shared how using Jenkins has helped make your builds faster, your pipelines more secure, and your developers and software engineers happier.
In essence, Jenkins Is The Way showcases how Jenkins has made it a whole lot easier to do the work you do every day.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’ve now gathered some of those stories in our first &lt;a href=&quot;https://jenkinsistheway.io/wp-content/uploads/2021/01/Jenkins-User-Story-Industry-focused-ebook-2020.pdf&quot;&gt;Jenkins Is The Way ebook&lt;/a&gt;, covering various challenges and solutions from six different industries: Aerospace, Education, Finance, Insurance, Retail, and Travel.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image right&quot;&gt;&lt;a class=&quot;image&quot; href=&quot;https://jenkinsistheway.io/wp-content/uploads/2021/01/Jenkins-User-Story-Industry-focused-ebook-2020.pdf&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/jenkins-is-the-way/ebook-cover.png&quot; alt=&quot;ebook cover&quot; height=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You’ll read about innovations from &lt;strong&gt;KP Labs&lt;/strong&gt; in Poland and &lt;strong&gt;Preply&lt;/strong&gt; in Ukraine.
You’ll discover how automation helped &lt;strong&gt;Avoris&lt;/strong&gt; out of Spain &amp;amp; Portugal and &lt;strong&gt;Tymit&lt;/strong&gt; in the United Kingdom.
And you’ll be inspired by what China’s &lt;strong&gt;JD.com&lt;/strong&gt; and &lt;strong&gt;Topdanmark&lt;/strong&gt; in Denmark were able to achieve after tapping into the Jenkins community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This curated collection of stories illustrates how Jenkins community members build next-generation DevOps and CI/CD platforms as the backbone for software innovation across companies of all sizes.
They highlight the innovation, ingenuity, and keen ability to adapt Jenkins plugins to handle everyday business issues, everywhere.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The technology landscape is full of solutions perfected to tackle all aspects of software development.
But time and time again, developers keep coming back to Jenkins.
Your engineering time and resources are too valuable to be spent re-inventing the wheel or handling manual testing and deployment cycles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins&#39; vast array of plugins and pre-built solutions will have you automating more than you ever imagined.
So, get inspired to build great stuff with Jenkins.
And, please &lt;a href=&quot;https://jenkinsistheway.io/wp-content/uploads/2021/01/Jenkins-User-Story-Industry-focused-ebook-2020.pdf&quot;&gt;share this ebook&lt;/a&gt; with your network.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;share-your-story&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#share-your-story&quot; /&gt;Share your story!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And when you’re ready to tell your story, we’re prepared to help you share it.
&lt;a href=&quot;https://www.surveymonkey.com/r/JenkinsIsTheWay&quot;&gt;Fill out the short questionnaire&lt;/a&gt;, and we’ll send you our Jenkins Is The Way T-shirt as a thank you!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Special thanks to &lt;a href=&quot;https://www.cloudbees.com&quot;&gt;&lt;strong&gt;CloudBees, Inc.&lt;/strong&gt;&lt;/a&gt; for sponsoring this program.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2021/01/12/new-year-report/</id>
<title>2020 A Year Like No Other</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2021-01-12T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2021/01/12/new-year-report/" />
<category term="community"></category>
<category term="new-year-blogpost"></category>
<category term="governance"></category>
<summary>
The Jenkins community congratulates all users and contributors with the New Year!
Let’s take a look at some changes this year.
We would like to thank all awesome Jenkins users and contributors who have been with us during this year.





Highlights


Some of the key highlights:




Hundreds of first-timer contributors joined the community


Major UI/UX improvements in the Jenkins core, including the landing page, plugin manager, dark theme, and read-only configurations support


Outreach programs like Google Summer of Code (7 projects), Google Season of Docs, UI/UX hackfest, etc.


Public roadmap for the project


Terminology changes in the project, new Code of Conduct


Technical debt cleanup: XStream unforking, Acegi Security replacement,...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins community congratulates all users and contributors with the New Year!
Let’s take a look at some changes this year.
We would like to thank all awesome Jenkins users and contributors who have been with us during this year.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2017-12-31-new-year/card.png&quot; alt=&quot;NewYear&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#highlights&quot; /&gt;Highlights&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some of the key highlights:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hundreds of first-timer contributors joined the community&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Major UI/UX improvements in the Jenkins core, including the landing page, plugin manager, dark theme, and read-only configurations support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Outreach programs like Google Summer of Code (7 projects), Google Season of Docs, UI/UX hackfest, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Public roadmap for the project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Terminology changes in the project, new Code of Conduct&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Technical debt cleanup: XStream unforking, Acegi Security replacement, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continued evolution of the plugin ecosystem, especially in the area of Cloud Native solutions and tool integrations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continued documentation cleanup, great progress with plugin documentation migration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graduation in the Continuous Delivery Foundation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;jenkins-user-interface-and-user-experience&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-user-interface-and-user-experience&quot; /&gt;Jenkins User Interface and User Experience&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This year there were many activities around Jenkins user experience and long-anticipated user interface changes.
This is a coordinated effort being led by the User Experience SIG, and by many contributors to the project.
Key project highlights:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Look &amp;amp; Feel updates of the Jenkins Web UI, including styling rework, new typography and layouts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Major rework of plugin management UI/UX&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dark theme for Jenkins&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Accessibility improvements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for read-only configuration pages&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In May we also organized a &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/events/online-hackfest/2020-uiux/&quot;&gt;Jenkins UI/UX hackfest&lt;/a&gt; where we worked on some key stories improving user experience.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;jenkins-security&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-security&quot; /&gt;Jenkins security&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In 2020 the Jenkins security team has released 19 advisories for the Jenkins core, plugins and other components.
In total 198 vulnerabilities were fixed, and 72 plugin vulnerabilities were announced without a fix at the time of advisory publishing.
As a project, we are receiving a continuous flow of new reports and continue to provide corrections.
Cross-site scripting (XSS) vulnerabilities were the most popular type this year, followed by unprotected credentials.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There have also been developer tooling improvements,
including &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/04/codeql/&quot;&gt;GitHub CodeQL evaluation&lt;/a&gt; for targeted security issues search
and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/03/02/findsecbugs/&quot;&gt;Find-Sec-Bugs adoption&lt;/a&gt; for static analysis of the plugin and Jenkins core code.
Along with wider adoption of Dependabot and automated dependency scanning on GitHub.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documentation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#documentation&quot; /&gt;Documentation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins Documentation SIG is working on creating more documentation for Jenkins on different platforms,
including cloud platforms.
Jenkins on Kubernetes was one of the key stories this year for the SIG,
along with documentation migration to jenkins.io and wider adoption of Documentation-as-code in plugins.
95% of the 200 most installed Jenkins plugins have moved to &quot;documentation as code&quot; or have a pending pull request with updates.
In total, almost 600 plugins have already been migrated.
There were major updates in Jenkins documentation on jenkins.io, with a lot of content being moved from the old Jenkins Wiki.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;2020 was the first year when Jenkins participated in Google Season of Docs (GSoD).
This program brings together open-source and technical writers communities for the benefit of both.
This year’s student, &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/zaycodes&quot;&gt;Zainab Abubakar&lt;/a&gt;,
did an amazing job documenting Jenkins on Kubernetes.
Now Jenkins users can find official documentation about deploying and scaling Jenkins in Kubernetes.
See the project report by Zainab &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/04/gsod-project-report/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;jenkins-release-automation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-release-automation&quot; /&gt;Jenkins Release Automation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins project has delivered weekly and long term support releases since it was formed in 2011.
Those releases were delivered by Kohsuke Kawaguchi from his release infrastructure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Beginning in April 2020, those releases are delivered by the new release automation setup.
It is hosted within the Jenkins’ Kubernetes cluster, with fully automated management and continuous delivery of services within the setup.
We transitioned to new build processes, new code signing certificates, and new release automation jobs.
Thanks to Olivier Vernin and all Infrastructure sub-project contributors for the successful completion of the release automation project!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Moreover, there is ongoing work on continuous delivery of Jenkins plugins (&lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/229/README.adoc&quot;&gt;JEP-229&lt;/a&gt;) and on re-designing other Jenkins instances within the project (infra-ci, trusted-ci, and ci.jenkins.io for plugins).
In the next few months these stories should provide Jenkins contributors with a modern environment for CI and CD of all Jenkins components.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;terminology-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#terminology-updates&quot; /&gt;Terminology updates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since July, we have officially replaced the old &quot;master&quot; terminology with the &quot;controller&quot; term.
It is a follow-up to the &quot;agent&quot; terminology introduced in 2016.
We have also deprecated usages of the “blacklist/whitelist” terminology in all components.
Currently the community is working on the cleanup of the remaining occurrences in the codebase and documentation, and we invite everyone to contribute.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a part of the terminology cleanup, last spring we announced the renaming of the official Docker images for Jenkins agents.
As a reminder, it does not have any immediate impact on Jenkins users, but they are expected to gradually upgrade their instances.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See more information about terminology updates &lt;a href=&quot;https://cd.foundation/blog/2020/08/25/jenkins-terminology-changes/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/18/terminology-update/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;jenkins-is-the-way-program&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-is-the-way-program&quot; /&gt;“Jenkins is the Way” program&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This year the Advocacy and Outreach SIG started the “Jenkins is the Way” initiative which focuses on promoting user success stories.
Over the year, the team published 54 user stories and six case studies on &lt;a href=&quot;https://jenkinsistheway.io/&quot;&gt;https://jenkinsistheway.io/&lt;/a&gt; as well as a significant amount of community marketing.
We also published a number of testimonial videos advertising user stories,
including this &lt;a href=&quot;https://www.youtube.com/watch?v=fgd1bBlQXBE&quot;&gt;Introduction to &quot;Jenkins is the Way&quot;&lt;/a&gt; video.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See all the stories &lt;a href=&quot;https://jenkinsistheway.io/&quot;&gt;HERE&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;events&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#events&quot; /&gt;Events&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;google-summer-of-code&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#google-summer-of-code&quot; /&gt;Google Summer of Code&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In 2020 we had seven students working in the Jenkins mentoring organization.
We had 6 projects focused on Jenkins and one project focused on Jenkins X.
As usual, in GSoC we focused on problems important to the Jenkins users and community members.
The projects delivered highly anticipated new features and key architecture changes needed for the long-term evolution of Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is the first-ever time in Jenkins when all GSoC students have reached the final evaluation and successfully passed it.
It was an incredible effort by all the project members and, most importantly, by the students. Thanks a lot to them!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Read more: &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/22/gsoc-report/&quot;&gt;&lt;a href=&quot;https://www.jenkins.io/blog/2020/12/22/gsoc-report/&quot; class=&quot;bare&quot;&gt;https://www.jenkins.io/blog/2020/12/22/gsoc-report/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jenkins-in-hacktoberfest-2020&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-in-hacktoberfest-2020&quot; /&gt;Jenkins in Hacktoberfest 2020&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In October we participated in Hacktoberfest.
Our featured projects included the Jenkins core, jenkins.io website and plugins.jenkins.io, Helm charts, and multiple plugins.
We also encouraged contributors to participate in the Documentation as Code and terminology cleanup across the entire Jenkins ecosystem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See the details in the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/events/hacktoberfest/&quot;&gt;Hacktoberfest page&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In total we received 226 pull requests from Hacktoberfest participants.
Some stats per Jenkins GitHub organization:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&#39;jenkinsci&#39;, PRs: 189, Hacktoberfest contributors: 61&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&#39;jenkins-infra&#39;, PRs: 100, Hacktoberfest contributors: 40&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&#39;jenkins-zh&#39;, PRs: 37, Hacktoberfest contributors: 2&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jenkins-at-devops-world&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-at-devops-world&quot; /&gt;Jenkins at DevOps World&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The annual &lt;a href=&quot;https://www.cloudbees.com/devops-world&quot;&gt;DevOps World&lt;/a&gt;,
formerly known as DevOps World | Jenkins World held on Sept 22-24, with workshops on Sept 25.
Just like other events in 2020, DevOps World pivoted to a virtual event but that didn’t mean there was a shortage of sessions or networking opportunities. There were over 50 Jenkins/open-source.
And a special congratulations is in order to this year’s &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/11/devops-world-2020-jenkins-contributors-awarded-top-honors-at-devops-worlds-2020/&quot;&gt;Jenkins Contributor Award&lt;/a&gt; winners:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;James Holderness - Jenkins security MVP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Marky Jackson - Most valuable Jenkins advocate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tim Jacomb - Most valuable Jenkins contributor&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Below are just a few sessions, the full agenda can be found &lt;a href=&quot;https://sessions.devopsworld.com/sessions&quot;&gt;HERE&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cloudbees.com/resources/jenkins-future-pipeline-features&quot;&gt;Jenkins Where It Is and Where It Is Going&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cloudbees.com/resources/jenkins-master-pdi-software&quot;&gt;One Jenkins to Rule them All&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cloudbees.com/resources/jenkins-ui-makeover&quot;&gt;Jenkins UI Gets a Makeover&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cloudbees.com/resources/devsecops-jenkins-pipeline-api-security&quot;&gt;Jenkins Pipeline and DevSecOps for API Security&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;graduation-at-continuous-delivery-foundation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#graduation-at-continuous-delivery-foundation&quot; /&gt;Graduation at Continuous Delivery Foundation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins is the first project to graduate in the CD Foundation.
In August the project announced that the Jenkins project has achieved the graduated status in the &lt;a href=&quot;https://cd.foundation/&quot;&gt;Continuous Delivery Foundation (CDF)&lt;/a&gt;.
Thanks to all contributors who made our graduation possible!
Below you can find a few key changes we have applied during the graduation process:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We introduced a new &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/roadmap/&quot;&gt;public roadmap&lt;/a&gt; for the Jenkins project.
This roadmap aggregates key initiatives in all community areas: features, infrastructure, documentation, community, etc.
It makes the project more transparent to all Jenkins users and adopters, and at the same time helps potential contributors find the hot areas and opportunities for contribution.
The roadmap is driven by the Jenkins community and it has a fully public process documented in &lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/14/README.adoc&quot;&gt;JEP-14&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A new &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/adopters&quot;&gt;list of Jenkins adopters&lt;/a&gt; was introduced on jenkins.io.
This list highlights Jenkins users and references their case studies and success stories,
including ones submitted through the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/04/30/jenkins-is-the-way/&quot;&gt;Jenkins Is The Way&lt;/a&gt; portal.
Please do not hesitate to add your company there!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We passed the &lt;a href=&quot;https://www.coreinfrastructure.org/&quot;&gt;Core Infrastructure Initiative (CII)&lt;/a&gt; certification.
This certification helps us to verify compliance with open source best practices and to make adjustments in the project (see the bullets below).
It also provides Jenkins users and adopters with a public summary about compliance with each best practice.
Details are on the &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/en/projects/3538&quot;&gt;Jenkins core page&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/conduct/&quot;&gt;Jenkins Code of Conduct was updated&lt;/a&gt; to the new version of Contributor Covenant.
In particular, it sets best practices of behavior in the community, and expands definitions of unacceptable behavior.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More information can be found &lt;a href=&quot;https://cd.foundation/announcement/2020/08/04/cd-foundation-announces-jenkins-graduation/&quot;&gt;HERE&lt;/a&gt;, and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/04/cdf-graduation/&quot;&gt;HERE&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;public-roadmap&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#public-roadmap&quot; /&gt;Public Roadmap&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins project now has a public, community-driven &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/roadmap/&quot;&gt;project roadmap&lt;/a&gt;.  Roadmap items are major initiatives and are considered as official plans.
The roadmap aggregates key initiatives in all areas of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Many of the 2020 released roadmap items are mentioned elsewhere in this document, including release automation, &lt;a href=&quot;https://www.coreinfrastructure.org/&quot;&gt;Core Infrastructure Initiative (CII)&lt;/a&gt; certification,
user interface improvements, &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/05/25/read-only-jenkins-announcement/&quot;&gt;read-only configuration pages&lt;/a&gt;,
and Google Summer of Code projects like the GitHub Checks API or External Fingerprint Storage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Other roadmap items include mirror infrastructure improvements, a new &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/12/windows-installers-upgrade/&quot;&gt;Windows installer&lt;/a&gt;,
and preview releases of pluggable storage for external fingerprints, build logs, and unit test results.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;jenkins-2020-elections&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-2020-elections&quot; /&gt;Jenkins 2020 Elections&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In October-December the Jenkins community held the regular elections.
This year we were  electing for 2 governance board members and for all five officer positions, namely: Security, Events, Release, Infrastructure, and Documentation. These roles are an essential part of Jenkins&#39; community governance and well-being. We thank all candidates and voters who participated this year.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Key results:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/halkeye&quot;&gt;Gavin Mogan&lt;/a&gt; and &lt;a href=&quot;https://github.com/markyjackson-taulia&quot;&gt;Marky Jackson&lt;/a&gt; joined the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/governance/#governance-board&quot;&gt;Jenkins Governance Board&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/timja&quot;&gt;Tim Jacomb&lt;/a&gt; was elected as &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#release&quot;&gt;Release Officer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/markyjackson-taulia&quot;&gt;Marky Jackson&lt;/a&gt; became the new &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#events&quot;&gt;Events Officer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Olivier Vernin, Daniel Beck, and Mark Waite will continue as Infrastructure, Security and Documentation officers&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Full election results: &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/03/election-results/&quot;&gt;&lt;a href=&quot;https://www.jenkins.io/blog/2020/12/03/election-results/&quot; class=&quot;bare&quot;&gt;https://www.jenkins.io/blog/2020/12/03/election-results/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;and-even-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#and-even-more&quot; /&gt;And even more&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This blog post does not provide a full overview of what changed in the project,
it is just a slice of the key highlights mentioned by the contributors.
The Jenkins project consists of more than 2000 plugins and components which are developed by thousands of contributors.
Thanks to them, a lot of changes happen in the project every day. We are cordially grateful to everybody who participates in the project, regardless of contribution size. Everything matters: new features, bug fixes, documentation, blog posts, well reported issues, Stackoverflow responses, etc. THANKS A LOT TO ALL CONTRIBUTORS!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So, keep updating Jenkins and exploring new features.
And stay tuned, there is much more to come next year!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;whats-next&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#whats-next&quot; /&gt;What’s next?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Technical changes.&lt;/strong&gt; 2021 will be another busy year for the Jenkins community.
There are many long-overdue changes in the project, which need to happen if we want Jenkins to succeed.
There are many areas on the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/roadmap/&quot;&gt;roadmap&lt;/a&gt;: UX revamp, cloud native Jenkins, pluggable storage, etc.
There will also be a continued cleanup of old dependencies and technical debt.
Several key changes are expected to land in the March LTS baseline: update to Spring Security, XStream unforking, JQuery update, etc.(&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/10/major-changes-in-weekly-releases/&quot;&gt;announcement&lt;/a&gt;).
In addition to that, we will keep working on expanding platform support in Jenkins, including provisioning support for new Java versions and official images for more architectures like Arm.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Documentation.&lt;/strong&gt; Documentation efforts will continue in the next year,
with a focus on documenting Jenkins usage on modern platforms and and automation use-cases.
Wide adoption of documentation-as-code will also continue for plugins By this time almost 600 plugins have been migrated, but there are hundreds more plugins to go.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Security.&lt;/strong&gt; Another important area is Jenkins security. Automation tools like Jenkins are a key part of the software delivery process in organizations, and their security is essential for the security of products.
Misconfigured or outdated systems are a common attack vector, but there are also areas for improvement on the project’s side.
Be sure there will be security advisories and vulnerability fixes in 2021.
We plan to keep adopting best security development and software delivery practices, and to improve dependency management and developer tools in the project. These areas will be in the spotlight for the project next year.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Events.&lt;/strong&gt; Next month we will participate in &lt;a href=&quot;https://fosdem.org/&quot;&gt;FOSDEM&lt;/a&gt;, and there will be a virtual Jenkins stand there.
There will also be a CI/CD devroom.
If you are interested to meet Jenkins contributors, it is a great opportunity. We also plan to continue all outreach programs and on onboarding more contributors.
At the moment we are looking for Google Summer of Code 2020 mentors and project ideas (&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/16/call-for-mentors/&quot;&gt;announcement&lt;/a&gt;).
We are also ready to consider other non-coding project ideas as a part of CommunityBridge.
If you are interested, please contact the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/advocacy-and-outreach/&quot;&gt;Advocacy and Outreach SIG&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;join-us-in-2021&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#join-us-in-2021&quot; /&gt;Join us in 2021!&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are always looking for more contributors, regardless of the profile and experience.
Jenkins is a vast ecosystem which includes many modern technologies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We invite Jenkins users and contributors to participate in the community and to move these initiatives forward!
Join us in the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/mailing-lists/&quot;&gt;mailing lists&lt;/a&gt; and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/&quot;&gt;special interest groups&lt;/a&gt;,&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/22/gsoc-report/</id>
<title>Google Summer of Code 2020 summary</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-12-22T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/22/gsoc-report/" />
<author>
<name>oleg_nenashev</name>
</author>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<category term="jenkins"></category>
<category term="community"></category>
<category term="events"></category>
<category term="mentor"></category>
<summary>
With the mentor summit and the project retrospectives finished in October,
now we can call Google Summer of Code 2020 officially over in the Jenkins community.
On behalf of the Jenkins org team, we would like to thank all participants: students, mentors, applicants, and dozens of other contributors who participated in the project this year.
Google Summer of Code would not be successful without the active participation of the Jenkins community.





If you follow the Jenkins blog, you may have already seen many GSoC 2020 articles created by the project teams.
Here I would like to focus on the key highlights from the project.


Projects


In 2020...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With the mentor summit and the project retrospectives finished in October,
now we can call Google Summer of Code 2020 officially over in the Jenkins community.
On behalf of the Jenkins org team, we would like to thank all participants: students, mentors, applicants, and dozens of other contributors who participated in the project this year.
Google Summer of Code would not be successful without the active participation of the Jenkins community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image right center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/gsoc/jenkins-gsoc-logo_small.png&quot; alt=&quot;Jenkins GSoC&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you follow the Jenkins blog, you may have already seen &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/node/tags/gsoc2020/&quot;&gt;many GSoC 2020 articles&lt;/a&gt; created by the project teams.
Here I would like to focus on the key highlights from the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;projects&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#projects&quot; /&gt;Projects&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In 2020 we had seven students working in the Jenkins mentoring organization.
We had 6 projects focused on Jenkins and one project focused on Jenkins X.
As usual, in GSoC we focused on problems important to the Jenkins users and community members.
The projects delivered highly anticipated new features and key architecture changes
needed for long-term evolution of Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here are the projects we had this year:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/custom-jenkins-distribution-build-service&quot;&gt;Custom Jenkins distribution build service&lt;/a&gt; by &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/sladyn98&quot;&gt;Sladyn Nunes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/external-fingerprint-storage&quot;&gt;External Fingerprint Storage&lt;/a&gt; by &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/stellargo&quot;&gt;Sumit Sarin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/git-plugin-performance&quot;&gt;Git Plugin Performance Improvements&lt;/a&gt; by &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/rishabhbudhouliya&quot;&gt;Rishabh Budhouliya&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/github-checks&quot;&gt;GitHub Checks API for Jenkins Plugins&lt;/a&gt; by &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/XiongKezhi&quot;&gt;Kezhi Xiong&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/jenkins-x-apps-consolidation&quot;&gt;Jenkins X: Apps/Addons consolidation&lt;/a&gt; by &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/nodece&quot;&gt;Zixuan Liu&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/machine-learning&quot;&gt;Machine Learning Plugins for Data Science&lt;/a&gt; by &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/loghijiaha&quot;&gt;Loghi Perinpanayagam&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/winsw-yaml-configs&quot;&gt;Jenkins Windows Services: YAML Configuration Support&lt;/a&gt; by &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/buddhikac96&quot;&gt;Buddhika Chathuranga&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please refer to the project pages for more information, links to the blog posts, and project demos.
Let’s focus on the results instead.
This is the &lt;strong&gt;first ever&lt;/strong&gt; time in Jenkins when all GSoC students have reached the final evaluation and successfully passed it.
It was an incredible effort by all the project members and, most importantly, by the students. Thanks a lot to them!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/gsoc/2020/summary_report/student_photos.png&quot; alt=&quot;GSoC 2020 students&quot; /&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks a lot to all mentors who were guiding students during their projects:
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/linuxsuren&quot;&gt;Zhao Xiaojie&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/kwhetstone&quot;&gt;Kristin Whetstone&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/baymac&quot;&gt;Parichay Barpanda&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/martinda&quot;&gt;Martin d’Anjou&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/oleg_nenashev&quot;&gt;Oleg Nenashev&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/afalko&quot;&gt;Andrey Falko&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/mikecirioli&quot;&gt;Mike Cirioli&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/markewaite&quot;&gt;Mark Waite&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/fcojfernandez&quot;&gt;Francisco Fernandez&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/justinharringa&quot;&gt;Justin Harringa&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/omkar_dsd&quot;&gt;Omkar Deshpande&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/uhafner&quot;&gt;Ulli Hafner&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/timja&quot;&gt;Tim Jacomb&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/marckk&quot;&gt;Kara de la Marck&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/jstrachan&quot;&gt;James Strachan&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/nehagup&quot;&gt;Neha Gupta&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/sharepointoscar&quot;&gt;Oscar Medina&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/nikhildarocha&quot;&gt;Nikhil Da Rocha&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/sahilrkalra&quot;&gt;Sahil Kalra&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/kinow&quot;&gt;Bruno P. Kinoshita&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/imoutsatsos&quot;&gt;Ioannis Moutsatsos&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/markyjackson-taulia&quot;&gt;Marky Jackson&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/shivaylamba&quot;&gt;Shivay Lamba&lt;/a&gt;, and
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/nextturn&quot;&gt;Next Turn&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;GSoC 2020 Org admin team:
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/marckk/&quot;&gt;Kara de la Marck&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/martinda&quot;&gt;Martin d’Anjou&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/markyjackson-taulia&quot;&gt;Marky Jackson&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/oleg_nenashev&quot;&gt;Oleg Nenashev&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;events&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#events&quot; /&gt;Events&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks to the GSoC organization stipend from Google and other donations,
the Jenkins project usually provides travel grants to successful students so that they can visit a major community event, meet their mentors and community members in person, and present their work there.
Here are some notes about the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/01/29/gsoc-report/#gsoc-team-at-devops-world-jenkins-world&quot;&gt;GSoC 2019 travel&lt;/a&gt;.
Unfortunately this year it was not possible, and GSoC went completely virtual this year.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Online meetups&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;In August we organized Jenkins Online Meetups where students have presented their projects
(&lt;a href=&quot;https://www.meetup.com/Jenkins-online-meetup/events/272722782/&quot;&gt;part 1&lt;/a&gt;, &lt;a href=&quot;https://www.meetup.com/Jenkins-online-meetup/events/272722843/&quot;&gt;part 2&lt;/a&gt;).
You can find recordings of these presentations in &lt;a href=&quot;https://www.youtube.com/playlist?list=PLN7ajX_VdyaNZ9rU46k0uT14KAcq3_z68&quot;&gt;this playlist&lt;/a&gt; on the Jenkins YouTube channel.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;DevOps World&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;This year CloudBees, one of the Jenkins corporate sponsors, invited all students to participate in the &lt;a href=&quot;https://www.cloudbees.com/devops-world&quot;&gt;DevOps World&lt;/a&gt; virtual conference on September 23-25.
GSoC students did lighting talks about their projects, attended other conference talks, and joined the Continuous Delivery Foundation booth which represented the project at the conference.
You can find recordings of the talks and all materials &lt;a href=&quot;https://www.cloudbees.com/devops-world/sessions?additional=Community&quot;&gt;here&lt;/a&gt;.
Although the conference was in September, the talks were pre-recorded in early August.
Please refer to the Jenkins online meetup recordings for the recent versions.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;GSoC Mentor summit&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;This is a regular gathering for Google Summer of Code mentors and org admins where they share their experiences about GSoC, outreach programs, community management, and tools.
Usually it is organized as a multi-day unconference after the end of GSoC, with 2-3 representatives from each project.
It has been a great learning experience to participate in it.
This year it was a single-day virtual event, and all mentors were able to attend.
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/shivaylamba/&quot;&gt;Shivay Lamba&lt;/a&gt;, one of the GSoC 2020 mentors, also did a lightning talk about the GSoC projects he was working on in Jenkins and CNCF (&lt;a href=&quot;https://drive.google.com/file/d/1Ian5JvKp9UuAg3k7NnGPefgFwIxQfpJm/view&quot;&gt;slides&lt;/a&gt;).&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;swag&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#swag&quot; /&gt;Swag&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All Google Summer of Code students and mentors get swag from Google.
This year, &lt;a href=&quot;https://cd.foundation/&quot;&gt;Contrinuos Delivery Foundation (CDF)&lt;/a&gt; has sponsored swag for 50 most active GSoC participants:
all students, mentors, and many other contributors who participated and helped the projects to succeed.
This is the third year when the Jenkins organization sends extra GSoC swag,
In the previous years the swag logistics was one of the most challenging tasks for org admins during the entire project.
and we highly appreciate help from CDF with this part.
As DevOps World presenters, the students have also received special edition speaker swag from CloudBees.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/gsoc/2020/summary_report/swag.jpg&quot; alt=&quot;GSoC swag by the Jenkins project&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks a lot to &lt;a href=&quot;https://opensource.google/&quot;&gt;Google&lt;/a&gt;, &lt;a href=&quot;https://cd.foundation/&quot;&gt;Contrinuos Delivery Foundation (CDF)&lt;/a&gt; and &lt;a href=&quot;https://www.cloudbees.com/&quot;&gt;CloudBees&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;retrospective&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#retrospective&quot; /&gt;Retrospective&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After completion of the coding phases,
org admins have reached out to all GSoC 2020 participants to gather their feedback and suggestions.
We also recommended that project teams hold their own retrospective meetings.
Such information is instrumental to continuously improving GSoC in the Jenkins community.
We thank all contributors who shared their feedback!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The organization-wide retrospective was organized as a survey and a series of retrospective meetings.
You can find aggregated results in &lt;a href=&quot;https://docs.google.com/document/d/1NIszUtuXmHiu8X2WrgAEQFK6aVodsmM4I0RSNRf4TS0/edit?usp=sharing&quot;&gt;this Google Doc&lt;/a&gt;.
Overall, we received very positive feedback from students and mentors.
The GSoC framework in Jenkins has matured significantly during the previous years.
The effort we invested to create guidelines and recommendations for all parties helped a lot because all the expectations were known in advance.
As usual, there is much to improve, especially with regards to the community bonding phases and cross-project communications.
We are processing the feedback, and we will expand our documentation and the contributor onboarding plans next year.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;some-personal-notes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#some-personal-notes&quot; /&gt;Some personal notes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have been involved in leading and coordinating Google Summer of Code in open source projects since 2016.
This year I visited the GSoC stand at FOSDEM and met a few organizers and former students.
A few days after, I proposed participating in GSoC at the Jenkins contributor summit in Brussels,
and several contributors supported this idea.
We spent several hours to create the first Jenkins GSoC page and brainstorm on project ideas.
We submitted our application and were accepted.
Thanks a lot to the Google team that gave us a chance!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is great to work with the students and see how they explore the open source community and grow professionally as engineers.
It is also awesome to see how some of them stay in the project and keep contributing,
including becoming plugin maintainers and GSoC mentors.
But, for me, Google Summer of Code is not just about mentoring.
It also helps a lot with the community bonding…​ for the existing community like Jenkins which has a lot of isolated sub-communities in plugins.
Many maintainers work alone, and it can be quite lonely working to maintain a plugin without feedback, developer ideas, and user interactions.
When plugin contributors become project mentors, they join the wider community effort and work in teams.
In many cases they start contributing to the organization-wide activities and goals,
and it grows the &quot;backbone&quot; of the Jenkins community.
Like other community-driven projects, we need such backbone to scale the community and onboard more contributors to the countless Jenkins components.
So far it works really well and GSoC excels among outreach programs in this regard.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I would like to thank the Google Open Source team, students and all Jenkins community members for the great Google Summer of Code this year.
We also thank the Continuous Delivery Foundation for their help to recognize contributors and allow organization administrators to focus on projects.
Last but not least, I would like to thank the Jenkins org admin team:
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/martinda&quot;&gt;Martin d’Anjou&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/markyjackson-taulia&quot;&gt;Marky Jackson&lt;/a&gt;, and
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/marckk/&quot;&gt;Kara de la Marck&lt;/a&gt;.
This was a crazy year for everyone. Regardless of that, the org admins stepped up and took responsibility for students and mentors involved in the project, with a serious time commitment.
Not all work by the organizers is publicly visible (applications, project selection, resolving conflicts),
but this work is essential to the project’s success.
Thanks a lot to org admins and mentors who helped with the administrative tasks this year!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;whats-about-gsoc-2021&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#whats-about-gsoc-2021&quot; /&gt;What’s about GSoC 2021?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Yes, we plan to participate in Google Summer of Code 2021.
The application period for organizations will start in a few months,
but we have already started preparing for the next GSoC session.
We are looking for mentors, org admins and project ideas.
Please &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/gsoc#contacts&quot;&gt;contact us&lt;/a&gt; if you are interested!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/16/call-for-mentors/&quot;&gt;Call for Mentors and Project Ideas&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;./2021/project-ideas&quot;&gt;GSoC 2021 project ideas&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/proposing-project-ideas&quot;&gt;HOWTO: Propose a project idea&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/mentors&quot;&gt;Information for mentors&lt;/a&gt;: guidelines and expectations&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We invite potential students to start exploring the project and the available project ideas.
Original ideas are always welcome in the project, and starting early is a great opportunity to
get introduced to the Jenkins community, collect more information about the problem areas,
and to create a good proposal.
&quot;Start early&quot; is the most popular recommendation from GSoC 2020 participants to future GSoC students,
and we encourage you to follow this advice!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/17/jira-upgrade-for-the-jenkins-project/</id>
<title>Jira upgrade for the Jenkins project</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-12-17T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/17/jira-upgrade-for-the-jenkins-project/" />
<author>
<name>markewaite</name>
</author>
<category term="jenkins"></category>
<category term="infrastructure"></category>
<category term="jira"></category>
<summary>
The Jenkins project has used Jira to track issues for many years.
Jenkins core, Jenkins modules, Jenkins infrastructure, and many Jenkins plugins manage their issue reports with our Jira server.


Jira helps the Jenkins project manage issues and tasks related to over 250&#160;000 Jenkins installations.
It tracks bugs, enhancement requests, tasks, and security issues.
It is used regularly by users around the world.


We&#8217;re grateful for the long-standing contribution that Atlassian provides by donating the Jira license to the Jenkins project.
We&#8217;re grateful to the Oregon State University Open Source Lab for their donation of equipment and bandwidth to host the server.


Upgrade Timeline


We were running Jira...
</summary>
<content type="html">
&lt;div class=&quot;imageblock right text-center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-12-17-jira-upgrade-for-the-jenkins-project/jira-logo.png&quot; alt=&quot;jira logo&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins project has used Jira to track issues for many years.
Jenkins core, Jenkins modules, Jenkins infrastructure, and many Jenkins plugins manage their issue reports with our &lt;a href=&quot;https://issues.jenkins.io/&quot;&gt;Jira server&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jira helps the Jenkins project manage issues and tasks related to over 250 000 Jenkins installations.
It tracks bugs, enhancement requests, tasks, and security issues.
It is used regularly by users around the world.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’re grateful for the long-standing contribution that Atlassian provides by donating the Jira license to the Jenkins project.
We’re grateful to the &lt;a href=&quot;https://osuosl.org/&quot;&gt;Oregon State University Open Source Lab&lt;/a&gt; for their donation of equipment and bandwidth to host the server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;upgrade-timeline&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upgrade-timeline&quot; /&gt;Upgrade Timeline&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We were running Jira 7.13 and had been managing that installation for a few years.
Atlassian announced that Jira 7.13 would end its support life on November 28, 2020.
We needed to upgrade from Jira 7.13 to a more recent version of Jira.
As part of our membership in the Continuous Delivery Foundation, a Linux Foundation initiative, we could use their project services team to manage our Jira server.
We decided to move from hosting our own Jira server to having the Jira experts at the Linux Foundation host it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The upgrade timeline looked like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;November 2019 - Infrastructure team begins discussions about the November 2020 end of support for Jira 7.13&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;August 2020 - First conversations with Linux Foundation to host Jira for the Jenkins project.  Draft of the upgrade plan assembled and shared with the community&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;September 2020 - Schedule for testing week and final transition week proposed.  Authentication options evaluated and selected&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;October 2020 - Test upgrade performed and tested&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;November 2020 - Final upgrade completed and verified&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;confronting-the-complications&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#confronting-the-complications&quot; /&gt;Confronting the Complications&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Initial discussions between the Jenkins infrastructure team and the Linux Foundation identified complications related to authentication and SSL certificates.
We planned, negotiated, and tested our assumptions throughout the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;authentication&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#authentication&quot; /&gt;Authentication&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jira servers at the Linux Foundation typically use Linux Foundation accounts for user access.
Unfortunately, the Jenkins LDAP database includes over 100,000 users and for many of them, Linux Foundation username doesn’t correspond to Jenkins account username.
It was not feasible to transition 100,000 user accounts from the Jenkins LDAP database to the Linux Foundation accounts system and still complete the Jira upgrade before the November 28, 2020 deadline.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Linux Foundation Project Services team evaluated authentication alternatives and confirmed that they could use the Jenkins LDAP server.
Using the Jenkins LDAP server spared us from two transitions, LDAP and Jira, and kept the project timeline feasible.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;ssl-certificates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#ssl-certificates&quot; /&gt;SSL Certificates&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jira servers at the Linux Foundation use Let’s Encrypt to generate SSL certificates for HTTPS.
The Linux Foundation uses the DNS method to obtain SSL certificates.
Unfortunately, the Jenkins project uses the HTTP method to obtain SSL certificates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thankfully, Olivier Vernin of the Jenkins project and Anton Baranov of the Linux Foundation found a solution.
They created an ACME record in the Jenkins DNS server and pointed the issues.jenkins.io DNS record at the new Linux Foundation Jira server.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;building-the-prototype&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#building-the-prototype&quot; /&gt;Building the Prototype&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Anton Baranov created a prototype Jira server, restored an older Jenkins Jira backup, and upgraded it to Jira 8.13.
That first restore detected that we had not provided the Jira attachments or the Jira avatars.
That attachments and avatars added multiple gigabytes to the initial backup data and were vital to complete the update.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;testing-the-upgrade&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#testing-the-upgrade&quot; /&gt;Testing the Upgrade&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A group of volunteers including Jenkins users, security team members, and infrastructure team members tested the upgrade during the week of October 26, 2020.
The tests confirmed that authentication worked as expected and that the Jira prototype was functioning as expected.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We thank the test team, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Daniel Beck&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tim Jacomb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Olivier Vernin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mark Waite&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The tests included:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Creating and routing issues&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commenting on issues&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Viewing dashboards with the expected content&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LDAP settings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Email notification&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The tests detected minor issues that Anton was able to correct in preparation for the final upgrade.
The testing team agreed that the tests were successful.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;deploying-the-upgrade&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#deploying-the-upgrade&quot; /&gt;Deploying the Upgrade&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Olivier Vernin announced the final upgrade by &lt;a href=&quot;https://groups.google.com/g/jenkins-infra/c/i7SaB-24L1o/m/NeUFrH82AAAJ&quot;&gt;email to the Jenkins infra list&lt;/a&gt; with details of the changes happening during the upgrade.
Monday, November 9, 2020, the final backup of the existing Jira server was copied into the new Linux Foundation server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The final upgrade encountered issues that we had not seen during the initial tests.
The &quot;bumps and bruises&quot; from the unexpected issues were resolved by Anton Baranov as he used a multi-step upgrade process.
The steps included:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Restore the earlier backup to Jira 7.13&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restore the most recent backup&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade to Jira 8.13&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install avatars, attachments, and other images&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update DNS entries to point to the new Jenkins Jira server&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;lessons-from-the-upgrade&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#lessons-from-the-upgrade&quot; /&gt;Lessons from the Upgrade&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Lessons were related to timing, estimation, and communication.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;scheduling-the-upgrade&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#scheduling-the-upgrade&quot; /&gt;Scheduling the Upgrade&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The test upgrade started the week of October 19, 2020.
It took several days longer than originally expected.
Thankfully, we had allowed an extra week between the test upgrade and the production upgrade.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://groups.google.com/g/jenkins-infra/c/8SC8bQuhD7s/m/Qtnz9o8gBAAJ&quot;&gt;originally announced schedule&lt;/a&gt; for the final upgrade was intentionally placed in a week that would not include a long term support release.
That reduced the risk of disruption if the upgrade took longer than required or failed and we had to roll back.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;estimating-the-work&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#estimating-the-work&quot; /&gt;Estimating the Work&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Discussions with the Jenkins project Jira administrators and the Linux Foundation Jira experts provided very reasonable estimates of time to complete the work.
We intentionally allowed additional time between first test and final upgrade.
We needed that additional time and used it well as the testing week.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;communicating-the-plan&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#communicating-the-plan&quot; /&gt;Communicating the Plan&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The distributed nature of the Jenkins project makes communication challenging for major changes.
We communicated plans at various stages but still found occasions where the communication was insufficient.
In this case, the adage held true that it is, &quot;impossible to communicate too much&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks for your patience during the upgrade and thanks to the Linux Foundation for administering the Jenkins Jira server.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/16/call-for-mentors/</id>
<title>Google Summer of Code 2021 call for Project Ideas and Mentors</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-12-16T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/16/call-for-mentors/" />
<author>
<name>marckk</name>
</author>
<category term="gsoc"></category>
<category term="gsoc2021"></category>
<category term="community"></category>
<category term="events"></category>
<category term="developer"></category>
<summary>
Google Summer of Code (GSoC)
is a program where students are paid a stipend by Google to work on a free open source project.
Students work on the project for three months (June to August).
Prior to the coding phase, there is a month of community bonding, to welcome students to the Jenkins community and acquaint them with the projects processes for communication and collaboration.
Mentors are actively involved with students from March when students start to work on and submit their applications.
(see the timeline)








We are looking for project ideas and mentors to participate in GSoC 2021.
GSoC project ideas are coding projects that university...
</summary>
<content type="html">
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot; /&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
&lt;a href=&quot;https://developers.google.com/open-source/gsoc/&quot;&gt;Google Summer of Code&lt;/a&gt; (GSoC)
is a program where students are paid a stipend by Google to work on a free open source project.
Students work on the project for three months (June to August).
Prior to the coding phase, there is a month of community bonding, to welcome students to the Jenkins community and acquaint them with the projects processes for communication and collaboration.
Mentors are actively involved with students from March when students start to work on and submit their applications.
(see the &lt;a href=&quot;https://summerofcode.withgoogle.com/how-it-works/#timeline&quot;&gt;timeline&lt;/a&gt;)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image right center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/gsoc/jenkins-gsoc-logo_small.png&quot; alt=&quot;Jenkins GSoC&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are looking for project ideas and mentors to participate in GSoC 2021.
GSoC project ideas are &lt;strong&gt;coding projects&lt;/strong&gt; that university or college students can accomplish in about three months.
The coding projects can be new features, plugins, test frameworks, infrastructure, etc.
Anyone can submit a project idea, but of course we like it even better if you offer to mentor your project idea.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We accept new project ideas at any time,
However, project ideas need to be finalised before February 19th, 2021 at 7pm UTC,
which is the deadline for the Jenkins organization to apply to the GSoC program.
Please send us your project ideas before the beginning of February so they can get a proper review by the GSoC committee and by the community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;how-to-submit-a-project-idea&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-submit-a-project-idea&quot; /&gt;How to submit a project idea&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Create a pull-request with your idea in a &lt;code&gt;.adoc&lt;/code&gt; file
in the &lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/tree/master/content/projects/gsoc/2021/project-ideas&quot;&gt;project ideas&lt;/a&gt;.
It is not necessary to submit a Google Doc, but it will still work if you want to do that.
See the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/proposing-project-ideas&quot;&gt;instructions&lt;/a&gt; on submitting ideas which include an &lt;code&gt;.adoc&lt;/code&gt; template and some examples.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;current-list-of-ideas&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#current-list-of-ideas&quot; /&gt;Current list of ideas&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We currently have a &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2021/project-ideas&quot;&gt;list of project ideas&lt;/a&gt; for students to browse.
Note that this list is subject to change.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;what-does-mentoring-involve&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#what-does-mentoring-involve&quot; /&gt;What does mentoring involve?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Potential mentors are invited to read the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/mentors&quot;&gt;information for mentors&lt;/a&gt;.
Note that being a GSoC mentor does not require expert knowledge of Jenkins.
Mentors do not work alone. We make sure that every project has at least two mentors.
GSoC org admins will help to find technical advisers, so you can study together with your students.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mentoring takes about 5 to 8 hours of work per week (more at the start, less at the end).
Mentors provide guidance, coaching, and sometimes a bit of cheerleading.
They review student proposals, pull-requests and the students presentations
at the evaluation phase.
They fill in the Google provided evaluation report form at the end of coding periods.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;what-do-you-get-in-exchange&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#what-do-you-get-in-exchange&quot; /&gt;What do you get in exchange?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In return of mentoring, a student works on your project full time for three months.
Think about the projects that you’ve always wanted to do but never had the time…​&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mentoring is also an opportunity to improve your management and people skills, while giving back to the community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There will be a Google Mentor Summit which takes place every year.
In 2020, the Mentor Summit was virtual, but in previous years the summit has taken place in person.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/10/08/google-summer-of-code-mentor-and-org-admin-perspective/&quot;&gt;this post&lt;/a&gt;
about the 2019 in person Mentor Summit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;GSoC is a fantastic program and the Jenkins project is happy to participate in GSoC again in 2021!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For any question, you can find the GSoC Org Admins,
mentors and participants on the &lt;a href=&quot;https://gitter.im/jenkinsci/gsoc-sig&quot;&gt;GSoC SIG Gitter chat&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/11/devops-world-2020-jenkins-contributors-awarded-top-honors-at-devops-worlds-2020/</id>
<title>“Jenkins Contributors Awarded Top Honors at DevOps World 2020”</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-12-11T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/11/devops-world-2020-jenkins-contributors-awarded-top-honors-at-devops-worlds-2020/" />
<author>
<name>alyssat</name>
</author>
<category term="event"></category>
<category term="devopsworld2020"></category>
<summary>
At DevOps World on September 24, 2020, through the sponsorship of CloudBees, three Jenkins contributors were recognized for their contributions to the Jenkins project.  The Jenkins Contributor Awards honor those who have made significant contributions to the Jenkins project.  The 2020 Jenkins Contributor Award winners are:


Most Valuable Jenkins Contributor


This award is presented to an individual who has contributed to the Jenkins project the most through new features, bug fixes or plugin development efforts.




Tim Jacomb - Tim is everywhere in the Jenkins community: plugins, Jenkins core maintenance, Google Summer of Code, infrastructure, and new initiatives like GitHub App authentication...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At DevOps World on September 24, 2020, through the sponsorship of CloudBees, three Jenkins contributors were recognized for their contributions to the Jenkins project.  The Jenkins Contributor Awards honor those who have made significant contributions to the Jenkins project.  The 2020 Jenkins Contributor Award winners are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;most-valuable-jenkins-contributor&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#most-valuable-jenkins-contributor&quot; /&gt;Most Valuable Jenkins Contributor&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This award is presented to an individual who has contributed to the Jenkins project the most through new features, bug fixes or plugin development efforts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/timja&quot;&gt;Tim Jacomb&lt;/a&gt;&lt;/strong&gt; - Tim is everywhere in the Jenkins community: plugins, Jenkins core maintenance, Google Summer of Code, infrastructure, and new initiatives like GitHub App authentication and Dark Theme. His software, frontend and infrastructure skills help to push the Jenkins project forward. Several examples of features shipped by Tim in 2020: Read-only Jenkins configuration, GitHub App Authentication support, Jenkins Dark Theme and many other smaller features here and there. Tim is also the second most active code reviewer in the Jenkins core.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;jenkins-security-mvp&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-security-mvp&quot; /&gt;Jenkins Security MVP&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This award is presented to the individual who most consistently provides excellent Jenkins security reports or resolves Jenkins security issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/j4james&quot;&gt;James Holderness&lt;/a&gt;&lt;/strong&gt; - Security issues reported by James have been included in nine of the nineteen security advisories published by the Jenkins project in the last 12 months. His issue reports have detected many cases where sensitive information was being stored insecurely by plugin maintainers. Jenkins users and the Jenkins security team are sincerely grateful for the issue reports that James has provided.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;most-valuable-jenkins-advocate&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#most-valuable-jenkins-advocate&quot; /&gt;Most Valuable Jenkins Advocate&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This award is presented to an individual who has helped advocate for Jenkins through organization of a local Jenkins Area Meetup(s), or virtual equivalent.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/markyjackson-taulia&quot;&gt;Marky Jackson&lt;/a&gt;&lt;/strong&gt; -  Marky has been very active in many Jenkins advocacy &amp;amp; Outreach initiatives. He was a leader of the Advocacy &amp;amp; Outreach SIG, and he participated in many promotional initiatives organized by the SIG. Marky was also a copy-editor of the Jenkins Twitter account where he contributed a lot to it. In addition to that, Marky has presented talks as well as provided technical support on Jenkins at multiple events including Jenkins Online Meetups, in person as well as virtual conferences.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Congratulations to James, Marky and Tim! We are grateful for their contributions to the betterment of the Jenkins project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/05/3-Cases-Jenkins-Success-stories-from-the-community/</id>
<title>3 Cases: Jenkins success stories from the community</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-12-05T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/05/3-Cases-Jenkins-Success-stories-from-the-community/" />
<author>
<name>alyssat</name>
</author>
<category term="Jenkinsistheway"></category>
<category term="Jenkinsuserstories"></category>
<summary>
Back in April, when we started canvassing the Jenkins community for user stories concerning how Jenkins helped enterprise companies, startups, and students, we thought we&#8217;d see some exciting tales of DevOps inspiration and CI/CD integration. We found that some submitted stories were far too big to be constrained by our format of 'background/goal/solution/results.'


Some Jenkins users had a much more complex story to tell, whether it was about getting upper management to buy-in, keeping developers happy, or simply making sure pipelines weren&#8217;t just bottlenecks in disguise.


Here are a handful of Jenkins Case Studies we&#8217;ve published in the past few months, with...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Back in April, when we started canvassing the Jenkins community for user stories concerning how Jenkins helped enterprise companies, startups, and students, we thought we’d see some exciting tales of DevOps inspiration and CI/CD integration. We found that some submitted stories were far too big to be constrained by our format of &#39;background/goal/solution/results.&#39;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some Jenkins users had a much more complex story to tell, whether it was about getting upper management to buy-in, keeping developers happy, or simply making sure pipelines weren’t just bottlenecks in disguise.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here are a handful of &lt;a href=&quot;https://jenkinsistheway.io/case-studies/&quot;&gt;Jenkins Case Studies&lt;/a&gt; we’ve published in the past few months, with many more on the way!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;case-study-1-d4science&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#case-study-1-d4science&quot; /&gt;Case Study #1: D4Science&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;amping-up-scientific-research-with-cicd-powered-by-jenkins&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#amping-up-scientific-research-with-cicd-powered-by-jenkins&quot; /&gt;Amping up scientific research with CI/CD powered by Jenkins&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To promote open science practices and support scientific communities while serving 11k registered users in 45 countries, &lt;a href=&quot;https://www.d4science.org/&quot;&gt;D4Science&lt;/a&gt; introduced a new delivery pipeline that replaced their pre-existing build platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Of course, they had to build and release their software framework (gCube) in a way that would support multi-project releases at scale — from 200+ Git repositories within the same day! It had to be fast, automate all release activities, and it had to deliver incremental releases to address user requirements quickly. Most of all, the solution had to be cost-effective.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Using Jenkins, they created an innovative approach to software delivery: a continuous integration/continuous delivery (CI/CD) pipeline, scalable, easy to maintain, and upgradable at a minimal cost.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Discover how D4Science empowers e-Science and virtual research communities with software released via Jenkins. &lt;a href=&quot;https://jenkinsistheway.io/case-studies/d4science-amps-up-their-scientific-research-platform-with-ci-cd-powered-by-jenkins/&quot;&gt;Read the Jenkins case study featuring D4Science here!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;case-study-2-gainsight&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#case-study-2-gainsight&quot; /&gt;Case Study #2: Gainsight&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;humanizing-csx-with-tech-innovation-and-a-robust-devsecops-platform&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#humanizing-csx-with-tech-innovation-and-a-robust-devsecops-platform&quot; /&gt;Humanizing CSX with tech innovation and a robust DevSecOps platform&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gainsight.com/&quot;&gt;Gainsight’s&lt;/a&gt; customer service experience platform helps customer success teams at more than 100 leading IT and healthcare clients. How? By driving engagement for tens of thousands of their customers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That’s why the engineering team at Gainsight approached the customer experience by building a smarter, faster DevSecOps platform using Jenkins. They stuck to an infrastructure-as-code approach while integrating various tools and programming languages all within the platform. And they secured processes with better visibility and air-tight quality control.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The result was a flexible DevSecOps infrastructure, 95% of which is scalable with code. And the cost of infrastructure costs was 40% less. That provides Gainsight with ease of collaboration, keener operational insight, and — because builds are 30% faster — the ability to stay a step ahead of the competition.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Read why Gainsight’s lead DevOps engineer, Prudviraj Pentakota, says &quot;Jenkins is the epicenter of DevSecOps in our organization.&quot; &lt;a href=&quot;https://jenkinsistheway.io/case-studies/jenkins-case-study-gainsight/&quot;&gt;Get the full story here.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;case-study-3-avoris-travel&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#case-study-3-avoris-travel&quot; /&gt;Case Study #3: Avoris Travel&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;reinventing-travel-with-an-inventive-technology-platform&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#reinventing-travel-with-an-inventive-technology-platform&quot; /&gt;Reinventing travel with an inventive technology platform&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Part of Barceló Group, &lt;a href=&quot;https://www.avoristravel.com/&quot;&gt;Ávoris Travel&lt;/a&gt; is behind prominent destination travel brands like LeSki, Le Musik, and a selection of author travels under its &quot;Viagens Com Assinatura&quot; signature travel concept. A proprietary database and a smart, dynamic booking engine are the tickets to offering differentiating and inventive travel opportunities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Also unique to Avoris is a discreet machining technology that enables agents to enter specific criteria to search and find all types of trips and travel opportunities across the entire network.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&quot;Our infrastructure is very important because we have to be online to meet customer demand anywhere in the world,&quot; said Alejandro Alvarez Vazquez, Sysadmin, Avoris Travel. &quot;Our CI/CD platform is used by 200 people. The services that we build and deploy are used by thousands of potential clients and by our network of 675 own agencies located in Spain and Portugal.&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://jenkinsistheway.io/case-studies/jenkins-case-study-avoris-travel/&quot;&gt;Read the case study&lt;/a&gt; to learn how the flexibility of Jenkins plugins helped Avoris reduce build times by over 50% and became a go-to, scalable infrastructure supporting 675 agencies and over 2.8 million international consumers.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;whats-your-story&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#whats-your-story&quot; /&gt;What’s your story?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We want to know what you’re building with Jenkins and would love to post your case study on our &lt;a href=&quot;https://jenkinsistheway.io/&quot;&gt;&quot;Jenkins Is The Way&quot;&lt;/a&gt; website, a global showcase of how developers and engineers build, deploy, and automate great stuff with Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The best way to get started is to &lt;a href=&quot;https://www.surveymonkey.com/r/JenkinsIsTheWay&quot;&gt;share your Jenkins User story with us&lt;/a&gt;. We’ll send you a free Jenkins Is The Way T-Shirt in return and publish your account for the entire Jenkins community to see. And if it’s selected for a Case Study, we’ll be in touch for a one-on-one interview! Hope to hear from you soon!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/04/gsod-project-report/</id>
<title>GSOD Project Report: Document Jenkins on Kubernetes</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-12-04T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/04/gsod-project-report/" />
<author>
<name>zaycodes</name>
</author>
<category term="kubernetes"></category>
<category term="helm"></category>
<category term="documentation"></category>
<category term="gsod"></category>
<category term="gsod2020"></category>
<summary>
Jenkins is the world&#8217;s leading open-source automation server used by companies large and small around the globe to implement continuous integration and continuous delivery.
Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation.
Kubernetes is compatible with the majority of CI/CD tools which allow developers to run tests, deploy builds in Kubernetes and update applications with no downtime.
One of the most popular CI/CD tools now is Jenkins thereby making Jenkins on Kubernetes a popular theme for Jenkins users.


During the Google Season Of Docs program, I worked with the Jenkins organization on...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins is the world’s leading open-source automation server used by companies large and small around the globe to implement continuous integration and continuous delivery.
Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation.
Kubernetes is compatible with the majority of CI/CD tools which allow developers to run tests, deploy builds in Kubernetes and update applications with no downtime.
One of the most popular CI/CD tools now is Jenkins thereby making Jenkins on Kubernetes a popular theme for Jenkins users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the Google Season Of Docs program, I worked with the Jenkins organization on the project - Document Jenkins on Kubernetes.
The original proposal for this project can be found &lt;a href=&quot;https://docs.google.com/document/d/1zTEKtOp2i1K2fw5RQ_a_KVOB2z0gz9987NYzTnIS6G8/edit?usp=sharing&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;project-goals&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#project-goals&quot; /&gt;Project Goals&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After my proposal was accepted by the Jenkins organization, my mentors and I agreed on the expectations for the Google Season of Docs project.
The goal of this project was to create a new Kubernetes Volume which would describe the concepts, techniques, and choices for Kubernetes users running Jenkins thereby providing the following advantages:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Improve the user experience of Jenkins on Kubernetes users by giving them a one-stop-shop for information on Jenkins on Kubernetes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make it easy to track, update and maintain information on Jenkins on Kubernetes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reference the existing community documentation for Jenkins on K8s (plugins and tools/integrations).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to guides, tutorials and explanations of concepts and techniques in Jenkins on Kubernetes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Just-In-Time documentation which means that rather than documenting every feature comprehensively, we produce and release documentation in bits but continuously based on popular questions, feedback and area of interests gathered from the community and users.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;community-bonding-planning-the-solution&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#community-bonding-planning-the-solution&quot; /&gt;Community Bonding: Planning the solution&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Find below an outline of my activities during the community bonding phase:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Setting up communication channels: meetings, mailings, chats: My mentors and I agreed on the right time and channel for communication due to time difference.
We agreed to meet twice weekly, on Mondays and Thursdays at 7:00 PM GMT +1 and use Jenkins documentation &lt;a href=&quot;https://gitter.im/jenkinsci/docs&quot;&gt;gitter&lt;/a&gt; channel for other communications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contacting Stakeholders and onboarding contributors: The project was  announced on social media and different Jenkins channels.
I wrote a &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/25/document-jenkins-on-kubernetes-introduction/&quot;&gt;blog post&lt;/a&gt; to announce the project and created a &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/docs/gsod/2020/projects/document-jenkins-on-kubernetes/&quot;&gt;project page&lt;/a&gt; on Jenkins.io.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge transfer: I and my mentors planned knowledge sharing sessions and fixed tentative dates based on the availability of the trainers.
My mentors also shared useful resources to help me prepare for the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Getting permissions: I and my mentors agreed I didn’t need any special permissions from the beginning, however, this topic was left open for discussion if the need arose later on in the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pre-planning of the project: I refined my goals and set expectations with my mentor and also learned more about the community(Jenkins).
I also had to ensure that the proposed documentation structure I drafted was in line with the goals of the organization so my mentors vetted it and we finalized on the proposed sections that I was supposed to work on.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documentation-development-phase&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#documentation-development-phase&quot; /&gt;Documentation Development Phase&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;knowledge-sharing-sessions&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#knowledge-sharing-sessions&quot; /&gt;Knowledge Sharing Sessions&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the development phase, my mentors hosted two knowledge sharing sessions:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;katacoda-and-helm-by-marky-jackson&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#katacoda-and-helm-by-marky-jackson&quot; /&gt;Katacoda and Helm by &lt;a href=&quot;https://twitter.com/markyjackson5&quot;&gt;Marky Jackson&lt;/a&gt;&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See the &lt;a href=&quot;https://docs.google.com/presentation/d/1LD7btYQaSiI3R8226OIAI6EIUqRZHTyjefVMdF4ydSg/edit?usp=sharing&quot;&gt;slides&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;800&quot; height=&quot;420&quot; src=&quot;https://www.youtube.com/embed/BkIiGXDCEGA?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;helm-by-torsten-walter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#helm-by-torsten-walter&quot; /&gt;Helm by &lt;a href=&quot;https://twitter.com/torsten_walter&quot;&gt;Torsten Walter&lt;/a&gt;&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See the &lt;a href=&quot;https://docs.google.com/presentation/d/1RS8PwlR_FzxYypBlwtp4LcZls8hr3dG_4KJ65U00Xlo/edit#slide=id.gc6f80d1ff_0_0&quot;&gt;slides&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;800&quot; height=&quot;420&quot; src=&quot;https://www.youtube.com/embed/9WIGVLBIfNM?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These sessions gave me an in-depth understanding of concepts and tools needed for the project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jenkins-on-kubernetes-documentation-skeleton&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-on-kubernetes-documentation-skeleton&quot; /&gt;Jenkins on Kubernetes Documentation Skeleton&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the application phase, I drafted a &lt;a href=&quot;https://docs.google.com/document/d/1wMeeN4oA7AN4F3pfLBIAJZWXD7PdqSKHotdk76yCw68/edit?usp=sharing&quot;&gt;structure&lt;/a&gt; describing the proposed Jenkins on Kubernetes section.
My intention was to use it as a guide during the implementation phase of the project, but when the development phase kicked off, my mentors and I thought of a better approach to creating a new Jenkins on Kubernetes section which was to add the Jenkins on Kubernetes contents to existing related sections for easier navigation and better user experience.
An example of this approach would be creating the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/&quot;&gt;Installing Jenkins on Kubernetes&lt;/a&gt; section under the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/&quot;&gt;Installing Jenkins&lt;/a&gt; section rather than putting it under an entirely new section.
With this new approach, I was assigned a task to create a skeleton with all the proposed Jenkins on Kubernetes sections on Jenkins.io and mark these sections as
Work In Progress (WIP).
The Plan was to use this skeleton as a guide throughout the GSOD Project.
The Jenkins on Kubernetes skeleton PR can be found &lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/pull/3845&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;documenting-jenkins-on-kubernetes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#documenting-jenkins-on-kubernetes&quot; /&gt;Documenting Jenkins on Kubernetes&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While working on this project, I had to do a lot of research and test all the documented steps locally before pushing the documentation out for review.
I also made sure to use updated terms and terminologies where necessary like Controller instead of Master and Agents instead of Slave.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the documentation phase, I was able to work on documenting &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/&quot;&gt;Installing Jenkins on Kubernetes&lt;/a&gt; with three sections &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#install-jenkins-with-helm-v3&quot;&gt;Helm&lt;/a&gt;, &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#install-jenkins-with-yaml-files&quot;&gt;Set of Yaml files&lt;/a&gt; and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#install-jenkins-with-jenkins-operator&quot;&gt;Jenkins Operator&lt;/a&gt;.
I also worked on creating a directory for Jenkins on kubernetes sample files in Jenkins.io repository, documenting &lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/pull/3979&quot;&gt;Scaling Jenkins on Kubernetes&lt;/a&gt; and Jenkins on AWS which is still in progress.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;work-done&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#work-done&quot; /&gt;Work Done&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Pull Requests&lt;/strong&gt;: All the pull requests I submitted to Jenkins.io documentation can be found &lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/pulls?q=is%3Apr+author%3Azaycodes&quot;&gt;here&lt;/a&gt;.
This &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Jvu9HkWmNycjMkGxUkgCQXhkgX4gzvTQsFn7i7c9NUA/edit?usp=sharing&quot;&gt;spreadsheet&lt;/a&gt; contains links to the published documentation on &lt;a href=&quot;https://www.jenkins.io/&quot;&gt;Jenkins.io&lt;/a&gt;.
The &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Jvu9HkWmNycjMkGxUkgCQXhkgX4gzvTQsFn7i7c9NUA/edit?usp=sharing&quot;&gt;spreadsheet&lt;/a&gt; also highlights the initial proposed tasks and the status of each of them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you would like to contribute to the Jenkins on Kubernetes documentation, you can check out pending tasks &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Jvu9HkWmNycjMkGxUkgCQXhkgX4gzvTQsFn7i7c9NUA/edit?usp=sharing&quot;&gt;here&lt;/a&gt; and reach out in the Jenkins documentation &lt;a href=&quot;https://gitter.im/jenkinsci/docs&quot;&gt;gitter&lt;/a&gt; channel.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;challenges&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#challenges&quot; /&gt;Challenges&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Using a Windows computer was a bit of a challenge for me.
To run Jenkins.io locally, the project uses GNU/Make and Docker in order to generate the fully statically generated &lt;a href=&quot;https://www.jenkins.io/&quot;&gt;jenkins.io&lt;/a&gt; web site.
The key tool for converting source code into the site is the &lt;a href=&quot;https://github.com/awestruct/awestruct&quot;&gt;Awestruct&lt;/a&gt; static site generator, which is downloaded automatically as part of the build process.
To achieve this, I needed to have GNU/Make and Docker available on my machine.
Docker was not a problem, but to achieve the latter, I needed to use &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/install-win10&quot;&gt;Windows Subsystem for Linux&lt;/a&gt; (WSL).
WSL had two versions WSL1 and WSL2. Using WSL2 would have been much more convenient, but my version of windows wasn’t compatible with WSL2 as it required Version 1903 or higher, with Build 18362 or higher for x64 systems.
With this obstacle, I had to stick to making WSL1 work but I still couldn’t get this to work, a series of issues came up which I was able to pass through with the help of my mentors until I got stuck at permission issues.
I raised the issue with my mentor and after looking through the issue with me and trying to solve it to no avail, he suggested setting up an Ubuntu VM in Hyper-V.
This &lt;a href=&quot;https://www.nakivo.com/blog/run-linux-hyper-v/&quot;&gt;article&lt;/a&gt; helped me achieve this and that solved my problem.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;what-did-i-learn&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#what-did-i-learn&quot; /&gt;What did I learn?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I learned a lot more about the Jenkins project, Kubernetes, helm package manager, Jenkins Operator and much more.
This project also gave me the opportunity to work with cloud providers like AWS which was totally new to me and also learn from field experts through knowledge sharing sessions and weekly meetings with my mentors and org admin.
My technical writing skill and communication skill have definitely become better and I owe it to this project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Overall, contributing to the Jenkins.io project is an amazing experience for me.
I have been using Jenkins, and the fact that I was able to contribute to the organization and collaborate with the community is an honor.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/03/election-results/</id>
<title>2020 Jenkins Board and Officer Elections Results</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-12-03T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/03/election-results/" />
<category term="community"></category>
<category term="governance"></category>
<category term="governance-board"></category>
<category term="elections"></category>
<summary>
The Jenkins community has recently completed the 2020 elections.
On behalf of the Jenkins community and the elections committee,
we congratulate all newly elected board members and officers!
We also thank all candidates and voters who participated this year.


Election results:




Gavin Mogan and Marky Jackson will join
Kohsuke Kawaguchi,  Ullrich Hafner and Oleg Nenashev
on the Jenkins Governance Board


Tim Jacomb was elected as Release Officer


Marky Jackson will become the new Events Officer (uncontested)


Olivier Vernin will continue in the role of Infrastructure Officer for another term (uncontested)


Daniel Beck will continue in the role of Security Officer for another term (uncontested)


Mark Waite will continue in the role...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image right center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/governance/elections/2020/opengraph.png&quot; alt=&quot;Jenkins Elections&quot; height=&quot;178&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins community has recently completed the 2020 elections.
On behalf of the Jenkins community and the elections committee,
we congratulate all newly elected board members and officers!
We also thank all candidates and voters who participated this year.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Election results:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/halkeye&quot;&gt;Gavin Mogan&lt;/a&gt; and &lt;a href=&quot;https://github.com/markyjackson-taulia&quot;&gt;Marky Jackson&lt;/a&gt; will join
&lt;a href=&quot;https://github.com/kohsuke&quot;&gt;Kohsuke Kawaguchi&lt;/a&gt;,  &lt;a href=&quot;https://github.com/uhafner&quot;&gt;Ullrich Hafner&lt;/a&gt; and &lt;a href=&quot;https://github.com/oleg-nenashev&quot;&gt;Oleg Nenashev&lt;/a&gt;
on the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/governance/#governance-board&quot;&gt;Jenkins Governance Board&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/timja&quot;&gt;Tim Jacomb&lt;/a&gt; was elected as &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#release&quot;&gt;Release Officer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/markyjackson-taulia&quot;&gt;Marky Jackson&lt;/a&gt; will become the new &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#events&quot;&gt;Events Officer&lt;/a&gt; (uncontested)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/olblak&quot;&gt;Olivier Vernin&lt;/a&gt; will continue in the role of &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#infrastructure&quot;&gt;Infrastructure Officer&lt;/a&gt; for another term (uncontested)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/daniel-beck&quot;&gt;Daniel Beck&lt;/a&gt; will continue in the role of &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#security&quot;&gt;Security Officer&lt;/a&gt; for another term (uncontested)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/MarkEWaite&quot;&gt;Mark Waite&lt;/a&gt; will continue in the role of &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#documentation&quot;&gt;Documentation Officer&lt;/a&gt; for another term (uncontested)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The board positions and officer roles are an essential part of Jenkins&#39; community governance and well-being,
and we are excited to see contributors taking these roles.
If you are interested to learn more, please see the blog post below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;governance-board-election-details&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#governance-board-election-details&quot; /&gt;Governance Board election details&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This year we had &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/10/28/election-candidates/#governance-board&quot;&gt;nine candidates&lt;/a&gt; participating in Jenkins Governance Board elections:
Andrey Falko, Ewelina Wilkosz, Frederic Gurr, Gavin Mogan, Justin Harringa,
Mark Waite, Marky Jackson, Steven Terrana, and Zhao Xiaojie (Rick).
All of them are awesome community leaders who actively contribute to the Jenkins project and
represent its users.
It would be an honor to have them on the Jenkins board.
Regardless of the election results, we appreciate their participation and the time they invested in these elections.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This year we were electing 2 governance board members.
We were using the &lt;a href=&quot;https://civs.cs.cornell.edu/&quot;&gt;Condorcet Internet Voting Service&lt;/a&gt; that allows voters to rank their choices rather than just picking their one favorite choice.
You can find full voting results &lt;a href=&quot;https://civs.cs.cornell.edu/cgi-bin/results.pl?id=E_f622a8a94f337478&quot;&gt;here&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Mark Waite  (Condorcet winner: wins contests with all other choices)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Marky Jackson&lt;/strong&gt;  loses to Mark Waite by 48–12&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Gavin Mogan&lt;/strong&gt;  loses to Mark Waite by 51–10, loses to Marky Jackson by 31–20&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ewelina Wilkosz  loses to Mark Waite by 48–14, loses to Gavin Mogan by 29–28&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Justin Harringa  loses to Mark Waite by 51–11, loses to Ewelina Wilkosz by 35–16&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Steven Terrana  loses to Mark Waite by 47–16, loses to Justin Harringa by 20–19&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Zhao Xiaojie (Rick)  loses to Mark Waite by 57–5, loses to Steven Terrana by 25–24&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Frederic Gurr  loses to Mark Waite by 52–10, loses to Zhao Xiaojie (Rick) by 25–24&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Andrey Falko  loses to Mark Waite by 56–6, loses to Frederic Gurr by 26–13&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Although Mark Waite came first in the voting results,
being on the board would violate the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board-election-process/#corporate-involvement&quot;&gt;Corporate Involvement clause&lt;/a&gt; which states that
&quot;the number of board members affiliated with one company must be less than 50%&quot;.
Mark will continue to be &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#documentation&quot;&gt;Documentation officer&lt;/a&gt;.
Regardless of his official role, Mark has been leading many initiatives and helping a lot with various aspects of the community governance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Congratulations to Marky and Gavin, and thanks to all candidates!
All new board members are elected for a 2-year term unless they decide to step down earlier.
The estimated end of the term for them is December 02, 2022.
We would also like to thank &lt;a href=&quot;https://github.com/slide&quot;&gt;Alex Earl&lt;/a&gt; and &lt;a href=&quot;https://github.com/rtyler&quot;&gt;R. Tyler Croy&lt;/a&gt; who step down from the Jenkins Governance Board this year.
Thanks to them for all contributions and for continued community leadership.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Statement from Marky Jackson:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is a tremendous honor to be elected to this roles. I am so humbled.
Being part of this community is a fantastic opportunity that I have had. It has given me so many joys. Whether helping to foster community collaboration, working on the roadmap, leading various SIG’s or helping meetups or conferences, this community has given me so much.
My goals are bridging the Jenkins project with other interoperability projects, defining the roadmap, achieving roadmap goals, continuing to help meetups thrive, and our conferences focus on the community. I want to ensure we are transparent in our goals and how we achieved them. I want to continue to build up a welcoming community that holds diversity and inclusion at the forefront.
I look forward to working with the other members of the Governance Board to continue to deliver on the incredible things this project is known for.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;attribution&quot;&gt;
— Marky Jackson, Jenkins Governance Board Member and Events Officer
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Statement from Gavin Mogan:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Gavin here. I’m still in shock that I got voted in for the Jenkins board.
It felt like yesterday I just got started helping people randomly on IRC. This is truly exciting.
I plan to continue to help out as much as I can wherever I can, just in a bit more official capacity.
This is truly exciting. I have no firm plans or agenda, just keep pushing advocacy and getting people to help each other in a positive and safe way.
My specialities lie in outside of Jenkins core, whether it be working on the plugin site, or hanging out on IRC, Gitter and Reddit helping out where I can.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;attribution&quot;&gt;
— Gavin Mogan, Jenkins Governance Board Member
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;officer-election-details&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#officer-election-details&quot; /&gt;Officer election details&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All 5 officer positions were up for election this year.
These roles have a 1-year term, with the estimated end of term on Dec 02, 2021.
After the initial review of nominations and confirmations with potential candidates,
4 officer positions were uncontested:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Olivier Vernin&lt;/strong&gt; - &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#infrastructure&quot;&gt;Infrastructure officer&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Marky Jackson&lt;/strong&gt; - &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#events&quot;&gt;Events officer&lt;/a&gt;.
Marky inherits this role from &lt;a href=&quot;https://github.com/alyssat&quot;&gt;Alyssa Tong&lt;/a&gt;
who decided to step down from the officer role and to focus on the Jenkins community marketing,
including &lt;a href=&quot;https://jenkinsistheway.io/&quot;&gt;Jenkins Is The Way&lt;/a&gt; and many other initiatives started by Alyssa.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mark Waite&lt;/strong&gt; - &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#documentation&quot;&gt;Documentation officer&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Daniel Beck&lt;/strong&gt; - &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/#security&quot;&gt;Security officer&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks to all Jenkins officers for their continued leadership!
Officers take responsibility for many day-to-day processes in the Jenkins community and lead the contributor teams working on them.
It requires significant time commitment, and it is not taken for granted.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Release Officer election results&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/timja&quot;&gt;Tim Jacomb&lt;/a&gt; won the biggest support as a Release officer (&lt;a href=&quot;https://civs.cs.cornell.edu/cgi-bin/results.pl?id=E_287cb63d82ce7972&quot;&gt;voting results&lt;/a&gt;).
Tim will replace in this role &lt;a href=&quot;https://github.com/olivergondza&quot;&gt;Oliver Gondža&lt;/a&gt;
who has been leading the Release Team and the release processes since 2016 when the role was officially introduced.&lt;/p&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tim Jacomb&lt;/strong&gt;  (Condorcet winner: wins contests with all other choices)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Baptiste Mathus  loses to Tim Jacomb by 40–23&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Victor Martinez  loses to Tim Jacomb by 38–25, loses to Baptiste Mathus by 32–31&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is a statement from Tim Jacomb:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’m excited for the year ahead, let’s see where we can take the Jenkins release area in the future.
As a Release Officer I would like to increase automation, ease onboarding of new contributors to the release team,
and ensure that responsibilities rotate among people so that I wouldn’t be a bottleneck for any task.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;attribution&quot;&gt;
— Tim Jacomb, Jenkins Release Officer
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/alyssat&quot;&gt;Alyssa Tong&lt;/a&gt; and &lt;a href=&quot;https://github.com/olivergondza&quot;&gt;Oliver Gondža&lt;/a&gt; for their long-time service as Jenkins officers!
We are looking to continue working with them in the Jenkins community.
And congratulations to Tim Jacomb and Marky Jackson for joining the team!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;statistics&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#statistics&quot; /&gt;Statistics&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This year we had 92 registered voters and around 65 actual votes.
It is significantly lower than in the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/12/16/board-election-results/&quot;&gt;2019 elections&lt;/a&gt; when we had almost 350 voters.
It can be partially explained by the change of the communication process.
This year we decided to not use the previous &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/11/08/board-elections/&quot;&gt;voter registration system&lt;/a&gt;,
and we relied on the user and developer mailing lists instead of sending messages to the entire LDAP user database.
This is definitely something we need to review at the retrospective.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;whats-next-for-the-board&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#whats-next-for-the-board&quot; /&gt;What’s next for the board?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The last year was awesome for the Jenkins project governance.
With help of many contributors and with the renewed board,
we have been able to facilitate many initiatives in the Jenkins project,
for example hosting contributor summits,
publishing the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/roadmap/&quot;&gt;public roadmap&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/conduct/&quot;&gt;Code of Conduct update&lt;/a&gt;,
&lt;a href=&quot;https://cd.foundation/blog/2020/08/25/jenkins-terminology-changes/&quot;&gt;terminology changes&lt;/a&gt;,
and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/04/cdf-graduation/&quot;&gt;graduation in the Continuous Delivery Foundation&lt;/a&gt;.
There is a lot more work to do to grow the community and to ensure the long term sustainability of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In short term, our key priority is to organize knowledge and permission transfers to the new board members and officers so that they can be effective in their new roles.
The board will also focus on maintaining the Jenkins governance processes
(meetings, budget approvals, funding, etc.) and defining the next steps and priorities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are many longer-term initiatives the board could facilitate:
long-anticipated features and architecture changes,
changing the &lt;a href=&quot;https://github.com/jenkinsci/jep&quot;&gt;Jenkins Enhancement Proposal&lt;/a&gt; process,
creating better communication channels with Jenkins users,
and onboarding of new contributors and maintainers.
Such initiatives are instrumental for the evolution of the Jenkins project.
The ideas will be discussed in &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/mailing-lists/&quot;&gt;mailing lists&lt;/a&gt; and during governance meetings.
If you would like to share your vision and ideas about what’s needed in the project,
it is definitely a great time to contribute!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;feedback&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#feedback&quot; /&gt;Feedback&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins project plans to conduct elections every year.
We will appreciate and welcome any feedback regarding the election process so that we can improve the process.
We have started a &lt;a href=&quot;https://docs.google.com/document/d/1VUpcn-ISyhN1ueSHa7rDOLxYrTABC5vKPXPiqBe87DI/edit?usp=sharing&quot;&gt;Retrospective document&lt;/a&gt; for these elections.
Everyone can suggest changes in this document, and we will integrate them.
There will be also a public retrospective review at the next &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/advocacy-and-outreach/&quot;&gt;Advocacy and Outreach SIG&lt;/a&gt; meeting on Dec 17.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have any private feedback you would like to share,
please send an email to the &lt;a href=&quot;mailto://jenkinsci-board@googlegroups.com&quot;&gt;Jenkins Board&lt;/a&gt;.
If you would like to raise any issues about the election process,
please contact one of the elected Governance Board members.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;references&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#references&quot; /&gt;References&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board&quot;&gt;Jenkins Governance Board&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board-election-process&quot;&gt;Jenkins Board Election Process&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads&quot;&gt;Jenkins Officers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/24/board-elections/&quot;&gt;2020 election announcement&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/10/28/election-candidates&quot;&gt;2020 election candidates&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1VUpcn-ISyhN1ueSHa7rDOLxYrTABC5vKPXPiqBe87DI/edit?usp=sharing&quot;&gt;Retrospective document&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/10/spring-xstream/</id>
<title>Spring and XStream updates (breaking changes!)</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-11-10T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/10/spring-xstream/" />
<author>
<name>jglick</name>
</author>
<category term="jenkins"></category>
<category term="core"></category>
<category term="developer"></category>
<summary>
Cleaning up technical debt is a perennial topic among Jenkins core developers,
and one of the most visible issues is the use of obsolete and/or forked third-party libraries.
In a world where Dependabot is offering updates to libraries released just hours before,
it is unpleasant to be working with dependencies that are many years old.
Since large organizations in particular are unhappy to install software using obsolete or nonstandard versions,
my employer (CloudBees) gave its blessing for me to spend some time cleaning up some of the worst offenders.


The toughest nut to crack was the Acegi Security library used for authentication,
which has long since been...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Cleaning up technical debt is a perennial topic among Jenkins core developers,
and one of the most visible issues is the use of obsolete and/or forked third-party libraries.
In a world where Dependabot is offering updates to libraries released just hours before,
it is unpleasant to be working with dependencies that are many years old.
Since large organizations in particular are unhappy to install software using obsolete or nonstandard versions,
my employer (CloudBees) gave its blessing for me to spend some time cleaning up some of the worst offenders.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The toughest nut to crack was the Acegi Security library used for authentication,
which has long since been replaced by Spring Security
(and Jenkins was also bundling a long-outdated version of some Spring Framework dependencies).
&lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/227/README.adoc&quot;&gt;JEP-227&lt;/a&gt; tracks the complicated task of updating to Spring Security
without breaking the numerous plugins that interact with authentication,
especially those offering a &lt;strong&gt;Security Realm&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another longstanding problem was the XStream library which Jenkins uses to read and write XML configuration files.
This had been forked long ago by what was then the Hudson project and a few fixes applied.
Unfortunately, some of those fixes were rejected upstream as invalid (representing unsupported usage patterns),
and the fork fell behind the upstream version.
&lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/228/README.adoc&quot;&gt;JEP-228&lt;/a&gt; describes the impact of switching to the upstream library in a more standard usage mode,
including fixes to a smaller number of plugins which would otherwise be incompatible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now that the Jenkins 2.266 weekly release includes both updates,
it is important for both Jenkins administrators and plugin maintainers to check for actual or potential incompatibilities.
There are two tables listing the impact of these changes on plugins:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/227/compatibility.adoc&quot;&gt;Spring Security compatibility&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/228/compatibility.adoc&quot;&gt;XStream compatibility&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you &lt;strong&gt;use Jenkins&lt;/strong&gt; then it is a good idea before upgrading to take a look at these tables
to see if you are running any plugins considered &lt;em&gt;incompatible&lt;/em&gt;.
If so, try not to rely on that plugin, or find out if there is an active maintainer who could help.
For entries marked &lt;em&gt;unknown&lt;/em&gt;, it would be appreciated if you could do a sanity check after upgrading
and offer a pull request to the table page (click &lt;strong&gt;Edit this file&lt;/strong&gt;) with a more informative status.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you find a regression in a plugin, please file a bug report in Jira and link to it from the table.
Also please add a &lt;code&gt;JEP-227&lt;/code&gt; or &lt;code&gt;JEP-228&lt;/code&gt; label as appropriate, for ease of tracking:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/issues/?jql=resolution%20%3D%20Unresolved%20and%20labels%20in%20(JEP-227)&quot;&gt;Open JEP-227 issues&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/issues/?jql=resolution%20%3D%20Unresolved%20and%20labels%20in%20(JEP-228)&quot;&gt;Open JEP-228 issues&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot; /&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is a good idea to update all your plugins &lt;em&gt;before&lt;/em&gt; upgrading Jenkins core.
In the case of the Spring Security update, some security realm plugins including LDAP and Active Directory must be updated in advance.
(You can safely run the new plugin versions on Jenkins releases &lt;em&gt;prior&lt;/em&gt; to this change.)
Otherwise, you risk being unable to log in to Jenkins—and thus unable to update those plugins from the GUI!
The LDAP plugin additionally has a new version available only after the core upgrade, but there is no rush in switching to that.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you &lt;strong&gt;maintain a Jenkins plugin&lt;/strong&gt; then please check whether it is marked anything less than &lt;em&gt;compatible&lt;/em&gt;.
In some cases, there are already pull requests awaiting merge.
In other cases, some minor aspects of the source code have been identified that could be edited to improve compatibility.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We expect to see a bit of disruption from these changes
but hope that in the long run they will save time for core and plugin developers
and lead to a more secure and stable tool.
Please reach out on the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/mailing-lists/&quot;&gt;developers’ list&lt;/a&gt; with any questions or suggestions.&lt;/p&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/10/major-changes-in-weekly-releases/</id>
<title>Jenkins 2.264+: Major changes in the weekly release line</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-11-10T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/10/major-changes-in-weekly-releases/" />
<author>
<name>markewaite</name>
</author>
<category term="jenkins"></category>
<category term="core"></category>
<category term="testing"></category>
<category term="ui"></category>
<summary>
Recently we have selected Jenkins 2.263 as a new baseline for the LTS release line, with ETA in December 2020.
It allows delivering significant and in some cases breaking changes which have been previously on hold.
Beginning with the Jenkins 2.264 release on October 27, 2020, we&#8217;ve entered a period where the Jenkins weekly releases will include more significant changes than usual.
That period of more significant changes is expected to continue for a month or more.
As you may have seen from the release community ratings, there might be regressions and instabilities during this period.


We&#8217;re excited for the changes.
They help to improve user...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recently we have &lt;a href=&quot;https://groups.google.com/g/jenkinsci-dev/c/AWOPeU4k0DI&quot;&gt;selected Jenkins 2.263 as a new baseline&lt;/a&gt; for the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/download/lts/&quot;&gt;LTS release line&lt;/a&gt;, with ETA in December 2020.
It allows delivering significant and in some cases breaking changes which have been previously on hold.
Beginning with the Jenkins 2.264 release on October 27, 2020, we’ve entered a period where the Jenkins weekly releases will include more significant changes than usual.
That period of more significant changes is expected to continue for a month or more.
As you may have seen from the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/changelog/&quot;&gt;release community ratings&lt;/a&gt;, there might be regressions and instabilities during this period.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’re excited for the changes.
They help to improve user experience and to address the technical debt accumulated in the Jenkins core.
We invite Jenkins users to evaluate those changes and provide feedback.
This is an especially valuable time for users and administrators to test the weekly releases and report issues with them,
especially on Jenkins test environments.
In the Jenkins project we have invested a lot in test coverage for the main functionality,
but in many cases we rely on user feedback for exotic plugins and environments not yet covered by our test automation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The most notable changes include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#configuration-ui-tables-to-divs&quot;&gt;Configuration UI - Tables to Divs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#core-spring-security-replaces-acegi-security&quot;&gt;Core - Spring Security replaces Acegi Security&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#core-xstream-unfork&quot;&gt;Core - XStream unfork&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#ui-jquery-upgrade&quot;&gt;UI - JQuery upgrade&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;configuration-ui-tables-to-divs&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#configuration-ui-tables-to-divs&quot; /&gt;Configuration UI - Tables to Divs&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins 2.264 is the first weekly release to include the &quot;Tables to Divs migration&quot; user interface work of &lt;a href=&quot;https://github.com/jsoref/&quot;&gt;Josh Soref&lt;/a&gt;, &lt;a href=&quot;https://github.com/timja/&quot;&gt;Tim Jacomb&lt;/a&gt;, and &lt;a href=&quot;https://github.com/fqueiruga&quot;&gt;Felix Queiruga&lt;/a&gt;.
It is a significant step to improve forms in the Jenkins user interface (configuration pages, build parameters, etc.), especially for users on narrow devices like tablets and phones.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;a-better-user-interface&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#a-better-user-interface&quot; /&gt;A better user interface&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The transition from using HTML &lt;code&gt;table&lt;/code&gt; tags to using HTML &lt;code&gt;div&lt;/code&gt; tags provides a more attractive user interface for all users and a much better experience for users on narrower devices.
Before the conversion from table tags to div tags, the &lt;strong&gt;&quot;Manage Jenkins&quot;&lt;/strong&gt; page looked like this in a 1024x768 window:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-11-10-major-changes-in-weekly-releases/ui-using-tables.png&quot; alt=&quot;Before the pull request&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After the conversion, the &lt;strong&gt;&quot;Manage Jenkins&quot;&lt;/strong&gt; page now looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-11-10-major-changes-in-weekly-releases/ui-using-divs.png&quot; alt=&quot;After the pull request&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The user interface improvements from the transition are a nice step forward for Jenkins.
However, because the user interface improvements require changes in plugins, we need your help.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We need users to test the latest weekly Jenkins releases with the plugins and configurations that are most important to them.
When users detect an issue, we need them to &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/participate/report-issue/&quot;&gt;report the issue&lt;/a&gt; with enough detail that a plugin maintainer can fix the issue.
Please add the &lt;code&gt;tables-to-divs-regression&lt;/code&gt; label to the issues.
The &lt;code&gt;tables-to-divs-regression&lt;/code&gt; label makes it easier to find issues related to the tables to divs transition.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;plugin-developers&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#plugin-developers&quot; /&gt;Plugin developers&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Several plugins have already been identified that may need changes.
See the &lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62437&quot;&gt;Jira epic&lt;/a&gt; for plugins that are likely to need changes for the new user interface layout.
The list of &lt;a href=&quot;https://issues.jenkins.io/issues/?filter=22840&quot;&gt;open &lt;code&gt;tables-to-divs-regression&lt;/code&gt; issues&lt;/a&gt; can also be used to see plugins that need changes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you can assist with plugin testing and code changes, select one of the plugins from that epic, test it, and propose a pull request to help with this user interface transition.
If you’re not comfortable proposing a pull request, describe the problems you see in a bug report.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/developer/views/table-to-div-migration/&quot;&gt;tables to divs migration guide&lt;/a&gt; is available.
It describes areas that typically need to be changed as part of the migration from tables to divs.
It also includes detailed examples that allow the plugin to continue supporting older Jenkins versions with table layouts and use div layouts for newer Jenkins versions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;core-spring-security-replaces-acegi-security&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#core-spring-security-replaces-acegi-security&quot; /&gt;Core - Spring Security replaces Acegi Security&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins 2.266 release on November 10, 2020 will include the migration to the Spring Security libraries from the Acegi security libraries that &lt;a href=&quot;https://github.com/jglick&quot;&gt;Jesse Glick&lt;/a&gt; has proposed and developed through &lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/227/README.adoc&quot;&gt;JEP-227: Jenkins Enhancement Proposal 227&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This upgrade replaces the Acegi Security library with the current release of the Spring Security library.
Details of the change are described in &lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/227/README.adoc&quot;&gt;JEP-227&lt;/a&gt; and in the &lt;a href=&quot;https://github.com/jenkinsci/jenkins/pull/4848&quot;&gt;pull request&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We need users to test the latest Jenkins weekly releases with their plugins and watch for issues related to authentication.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Refer to &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/10/spring-xstream/&quot;&gt;Jesse Glick’s blog post&lt;/a&gt; that introduces the details of the change and provides links to the &lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/227/compatibility.adoc&quot;&gt;Spring Security compatibility&lt;/a&gt; table.
Jesse’s blog post provides specific instructions for those who report bugs related to this change.
Please use those instructions as you submit bug reports related to the Spring Security upgrade.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;core-xstream-unfork&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#core-xstream-unfork&quot; /&gt;Core - XStream unfork&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins has been using a fork of the XStream serialization library to read and write XML files.
The XStream library was forked over 10 years ago and had a few fixes applied to it.
Unfortunately, at that time the fixes were rejected by the upstream maintainers of XStream (unsupported patterns of API use) and the fork fell behind the upstream version.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins 2.266 release on November 10, 2020 will include the migration to the upstream version of the XStream library that &lt;a href=&quot;https://github.com/jglick&quot;&gt;Jesse Glick&lt;/a&gt; has proposed and developed through &lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/228/README.adoc&quot;&gt;JEP-228: Jenkins Enhancement Proposal 228&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Refer to &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/10/spring-xstream/&quot;&gt;Jesse Glick’s blog post&lt;/a&gt; that introduces the details of the change and provides links to the &lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/228/compatibility.adoc&quot;&gt;XStream compatibility&lt;/a&gt; table.
Jesse’s blog post provides specific instructions for those who report bugs related to this change.
Please use those instructions as you submit bug reports related to the XStream upgrade.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;ui-jquery-upgrade&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#ui-jquery-upgrade&quot; /&gt;UI - JQuery upgrade&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins uses a 1.x version of the &lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery user interface library&lt;/a&gt; for some of its components.
&lt;a href=&quot;https://github.com/fqueiruga&quot;&gt;Felix Queiruga&lt;/a&gt; has started the work to update that library to a current jQuery version.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It will arrive in a future Jenkins weekly release.
When it arrives, it will be noted in the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/changelog/&quot;&gt;Jenkins weekly changelog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the jQuery update arrives, We will need users to test the Jenkins weekly release with the plugins and configurations that are most important to them.
When users detect an issue, we need them to &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/participate/report-issue/&quot;&gt;report the issue&lt;/a&gt; with enough detail that a plugin maintainer can fix the issue.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;call-to-test&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#call-to-test&quot; /&gt;Call to test&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is a great time to help the Jenkins project by testing the weekly releases.
We encourage you to test the user interface and the interactions that are most important to you.
If you find an issue, please &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/participate/report-issue/&quot;&gt;report the issue&lt;/a&gt; so that others can benefit from your discovery.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/05/installing-jenkins-on-kubernetes/</id>
<title>Document Jenkins on Kubernetes: Installing Jenkins on Kubernetes Documentation Release</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-11-05T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/05/installing-jenkins-on-kubernetes/" />
<author>
<name>zaycodes</name>
</author>
<category term="kubernetes"></category>
<category term="helm"></category>
<category term="documentation"></category>
<category term="gsod"></category>
<category term="gsod2020"></category>
<summary>
We are super excited to announce that the Document Jenkins on Kubernetes Project recently merged its first PR into Jenkins.io.
This PR adds a new Kubernetes section to the existing Installing Jenkins chapter of Jenkins.io.





This new section describes two options to install/run Jenkins on Kubernetes, how to setup a minikube cluster on which to run your Jenkins deployment and finally a bonus segment that explains some Post-installation setups such as unlocking Jenkins, customizing Jenkins with plugins and creating your first administrator user.


The first installation option covered in this section is helm a package manager for Kubernetes whose package format is called...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are super excited to announce that the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/docs/gsod/2020/projects/document-jenkins-on-kubernetes/&quot;&gt;Document Jenkins on Kubernetes Project&lt;/a&gt; recently merged its first PR into Jenkins.io.
This &lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/pull/3822&quot;&gt;PR&lt;/a&gt; adds a new &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/&quot;&gt;Kubernetes&lt;/a&gt; section to the existing &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/&quot;&gt;Installing Jenkins&lt;/a&gt; chapter of Jenkins.io.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-10-30-installing-jenkins-on-kubernetes/installing-jenkins-on-kubernetes-section.png&quot; alt=&quot;Installing Jenkins on Kubernetes Section&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This new section describes two options to install/run Jenkins on Kubernetes, &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#create-a-minikube-cluster&quot;&gt;how to setup a minikube cluster&lt;/a&gt; on which to run your Jenkins deployment and finally a bonus segment that explains some &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#setup-wizard&quot;&gt;Post-installation setups&lt;/a&gt; such as &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#unlocking-jenkins&quot;&gt;unlocking Jenkins&lt;/a&gt;, &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#customizing-jenkins-with-plugins&quot;&gt;customizing Jenkins with plugins&lt;/a&gt; and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#creating-the-first-administrator-user&quot;&gt;creating your first administrator user&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first installation option covered in this section is &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#install-jenkins-with-helm-v3&quot;&gt;helm&lt;/a&gt; a package manager for Kubernetes whose package format is called a chart. The &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#install-jenkins-with-helm-v3&quot;&gt;helm section&lt;/a&gt; covers the prerequisites for installing Jenkins on Kubernetes using Helm, installing and configuring helm, creating a persistent volume and service account, and finally, Installing Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The second option describes how to &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#install-jenkins-with-yaml-files&quot;&gt;install Jenkins using a set of yaml files&lt;/a&gt;.
This section explains how to &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#create-jenkins-deployment-file&quot;&gt;create a Jenkins deployment file&lt;/a&gt;, &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#deploy-jenkins&quot;&gt;Deploy Jenkins&lt;/a&gt;, grant access to jenkins service, and finally &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/kubernetes/#access-jenkins-dashboard&quot;&gt;access your Jenkins dashboard after installation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;splitting-the-installing-jenkins-chapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#splitting-the-installing-jenkins-chapter&quot; /&gt;Splitting the Installing Jenkins Chapter&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The addition of the Kubernetes section highlighted a long-standing challenge with the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/&quot;&gt;Installing Jenkins&lt;/a&gt; chapter.
It was too long and contained too many topics, making it difficult and unpleasant for
most users to navigate.
To top the icing on the cake and further improve the experience on Jenkins documentation users, another &lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/pull/3874&quot;&gt;PR&lt;/a&gt; was merged into Jenkins.io to split the Installing Jenkins chapter into smaller chapters for better separation of concerns and easy navigation. This PR also redirects bookmarks that linked to the previous locations like &lt;a href=&quot;https://www.jenkins.io/doc/book/installing/#debianubuntu&quot; class=&quot;bare&quot;&gt;https://www.jenkins.io/doc/book/installing/#debianubuntu&lt;/a&gt; using Javascript.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-10-30-installing-jenkins-on-kubernetes/installing-jenkins-chapter-before-splitting.png&quot; alt=&quot;Installing Jenkins chapter before the PR&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The image above is a snapshot of what the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/installing/&quot;&gt;Installing Jenkins&lt;/a&gt; chapter looked like before the PR.
All sections of this chapter such as &lt;strong&gt;docker, Kubernetes and others&lt;/strong&gt; were lumped up on the same page making it too long with so much information thereby making it difficult to navigate or even find information on this page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-10-30-installing-jenkins-on-kubernetes/installing-jenkins-chapter-after-splitting.png&quot; alt=&quot;Installing Jenkins chapter after the PR&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This snapshot shows what the Installing Jenkins chapter looks like after the PR.
With this chapter split into smaller sections, it’s neater, clearer and most importantly easier to navigate to the section of interest without having to scroll through so much information that’s not necessarily needed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;testing-participating-and-contributing&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#testing-participating-and-contributing&quot; /&gt;Testing, Participating and Contributing&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins Community invites the general public to try out these documentation updates and give feedback to help us further improve the documentation.
If you have any feedback, suggestions, or would like to contribute to the Jenkins on Kubernetes project,  drop a message indicating your interest in the Jenkins documentation &lt;a href=&quot;https://gitter.im/jenkinsci/docs&quot;&gt;Gitter&lt;/a&gt; channel.
You can also find the Google season of docs office hour notes and recordings for Jenkins on Kubernetes &lt;a href=&quot;https://docs.google.com/document/d/17cPLUrJ4Ul4Y8MREjDyfWBEN7PlnlrmPh6wuKMPFmPg/edit?usp=sharing&quot;&gt;here&lt;/a&gt;.
GSOD office hours take place twice a week on Mondays and Thursdays between 6 pm GMT+1 and 7 pm GMT+1, if you would like to be part of these meetings, you can indicate interest in the Jenkins Documentation &lt;a href=&quot;https://gitter.im/jenkinsci/docs&quot;&gt;Gitter&lt;/a&gt; channel and we would be happy to have you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;additional-resources&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#additional-resources&quot; /&gt;Additional Resources&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/pull/3822&quot;&gt;Installing Jenkins on Kubernetes PR&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/pull/3874&quot;&gt;Splitting Installing Jenkins Chapter PR&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jenkins.io/sigs/docs/gsod/2020/projects/document-jenkins-on-kubernetes/&quot;&gt;Document Jenkins on Kubernetes Project&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1zTEKtOp2i1K2fw5RQ_a_KVOB2z0gz9987NYzTnIS6G8/edit?usp=sharing&quot;&gt;GSoD Proposal&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/17cPLUrJ4Ul4Y8MREjDyfWBEN7PlnlrmPh6wuKMPFmPg/edit?usp=sharing&quot;&gt;GSoD Office Hours Notes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1m0rTrXk7WisPXUeaKGj81dOFO2CcW4o_Nvo7NvcoL98/edit?usp=sharing&quot;&gt;Google Season of Docs - Startup&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jenkins.io/sigs/docs/gsod/&quot;&gt;Google Season of Docs&lt;/a&gt; on jenkins.io&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1uNNo0QJKPHnNp8PGr_jLI8p3K_94ZYD-M0evZOEZ93c/edit#heading=h.8q8l1ah569xk&quot;&gt;Docs SIG&lt;/a&gt; for Google Season of Docs startup (&lt;a href=&quot;https://www.youtube.com/watch?v=sY2gI47zho8&amp;amp;list=PLN7ajX_VdyaNp0lk5BmyAgqPS52u_4tC8&quot;&gt;video&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/04/codeql/</id>
<title>First results from using GitHub CodeQL to discover security vulnerabilities in Jenkins plugins</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-11-04T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/11/04/codeql/" />
<author>
<name>daniel-beck</name>
</author>
<category term="jenkins"></category>
<category term="security"></category>
<summary>
A little over a month ago, GitHub announced the general availability of its code scanning solution.
It&#8217;s based on CodeQL, which makes it pretty easy to write queries for it and run them using the CodeQL GitHub action, CodeQL command line tools, or on lgtm.com.


Many of the security vulnerabilities discovered in Jenkins plugins are fairly similar to each other, and unfortunately they&#8217;re usually specific to Jenkins, which means existing generic tools would not be able to discover them.
So I decided to write CodeQL queries for Jenkins-specific issues and invited maintainers to sign their plugins up for a "private beta" of code...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A little over a month ago, &lt;a href=&quot;https://github.blog/2020-09-30-code-scanning-is-now-available/&quot;&gt;GitHub announced the general availability of its code scanning solution&lt;/a&gt;.
It’s based on &lt;a href=&quot;https://github.com/github/codeql&quot;&gt;CodeQL&lt;/a&gt;, which makes it pretty easy to write queries for it and run them using the CodeQL GitHub action, CodeQL command line tools, or on &lt;a href=&quot;https://lgtm.com&quot;&gt;lgtm.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Many of the security vulnerabilities discovered in Jenkins plugins are fairly similar to each other, and unfortunately they’re usually specific to Jenkins, which means existing generic tools would not be able to discover them.
So I decided to write CodeQL queries for Jenkins-specific issues and &lt;a href=&quot;https://groups.google.com/d/msg/jenkinsci-dev/0hw97zAdUMw/zt4TeGV7AQAJ&quot;&gt;invited maintainers to sign their plugins up for a &quot;private beta&quot;&lt;/a&gt; of code scanning for these issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Today’s security advisory is the first one that includes findings discovered through that initiative.
All these issues were discovered with assistance by this tooling:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/security/advisory/2020-11-04/#SECURITY-2101&quot;&gt;SECURITY-2101&lt;/a&gt; in &lt;a href=&quot;https://plugins.jenkins.io/aws-global-configuration&quot;&gt;AWS Global Configuration Plugin&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/security/advisory/2020-11-04/#SECURITY-2102&quot;&gt;SECURITY-2102&lt;/a&gt; and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/security/advisory/2020-11-04/#SECURITY-2103&quot;&gt;SECURITY-2103&lt;/a&gt; in &lt;a href=&quot;https://plugins.jenkins.io/kubernetes&quot;&gt;Kubernetes Plugin&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/security/advisory/2020-11-04/#SECURITY-2104&quot;&gt;SECURITY-2104&lt;/a&gt; and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/security/advisory/2020-11-04/#SECURITY-2115&quot;&gt;SECURITY-2115&lt;/a&gt; in &lt;a href=&quot;https://plugins.jenkins.io/mercurial&quot;&gt;Mercurial Plugin&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/security/advisory/2020-11-04/#SECURITY-2110&quot;&gt;SECURITY-2110&lt;/a&gt; in &lt;a href=&quot;https://plugins.jenkins.io/azure-keyvault&quot;&gt;Azure Key Vault Plugin&lt;/a&gt;, and&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/security/advisory/2020-11-04/#SECURITY-2126&quot;&gt;SECURITY-2126&lt;/a&gt; in &lt;a href=&quot;https://plugins.jenkins.io/active-directory&quot;&gt;Active Directory Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While there were of course also false positives we had to review and mark as ignored, the integration with the GitHub UI made this pretty straightforward.
Overall I’m very happy with the results so far, especially considering how new this initiative is.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Interested in making the plugin you are maintaining more secure?
Sign up now by &lt;a href=&quot;https://issues.jenkins.io/browse/INFRA&quot;&gt;filing an INFRA issue&lt;/a&gt; in the &lt;code&gt;github&lt;/code&gt; component and list the plugin repositories you’d like to have scanned.&lt;/p&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/10/28/election-candidates/</id>
<title>2020 Elections: Governance Board and Officer candidates</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-10-28T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/10/28/election-candidates/" />
<category term="community"></category>
<category term="governance"></category>
<category term="governance-board"></category>
<category term="elections"></category>
<summary>
Jenkins 2020 Elections are over, thanks to all participants!
Please see the results announcement .





As you probably know, in a few weeks we will have the Jenkins 2020 elections.
We will be electing two governance board members and five officers,
namely: Security, Events, Release, Infrastructure, and Documentation.
After the announcement on Sep 24,
we have been accepting nominations from community members.


After the processing and confirmations with potential candidates,
the Jenkins 2020 Elections committee is happy to announce the candidates for the Jenkins Governance Board and Officer roles:




Governance Board candidates: Andrey Falko, Ewelina Wilkosz, Frederic Gurr, Gavin Mogan, Justin Harringa, Mark Waite, Marky Jackson, Steven Terrana, Zhao...
</summary>
<content type="html">
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot; /&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Jenkins 2020 Elections are over, thanks to all participants!
Please see the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/03/election-results&quot;&gt;results announcement &lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you probably know, in a few weeks we will have the Jenkins 2020 elections.
We will be electing two &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board&quot;&gt;governance board&lt;/a&gt; members and five &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/&quot;&gt;officers&lt;/a&gt;,
namely: Security, Events, Release, Infrastructure, and Documentation.
After the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/24/board-elections/&quot;&gt;announcement on Sep 24&lt;/a&gt;,
we have been accepting nominations from community members.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After the processing and confirmations with potential candidates,
the Jenkins 2020 Elections committee is happy to announce the candidates for the Jenkins Governance Board and Officer roles:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Governance Board candidates: Andrey Falko, Ewelina Wilkosz, Frederic Gurr, Gavin Mogan, Justin Harringa, Mark Waite, Marky Jackson, Steven Terrana, Zhao Xiaojie (Rick)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Release officer: Baptiste Mathus, Tim Jacomb, Victor Martinez&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Security officer: Daniel Beck (uncontested)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Events officer: Marky Jackson (uncontested)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Infrastructure Officer: Olivier Vernin (uncontested)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation officer: Mark Waite (uncontested)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We encourage all community members to support the candidates and to participate in the elections!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;a class=&quot;image&quot; href=&quot;https://forms.gle/y3qDo8EM8iQnd3fY9&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/jenkins-is-the-way/register-button.png&quot; alt=&quot;register button&quot; height=&quot;48&quot; /&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;key-dates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#key-dates&quot; /&gt;Key dates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Nov 10&lt;/strong&gt; - Voting begins. &lt;a href=&quot;https://civs.cs.cornell.edu/&quot;&gt;Condorcet Internet Voting Service&lt;/a&gt; will be used for voting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Nov 24&lt;/strong&gt; - Voting sign-up is over.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Nov 27&lt;/strong&gt; - Voting ends, 11PM UTC.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dec 03&lt;/strong&gt; - Election results are announced and take effect.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;signing-up-for-voting&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#signing-up-for-voting&quot; /&gt;Signing up for voting&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Any Jenkins individual contributor is eligible to vote in the election
if there was a contribution made before September 01, 2020.
&lt;em&gt;Contribution&lt;/em&gt; does not mean a &lt;em&gt;code contribution&lt;/em&gt;,
all contributions count:
documentation patches,
code reviews,
substantial issue reports,
issues and mailing list responses,
social media posts,
testing,
etc.
Such a contribution should be public.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can register to vote in one of two ways:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Fill out &lt;a href=&quot;https://forms.gle/y3qDo8EM8iQnd3fY9&quot;&gt;this Google Form&lt;/a&gt;.
This way requires logging into your Google Account to verify authenticity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send an email to &lt;a href=&quot;mailto:jenkins-2020-elections@googlegroups.com&quot;&gt;jenkins-2020-elections@googlegroups.com&lt;/a&gt;.
You will need to provide the information specified &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board-election-process/#voter-sign-up-and-eligibility&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once sign-up is over, the election committee will process the form submissions and prepare a list of the registered voters.
In the case of rejection, one of the election committee members will send a rejection email.
Every individual contributor is expected to vote only once.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;candidates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#candidates&quot; /&gt;Candidates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Below you can find statements, affiliations and profile links provided by the candidates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Minimum copy-editing was applied to the content by the Jenkins 2020 Elections Committee.
Candidates are sorted by the first name.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;governance-board&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#governance-board&quot; /&gt;Governance Board&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;andrey-falko&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#andrey-falko&quot; /&gt;Andrey Falko&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have been a Jenkins user and administrator on and off since around 2010.
In 2016, I got into evangelism by organizing a
&lt;a href=&quot;https://www.meetup.com/76594722-7914-4a11-b924-f727428c938a/events/234424002/&quot;&gt;Jenkins Area Meetup in San Francisco&lt;/a&gt;.
I spoke at &lt;a href=&quot;https://jenkinsworld20162017.sched.com/event/BcIk/devops-leadership-panel&quot;&gt;Jenkins World 2017&lt;/a&gt; 
and again at
&lt;a href=&quot;https://devopsworldjenkinsworld2018.sched.com/event/FD6C/auto-cascading-security-updates-through-docker-images&quot;&gt;Jenkins World 2018&lt;/a&gt;.
Justin Harringa and I wrote and open sourced the &lt;a href=&quot;https://plugins.jenkins.io/config-driven-pipeline/&quot;&gt;Config Driven Pipeline Plugin&lt;/a&gt;.
For two years running, I’ve been a mentor for two Google Summer of Code projects:
&lt;a href=&quot;https://www.jenkins.io/blog/2020/06/27/external-fingerprint-storage/&quot;&gt;External Fingerprint Storage Project&lt;/a&gt; and
&lt;a href=&quot;https://www.jenkins.io/projects/gsoc/2019/remoting-over-apache-kafka-docker-k8s-features/&quot;&gt;Remoting over Apache Kafka with Kubernetes features&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With this nomination, I hope to continue helping strengthen and
progress the community further. As a member of the governance board,
I’ll bring a fresh perspective by asking questions, providing feedback,
and finding opportunities for others to contribute.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/afalko&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/andrey-falko&quot;&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: Stripe&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;ewelina-wilkosz&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#ewelina-wilkosz&quot; /&gt;Ewelina Wilkosz&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a consultant I support my customers with their Jenkins issues since the beginning of 2017.
And almost from the start it was some kind of &quot;as code&quot; approach.
The experience I gained during that time resulted in getting myself involved in the development of Configuration as Code Plugin for Jenkins.
I consider becoming a part of Jenkins Community one of the most valuable experiences in my career so far.
I appreciate how much I have learned and how welcoming the community is.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am not a very active contributor these days, at least when it comes to code, but what I have to offer is rather extensive experience
with Jenkins end users - from small, single instance setups to environments with hundreds of controllers run in a different way on different operating systems.
Every day I see challenges those users go through, I know what issues they are facing and which features they consider valuable or missing.
As a Jenkins Governance Board Member I can represent those users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks to my involvement in Configuration as Code Plugin development
I had a chance to deliver a number of public presentations
where I focused on the benefits of the solution and tried to make it easier for newcomers to try it.
Here are a few examples of my activities related to Jenkins Configuration as Code:
&lt;a href=&quot;https://www.praqma.com/stories/start-jenkins-config-as-code/&quot;&gt;blogpost&lt;/a&gt;,
&lt;a href=&quot;https://www.youtube.com/watch?v%3DwTzljM-EDjI&quot;&gt;cdCON presentation&lt;/a&gt;,
&lt;a href=&quot;https://open.spotify.com/episode/4beEdOeirazc65AdEARIOM?si%3DY63V4gBDT02_UBMQ3vahvg&quot;&gt;podcast recording&lt;/a&gt;.
So my focus is not only on representing users but also on educating them, and educating myself,
so I actually know what they need and why.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/ewelinawilkosz/&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/ewelinawilkosz/&quot;&gt;LinkedIn&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/EwelinaWilkosz&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: Eficode (former Praqma)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;frederic-gurr&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#frederic-gurr&quot; /&gt;Frederic Gurr&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I started to use Jenkins back in 2008, when it still had a different name.
In 2011 I started to contribute and created my first little plugin called
&lt;a href=&quot;https://plugins.jenkins.io/extra-columns/&quot;&gt;extra-columns&lt;/a&gt;.
Since then, using and administering Jenkins servers has become a major part of my work life,
while getting involved with the Jenkins community
kickstarted my interest and involvement with open source software and communities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’ve been working as a release engineer at the &lt;a href=&quot;https://www.eclipse.org/&quot;&gt;Eclipse Foundation&lt;/a&gt; since 2016,
supporting 250+ Jenkins instances for various open source projects.
I’d be honored to bring a user and admin oriented perspective to the Governance Board and help
shape the future of Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/fredg02&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/fr3dg&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: Eclipse Foundation&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;gavin-mogan&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#gavin-mogan&quot; /&gt;Gavin Mogan&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I got started with Jenkins early on when I was just getting started with testing.
I knew there had to be a way to run the tests automatically and report on them back to people.
I started hacking my own tools before I came across Jenkins (then Hudson) and was hooked ever since.
Over the years I’ve managed to install and configure Jenkins at various jobs,
and even was employed making internal and external plugins and integrations.
You’ll often find me on the Jenkins IRC and Gitter channels as well as the subreddit giving a hand to people who are stuck.
I also try to get involved with Jenkins Infrastructure projects as much as I can.
I currently maintain the plugin site, plugin site API, Jenkins Wiki exporter, and a bunch of other minor projects.
I also help run Vancouver’s chapter of Nodeschool.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If elected, I would like to address improving commercial support avenues.
Right now it’s a lot of people flailing in isolation.
I would like to not only improve things so people can find easier ways to get help,
but also encourage more users to help others, and push for a
centralized source of companies providing commercial support.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/halkeye&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/halkeye&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: Digital Ocean, Nodeschool Vancouver&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;justin-harringa&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#justin-harringa&quot; /&gt;Justin Harringa&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The nomination is quite an honor for me.
I have been a Hudson/Jenkins user since around 2009/2010 when
I started working through driving continuous integration in a corporate environment at John Deere.
As time went on, I began contributing some small fixes to plugins such as the Job DSL Plugin, OpenID Plugin, and the Workflow Job Plugin.
Eventually, I ended up helping maintain Salesforce’s Chatter plugin and then open sourcing plugins such as the Config-Driven Pipeline Plugin with Andrey Falko.
More recently, I have also had the extreme pleasure of mentoring in 2 Jenkins projects for Google Summer of Code
(Multi-branch Pipeline support for Gitlab in 2019 and Git Plugin Performance Improvements in 2020).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have learned so much from working with Jenkins and I would love to give back to the project further.
Having introduced Jenkins at both small and large companies,
I would love to help contribute to the direction of the project through the Roadmap/SIGs/JEPs and encourage others to also contribute / improve Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/justinharringa&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/justinharringa&quot;&gt;Twitter&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/justinharringa&quot;&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: Salesforce, Spinnaker SIG for Azure&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;mark-waite&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#mark-waite&quot; /&gt;Mark Waite&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’m a Jenkins contributor, a member of the Jenkins core team,
one of the leaders of the Platform Special Interest Group,
and leader of the Documentation Special Interest Group.
I’ve served as the Jenkins Documentation Officer since 2019.
I was a mentor for Google Season of Code 2020 and am one of the maintainers of the Git plugin for Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If elected and allowed to serve on the Jenkins Board, I’ll work to increase community involvement and community development.
I’m deeply interested in tooling and environments that support the Jenkins project,
including the Jenkins CI environments, issue tracker, artifact repository, and source code repositories.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/markewaite&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/MarkEWaite&quot;&gt;Twitter&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/markwaite/&quot;&gt;LinkedIn&lt;/a&gt;,
&lt;a href=&quot;https://www.jenkins.io/blog/authors/markewaite/&quot;&gt;Jenkins Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: CloudBees&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;marky-jackson&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#marky-jackson&quot; /&gt;Marky Jackson&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have been involved in the Jenkins project for many years.
I started out as a plugin maintainer, SIG member and general helper.
I moved to a SIG lead, speakers and Google Summer of Code and Docs org admin and mentor.
My current goals are to help continue the work of the public roadmap as well and gain most community members by continuing to be a champion of the community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For me, being on the Jenkins Board is another opportunity to improve upon the great work
we have all done as well as work toward branching out our efforts to have more women, people of color and LGBTQIA members.
I would be honored to have this opportunity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/markyjackson-taulia&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/markyjackson5&quot;&gt;Twitter&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/marky-jackson/&quot;&gt;LinkedIn&lt;/a&gt;,
&lt;a href=&quot;https://www.jenkins.io/blog/authors/markyjackson-taulia/&quot;&gt;Jenkins Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: Equinix Metal, Continuous Delivery Foundation, Kubernetes, Ortelius&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;steven-terrana&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#steven-terrana&quot; /&gt;Steven Terrana&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have been a Jenkins user since 2017 and contributor since 2018.
I am the primary maintainer of the Jenkins Templating Engine,
a plugin that allows users to create truly templated Jenkins pipelines that can be shared across teams.
Through that work, I’ve had the great pleasure of helping to organize the Pipeline Authoring Special Interest Group,
contributing to the Jenkins Pipeline documentation, and contributing bug fixes to various plugins
(including the pipeline plugin and workflow-cps library).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a Continuous Delivery Foundation Ambassador,
I’ve enjoyed doing what I can to advance the community’s approach to CI/CD and simplifying DevSecOps adoption within large organizations.
It would be a privilege to serve on the Jenkins Governance Board and offer my support wherever I can.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/steven-terrana&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/sterrana/&quot;&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: Booz Allen Hamilton, Continuous Delivery Foundation&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;zhao-xiaojie-rick&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#zhao-xiaojie-rick&quot; /&gt;Zhao Xiaojie (Rick)&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Three years ago I joined the Jenkins community.
I learned a lot during the process of contributing.
I even became a Jenkins hero in my city.
The most exciting thing I want to do is help more new users of Jenkins get started, and let more contributors feel comfortable.
I always love to host a JAM no matter if it’s online or offline.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Plans: improve the experience of using Jenkins in different
countries; reorganize the knowledge of Jenkins, for example the tutorial
by text or video format; help other SIG leaders to organize meetings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/LinuxSuRen&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/suren69811254&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: N/A&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;release-officer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#release-officer&quot; /&gt;Release Officer&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;baptiste-mathus&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#baptiste-mathus&quot; /&gt;Baptiste Mathus&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have been using and contributing to Jenkins for so long that it is difficult for me to check when it started exactly.
My first pull-request to Jenkins was in 2011 and I had started to use it long before it.
Throughout the years, I have contributed to various areas:
created our local Jenkins Area Meetup with Michaël Pailloncy,
helped users and developers on our mailing lists and IRC channels,
contributed to the Jenkins infrastructure, the website,
processing plugins hosting requests, worked full time on Jenkins Evergreen,
and I am still present today.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For all these reasons, it would be an honor to serve as the Release Officer for the Jenkins Project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/batmat&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/bmathus&quot;&gt;Twitter&lt;/a&gt;,
&lt;a href=&quot;https://www.jenkins.io/blog/authors/batmat/&quot;&gt;Jenkins Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: CloudBees&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;tim-jacomb&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#tim-jacomb&quot; /&gt;Tim Jacomb&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have been a user of Jenkins for the last 8 years and a regular contributor since 2018.
I began with maintaining the Slack plugin and over the last couple of years I have since expanded that to many more plugins and the Jenkins core.
These are some of the components I maintain when I have time: Slack, Azure Key Vault, Junit,
most of the Database plugins, Dark theme, Plugin installation manager, Jenkins Helm chart, Configuration as code plugin.
I am also a member of the Jenkins infrastructure team,
and I was involved in the release automation project and the mirrors modernisation effort,
along with the day to day support helping people regain access to accounts etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a Release Officer I would like to increase automation,
ease onboarding of new contributors to the release team, and ensure that
responsibilities rotate among people so that I wouldn’t be a bottleneck for any task.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/timja&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://www.jenkins.io/blog/authors/timja/&quot;&gt;Jenkins Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: Kainos&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;victor-martinez&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#victor-martinez&quot; /&gt;Victor Martinez&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have been involved in the Jenkins project since 2011 by different means, as a user, as an administrator, as a contributor
(bug reporting, plugin development, documentation, hackfest),
being active in the different Jenkins forums such as the Jenkins-dev and Jenkins-user mailing lists,
working with the jenkins-infra shared library and so on.
I’m also an advocate for the Jenkins project through some presentations anytime that I had the opportunity such as
&lt;a href=&quot;https://www.cloudbees.com/resources/continuous-improvement-process-jenkins&quot;&gt;DevOps World 2020&lt;/a&gt; and
&lt;a href=&quot;https://www.youtube.com/watch?v%3DDVejh9AiQrY&quot;&gt;Jenkins World 2017&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’ve been happily nominated for the Release officer role which matches not just my area of professional expertise that
I’ve been doing for the last 14 years in different roles for different companies but also that’s an area of personal interest
where I’d like to spend time with the Jenkins community to understand, document and automate the process
in a way we can keep the project sustainable for a long term as it’s today,
it’s not just about what I can bring for the community but also about growing together.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If elected as a Release officer I would aim to focus on the following areas:
proceed with the existing responsibilities for this role;
document and automate the release process;
being an enabler for the Continuous Delivery not just for the plugins but also for the core.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/v1v&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/victormartinezrubio/&quot;&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: Elastic&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;security-officer-uncontested&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#security-officer-uncontested&quot; /&gt;Security Officer - uncontested&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;daniel-beck&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#daniel-beck&quot; /&gt;Daniel Beck&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’ve been a Jenkins user since 2011, contributor since 2013, and core maintainer since 2014.
In 2015, I took on the scheduling and authoring of security advisories and have been doing that ever since,
working with reporters, maintainers, and the Jenkins security team to deliver security fixes.
Beyond that, I regularly contribute to Jenkins and project infrastructure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since I’ve started in the Security Officer role, we’ve made significant
improvements:
&lt;a href=&quot;https://jenkins.io/blog/2017/04/10/security-advisory/&quot;&gt;Plugins no longer allow ordinary users to run arbitrary scripts (no sandbox!) as a regular feature&lt;/a&gt;. I introduced fine-grained permission management
&lt;a href=&quot;https://groups.google.com/d/msg/jenkinsci-dev/ksKAsmsmVng/lG2lNEaJBQAJ&quot;&gt;for our GitHub repositories&lt;/a&gt; and
&lt;a href=&quot;https://groups.google.com/d/msg/jenkinsci-dev/VrKsEf8UIg4/nxuNo2DuBwAJ&quot;&gt;the Maven repository hosting our releases&lt;/a&gt;.
&lt;a href=&quot;https://jenkins.io/blog/2017/01/10/security-warnings/&quot;&gt;Warnings directly in Jenkins inform admins when an installed component has known security issues&lt;/a&gt; (and their UX was &lt;a href=&quot;https://github.com/jenkinsci/jenkins/pull/4513&quot;&gt;improved&lt;/a&gt; earlier this year).
The Jenkins project &lt;a href=&quot;https://twitter.com/jenkinsci/status/1080483425973424128&quot;&gt; is now a CVE Numbers Authority&lt;/a&gt;,
to ensure timely and high-quality information in the CVE vulnerability database.
Working with Tyler, &lt;a href=&quot;https://jenkins.io/blog/2018/10/09/telemetry/&quot;&gt;I added telemetry to Jenkins&lt;/a&gt;,
which allowed us to deliver multiple large-scale security fixes with
&lt;a href=&quot;https://jenkins.io/blog/2019/05/05/telemetry-success/&quot;&gt;minimal&lt;/a&gt; impact.
More recently, I’ve started writing code scanning rules for common problems in Jenkins and
&lt;a href=&quot;https://groups.google.com/g/jenkinsci-dev/c/0hw97zAdUMw/m/zt4TeGV7AQAJ&quot;&gt;invited maintainers&lt;/a&gt; to sign their plugins up,
which is something I hope to properly publish and roll out more widely soon.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/daniel-beck&quot;&gt;GitHub&lt;/a&gt;
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/daniel-beck/&quot;&gt;Jenkins Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: CloudBees&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;events-officer-uncontested&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#events-officer-uncontested&quot; /&gt;Events Officer - uncontested&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;marky-jackson-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#marky-jackson-2&quot; /&gt;Marky Jackson&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have been a part of the Jenkins community for some time, and I have received the utmost joy in volunteering.
I have been extremely fortunate to have played a lead role in the Outreach &amp;amp; Advocacy SIG, the pipeline-Authoring SIG,
and, most recently, the Cloud-Native SIG.
I have taken part in many meetups, org admin, and mentor in the GSoC &amp;amp; GSoD.
Finally, At DevOps World 2020, I received Jenkins most valuable advocate at DevOps World.
I have experience advocating in other communities as well:
Kubernetes Release Manager Associate, Kubernetes Mentoring Lead, Ortelius Community Manager.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins is the most widely used Continuous Integration tool around,
and I want to continue to promote that by focusing on the following areas: meetups; conference presentation from the Jenkins community;
new user outreach and onboarding; cross-community collaboration (e.g., Kubernetes community);
working with the Continuous Delivery Foundation on interoperability; focusing on SIG events.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;My roots are open-source, and I am so proud to be a part of the Jenkins community.
You can read more about my journey in open-source &lt;a href=&quot;https://www.cncf.io/blog/2020/02/18/why-i-contribute-to-the-open-source-community-and-you-should-too/&quot;&gt;here&lt;/a&gt;.
You can also see some of my presentations &lt;a href=&quot;https://www.youtube.com/watch?v%3Dh4hKSXjCqyI&quot;&gt;here&lt;/a&gt; and
&lt;a href=&quot;https://www.cloudbees.com/resources/power-of-open-source-community&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/markyjackson-taulia&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/markyjackson5&quot;&gt;Twitter&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/marky-jackson/&quot;&gt;LinkedIn&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/markyjackson-taulia/&quot;&gt;Jenkins Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: OpsMx, Continuous Delivery Foundation, Kubernetes, Ortelius, Spinnaker&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;infrastructure-officer-uncontested&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#infrastructure-officer-uncontested&quot; /&gt;Infrastructure Officer - uncontested&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;olivier-vernin&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#olivier-vernin&quot; /&gt;Olivier Vernin&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have been actively contributing to the Jenkins project for the past four years with contributions across many areas,
and infrastructure is one of my favorite topics.
Over my previous mandate as a Jenkins infrastructure officer, I focused on improving contribution experience,
and let community members opportunities to take ownership of the different services.
I worked on various sponsoring initiatives to make the Jenkins infrastructure more sustainable.
We provided a new environment for releasing Jenkins core (and one plugin!), and also many more things.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For the coming year, It is hard to make commitments on what it will look like as we have things we know,
like services that need some attention (“ci.jenkins.io/) and the things we don’t know yet.
Anyway, It’s important to me to have a transparent project where everybody could read, learn, participate,
and understand how the Jenkins project manages infrastructure and I want to continue down that path.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/Olblak&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/0lblak&quot;&gt;Twitter&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/olblak/&quot;&gt;Jenkins Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: CloudBees&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documentation-officer-uncontested&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#documentation-officer-uncontested&quot; /&gt;Documentation Officer - uncontested&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;mark-waite-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#mark-waite-2&quot; /&gt;Mark Waite&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’m a Jenkins contributor, a member of the Jenkins core team, one of the leaders of the Platform Special Interest Group,
and leader of the Documentation Special Interest Group.
I’ve served as the Jenkins Documentation Officer since 2019.
I was a mentor for Google Season of Code 2020 and am one of the maintainers of the Git plugin for Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If elected and allowed to serve as Documentation Officer,
I’ll continue efforts to invite more contributors through regular Documentation Office Hours and outreach programs like Google Season of Docs, CommunityBridge, Outreachy, and Jenkins Hackfests.
I’ll work to assure an inviting and welcoming environment for contributors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Profile links:
&lt;a href=&quot;https://github.com/markewaite&quot;&gt;GitHub&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/MarkEWaite&quot;&gt;Twitter&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/markwaite/&quot;&gt;LinkedIn&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/markewaite/&quot;&gt;Jenkins Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Affiliations: CloudBees&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;more-information&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#more-information&quot; /&gt;More information&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/24/board-elections/&quot;&gt;Jenkins 2020 elections announcement&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board&quot;&gt;Jenkins Governance Board&lt;/a&gt; and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/&quot;&gt;Jenkins Officers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board-election-process&quot;&gt;Jenkins Board and Officer Election Process&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/12/16/board-election-results/&quot;&gt;2019 election results&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://groups.google.com/g/jenkinsci-dev/c/NQg-_xhrT-0&quot;&gt;Elections coordination in the mailing list&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/10/21/a-sustainable-pattern-with-shared-library/</id>
<title>A sustainable pattern with shared library</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-10-21T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/10/21/a-sustainable-pattern-with-shared-library/" />
<author>
<name>tomasbjerre</name>
</author>
<category term="pipeline"></category>
<category term="scalability"></category>
<category term="sharedlibrary"></category>
<category term="infrastructure"></category>
<summary>
Table of Contents

Context
The Problems
The Solution

Shared Library
Duplication
Documentation
Scalability
Installation Agnostic
Feature Toggling





This post will describe how I use a shared library in Jenkins. Typically when using multibranch pipeline.


If possible (if not forced to) I implement the pipelines without multibranch. I previously wrote about how I do that with my Generic Webhook Trigger Plugin in a previous post. But this will be my second choice, If I am not allowed to remove the Jenkinsfile:s from the repositories entirely.


Context


Within an organization, you typically have a few different kinds of repositories. Each repository versioning one application. You may use different techniques for different kinds of applications. The...
</summary>
<content type="html">
&lt;div id=&quot;toc&quot; class=&quot;toc&quot;&gt;
&lt;div id=&quot;toctitle&quot;&gt;Table of Contents&lt;/div&gt;
&lt;ul class=&quot;sectlevel1&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#the-problems&quot;&gt;The Problems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#the-solution&quot;&gt;The Solution&lt;/a&gt;
&lt;ul class=&quot;sectlevel2&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#shared-library&quot;&gt;Shared Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#duplication&quot;&gt;Duplication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#scalability&quot;&gt;Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#installation-agnostic&quot;&gt;Installation Agnostic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#feature-toggling&quot;&gt;Feature Toggling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post will describe how I use a &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/pipeline/shared-libraries/&quot;&gt;shared library&lt;/a&gt; in Jenkins. Typically when using multibranch pipeline.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If possible (if not forced to) I implement the pipelines without multibranch. I previously wrote about how I do that with my &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/12/14/generic-webhook-trigger-plugin/&quot;&gt;Generic Webhook Trigger Plugin in a previous post&lt;/a&gt;. But this will be my second choice, If I am not allowed to remove the &lt;code&gt;Jenkinsfile&lt;/code&gt;:s from the repositories entirely.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;context&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#context&quot; /&gt;Context&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Within an organization, you typically have a few different kinds of repositories. Each repository versioning one application. You may use different techniques for different kinds of applications. The &lt;a href=&quot;https://github.com/jenkinsci&quot;&gt;Jenkins organization on GitHub&lt;/a&gt; is an example with 2300 repositories.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-problems&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-problems&quot; /&gt;The Problems&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Large &lt;strong&gt;Jenkinsfiles in every repository containing duplicated code&lt;/strong&gt;. It seems common that the &lt;code&gt;Jenkinsfile&lt;/code&gt;:s in every repository contains much more than just the things that are unique for that repository. The &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/pipeline/shared-libraries/&quot;&gt;shared libraries&lt;/a&gt; feature may not be used, or it is used but not with an optimal pattern.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Installation specific Jenkinsfile:s&lt;/strong&gt; that only work with one specific Jenkins installation. Sometimes I see multiple &lt;code&gt;Jenkinsfile&lt;/code&gt;:s, one for each purpose or Jenkins installation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;No documentation&lt;/strong&gt; and/or no natural place to write documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Development is slow&lt;/strong&gt;. Adding new features to repositories is a time consuming task. I want to be able to push features to 1000+ repositories without having to update their &lt;code&gt;Jenkinsfile&lt;/code&gt;:s.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;No flexible way of doing feature toggling&lt;/strong&gt;. When maintaining a large number of repositories it is sometimes nice to introduce a feature to a subset of those repositories. If that works well, the feature is introduced to all repositories.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-solution&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-solution&quot; /&gt;The Solution&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;My solution is a pattern that is inspired by how the &lt;a href=&quot;https://github.com/jenkinsci&quot;&gt;Jenkins organization on GitHub&lt;/a&gt; does it with its &lt;a href=&quot;https://github.com/jenkins-infra/pipeline-library/blob/master/vars/buildPlugin.groovy&quot;&gt;buildPlugin()&lt;/a&gt;. But it is not exactly the same.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;shared-library&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#shared-library&quot; /&gt;Shared Library&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is how I organize my &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/pipeline/shared-libraries/&quot;&gt;shared libraries&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;jenkinsfile&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkinsfile&quot; /&gt;Jenkinsfile&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I put this in the &lt;code&gt;Jenkinsfile&lt;/code&gt;:s:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;buildRepo()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;default-configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#default-configuration&quot; /&gt;Default Configuration&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I provide a default configuration that any repository will get, if no other configuration is given in &lt;code&gt;buildRepo()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I create a &lt;code&gt;vars/getConfig.groovy&lt;/code&gt; with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;call&lt;/span&gt;(givenConfig = [:]) {
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; defaultConfig = [
    &lt;span style=&quot;color:#777&quot;&gt;/**
      * The Jenkins node, or label, that will be allocated for this build.
      */&lt;/span&gt;
    &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;jenkinsNode&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;BUILD&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span style=&quot;color:#777&quot;&gt;/**
      * All config specific to NPM repo type.
      */&lt;/span&gt;
    &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;npm&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: [
      &lt;span style=&quot;color:#777&quot;&gt;/**
        * Whether or not to run Cypress tests, if there are any.
        */&lt;/span&gt;
      &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;cypress&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;
    ],
    &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;maven&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: [
      &lt;span style=&quot;color:#777&quot;&gt;/**
        * Whether or not to run integration tests, if there are any.
        */&lt;/span&gt;
      &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;integTest&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;
    ]
  ]
  &lt;span style=&quot;color:#777&quot;&gt;// https://e.printstacktrace.blog/how-to-merge-two-maps-in-groovy/&lt;/span&gt;
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; effectiveConfig &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;merge&lt;/span&gt;(defaultConfig, givenConfig)
  println &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Configuration is documented here: https://whereverYouHos/getConfig.groovy&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  println &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Default config: &lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; + defaultConfig
  println &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Given config: &lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; + givenConfig
  println &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Effective config: &lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; + effectiveConfig
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;return&lt;/span&gt; effectiveConfig
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;build-plan&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#build-plan&quot; /&gt;Build Plan&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I construct a build plan as early as possible. Taking decisions on what will be done in this build. So that the rest of the code becomes more streamlined.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I try to rely as much as possible on conventions. I may provide configuration that lets users turn off features, but they are otherwise turned on if they are detected.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I create a &lt;code&gt;vars/getBuildPlan.groovy&lt;/code&gt; with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;call&lt;/span&gt;(effectiveConfig = [:]) {
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; derivedBuildPlan = [
    &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;repoType&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;NOT DETECTED&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;npm&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span style=&quot;color:#339;font-weight:bold&quot;&gt;[]&lt;/span&gt;,
    &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;maven&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span style=&quot;color:#339;font-weight:bold&quot;&gt;[]&lt;/span&gt;
  ]

  node {
    deleteDir()
    checkout([&lt;span style=&quot;color:#F00;background-color:#FAA&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;color:#339;font-weight:bold&quot;&gt;class&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;GitSCM&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;,
      &lt;span style=&quot;color:#B06;font-weight:bold&quot;&gt;branches&lt;/span&gt;: [[&lt;span style=&quot;color:#606&quot;&gt;name&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;*/branchName&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;]],
      &lt;span style=&quot;color:#606&quot;&gt;extensions&lt;/span&gt;: [
          [&lt;span style=&quot;color:#F00;background-color:#FAA&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;color:#339;font-weight:bold&quot;&gt;class&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;SparseCheckoutPaths&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;,
            &lt;span style=&quot;color:#B06;font-weight:bold&quot;&gt;sparseCheckoutPaths&lt;/span&gt;:
            [[&lt;span style=&quot;color:#F00;background-color:#FAA&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;color:#339;font-weight:bold&quot;&gt;class&lt;/span&gt;:&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;SparseCheckoutPath&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:#B06;font-weight:bold&quot;&gt;path&lt;/span&gt;:&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;package.json,pom.xml&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;]]
          ]
      ],
      &lt;span style=&quot;color:#606&quot;&gt;userRemoteConfigs&lt;/span&gt;: [[&lt;span style=&quot;color:#606&quot;&gt;credentialsId&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;someID&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;,
      &lt;span style=&quot;color:#606&quot;&gt;url&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;git@link.git&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;]]
    ])

    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt; (fileExists(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;package.json&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;)) {
      &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; packageJSON = readJSON &lt;span style=&quot;color:#606&quot;&gt;file&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;package.json&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;
      derivedBuildPlan.repoType = &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;NPM&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      derivedBuildPlan.npm.cypress = effectiveConfig.npm.cypress &amp;amp;&amp;amp; packageJSON.devDependencies.cypress
      derivedBuildPlan.npm.eslint = packageJSON.devDependencies.eslint
      derivedBuildPlan.npm.tslint = packageJSON.devDependencies.tslint
    } &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;else&lt;/span&gt; &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt; (fileExists(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;pom.xml&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;)) {
      derivedBuildPlan.repoType = &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;MAVEN&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      derivedBuildPlan.maven.integTest = effectiveConfig.maven.integTest &amp;amp;&amp;amp; fileExists(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;src/integtest&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;)
    } &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;else&lt;/span&gt; {
      &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color:#C00;font-weight:bold&quot;&gt;RuntimeException&lt;/span&gt;(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Unable to detect repoType&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;)
    }

    println &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Build plan: &lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; + derivedBuildPlan
    deleteDir()
  }
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;return&lt;/span&gt; derivedBuildPlan
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;public-api&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#public-api&quot; /&gt;Public API&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is the public API, this is what I want the users of this library to actually invoke.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I implement a &lt;code&gt;buildRepo()&lt;/code&gt; method that will use that default configuration. It can also be called with a subset of the default configuration to tweak it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I create a &lt;code&gt;vars/buildRepo.groovy&lt;/code&gt; with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;call&lt;/span&gt;(givenConfig = [:]) {
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; effectiveConfig = getConfig(givenConfig)
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; buildPlan = getBuildPlan(effectiveConfig)

  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt; (effectiveConfig.repoType == &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;MAVEN&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;)
    buildRepoMaven(buildPlan);
  } &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;else&lt;/span&gt; &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt; (effectiveConfig.repoType == &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;NPM&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;)
    buildRepoNpm(buildPlan);
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A user can get all the default behavior with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;buildRepo()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A user can also choose not to run Cypress, even if it exists in the repository:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;buildRepo([
  &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;npm&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: [
    &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;cypress&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span style=&quot;color:#069&quot;&gt;false&lt;/span&gt;
  ]
])&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;supporting-methods&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#supporting-methods&quot; /&gt;Supporting Methods&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is usually much more complex, but I put some code here just to have a complete implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I create a &lt;code&gt;vars/buildRepoNpm.groovy&lt;/code&gt; with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;call&lt;/span&gt;(buildPlan = [:]) {
  node(buildPlan.jenkinsNode) {
    stage(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Install&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
      sh &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;npm install&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    }
    stage(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Build&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
      sh &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;npm run build&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    }
    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt; (buildPlan.npm.tslint) {
      stage(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;TSlint&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
        sh &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;npm run tslint&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      }
    }
    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt; (buildPlan.npm.eslint) {
      stage(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;ESlint&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
        sh &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;npm run eslint&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      }
    }
    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt; (buildPlan.npm.cypress) {
      stage(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Cypress&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
        sh &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;npm run e2e:cypress&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I create a &lt;code&gt;vars/buildRepoMaven.groovy&lt;/code&gt; with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;call&lt;/span&gt;(buildPlan = [:]) {
  node(buildPlan.jenkinsNode) {
    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;if&lt;/span&gt; (buildPlan.maven.integTest) {
      stage(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Verify&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
        sh &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;mvn verify&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      }
    } &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;else&lt;/span&gt; {
      stage(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Package&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
        sh &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;mvn package&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;duplication&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#duplication&quot; /&gt;Duplication&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;Jenkinsfile&lt;/code&gt;:s are kept extremely small. It is only when they, for some reason, diverge from the default config that they need to be changed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;documentation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#documentation&quot; /&gt;Documentation&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is one single point where documentation is written, the &lt;code&gt;getConfig.groovy&lt;/code&gt;-file. It can be referred to whenever someone asks for documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;scalability&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#scalability&quot; /&gt;Scalability&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is a highly scalable pattern. Both with regards to performance and maintainability in code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It scales in performance because the &lt;code&gt;Jenkinsfile&lt;/code&gt;:s can be used by any Jenkins installation. So that you can scale by adding several completely separate Jenkins installations, not only nodes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It scales in code because it adds just a tiny &lt;code&gt;Jenkinsfile&lt;/code&gt; to repositories. It relies on conventions instead, like the existence of attributes in &lt;code&gt;package.json&lt;/code&gt; and location of integration tests in &lt;code&gt;src/integtest&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;installation-agnostic&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#installation-agnostic&quot; /&gt;Installation Agnostic&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;Jenkinsfile&lt;/code&gt;:s does not point at any implementation of this API. It just invokes it and it is up to the Jenkins installation to implement it, with a &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/pipeline/shared-libraries/&quot;&gt;shared libraries&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It can even be used by something that is not Jenkins. Perhaps you decide to do something in a Docker container, you can still parse the &lt;code&gt;Jenkinsfile&lt;/code&gt; with Groovy or (with some magic) with any language.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;feature-toggling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#feature-toggling&quot; /&gt;Feature Toggling&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/pipeline/shared-libraries/&quot;&gt;shared library&lt;/a&gt; can do feature toggling by:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Letting some feature be enabled by default for every repository with name starting with &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or, adding some default config saying &lt;code&gt;&quot;feature-x-enabled&quot;: false&lt;/code&gt;, while some repos change their &lt;code&gt;Jenkinsfile&lt;/code&gt;:s to &lt;code&gt;buildRepo([&quot;feature-x-enabled&quot;: true])&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Whenever the feature feels stable, it can be enabled for everyone by changing only the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/pipeline/shared-libraries/&quot;&gt;shared library&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/10/20/Cross-Industry-DevOps-3-Firms-Get-It-Right-with-Jenkins/</id>
<title>Cross-Industry DevOps: 3 Firms Get It Right with Jenkins</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-10-20T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/10/20/Cross-Industry-DevOps-3-Firms-Get-It-Right-with-Jenkins/" />
<author>
<name>alyssat</name>
</author>
<category term="jenkinsistheway"></category>
<category term="Jenkinsuserstories"></category>
<summary>
Some months ago, we took a significant step in helping the Jenkins community share their stories of how they improved workflows, sped up testing, and saw better quality results after implementing Jenkins into their software development processes.


By the end of the year, we’ll have over 50 Jenkins user stories published with many more in the pipeline. We invite you to explore them all but wanted to share three inspiring examples highlighting how various organizations approach — and implement — Jenkins in the workplace. Enjoy!


Story 1: Jenkins is the way to tackle any challenge


Enterprise-wide CI/CD solution caters to the complex problems...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some months ago, we took a significant step in helping the Jenkins community share their stories of how they improved workflows, sped up testing, and saw better quality results after implementing Jenkins into their software development processes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;By the end of the year, we’ll have &lt;a href=&quot;https://jenkinsistheway.io/user-stories/&quot;&gt;over 50 Jenkins user stories published&lt;/a&gt; with many more in the pipeline. We invite you to explore them all but wanted to share three inspiring examples highlighting how various organizations approach — and implement — Jenkins in the workplace. Enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;story-1-jenkins-is-the-way-to-tackle-any-challenge&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#story-1-jenkins-is-the-way-to-tackle-any-challenge&quot; /&gt;Story 1: Jenkins is the way to tackle any challenge&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;enterprise-wide-cicd-solution-caters-to-the-complex-problems-that-project-teams-face-each-day-as-told-by-jenkins-user-mark-baumann&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#enterprise-wide-cicd-solution-caters-to-the-complex-problems-that-project-teams-face-each-day-as-told-by-jenkins-user-mark-baumann&quot; /&gt;Enterprise-wide CI/CD solution caters to the complex problems that project teams face each day, as told by Jenkins user Mark Baumann:&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;“Our development teams work in a wide range of projects and domains. We have a very diverse tooling landscape since the projects work with all kinds of different software tools. Of course, projects in the embedded domain will have different toolsets than those working in the automotive domain.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Each project team created its own CI Toolchain, which caused a lot of work for the developers and the IT department. Each project needed to set up their own virtual machine, install and manage their own CI Server, Version Management, and whatever they needed. Creating such a toolchain could easily take up weeks until it was running because there was no standard solution and each team had to start from scratch.”&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Discover how ITK-Engineering GmbH developed a company-wide, common, internal CI/CD toolchain and increased the number of builds for each project and how nearly all departments are now practicing CI/CD. &lt;a href=&quot;https://jenkinsistheway.io/user-story/to-tackle-any-challenge/&quot;&gt;The full Jenkins / ITK Engineering story is here!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;story-2-jenkins-is-the-way-to-add-spicy-flavors-to-agency-processes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#story-2-jenkins-is-the-way-to-add-spicy-flavors-to-agency-processes&quot; /&gt;Story 2: Jenkins is the way to add spicy flavors to agency processes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;a-creative-agency-start-up-simplifies-the-build-test-and-deploy-steps-allowing-the-small-team-to-focus-more-on-the-deliverables-and-less-on-the-process-as-told-by-jenkins-user-erik-woitschig&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#a-creative-agency-start-up-simplifies-the-build-test-and-deploy-steps-allowing-the-small-team-to-focus-more-on-the-deliverables-and-less-on-the-process-as-told-by-jenkins-user-erik-woitschig&quot; /&gt;A creative agency start-up simplifies the build, test, and deploy steps, allowing the small team to focus more on the deliverables and less on the process. As told by Jenkins user Erik Woitschig:&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;“It was quite a challenge to streamline and combine all the services to build an artifact to deploy. Because of our micro service-oriented and distributed architecture, the most challenging part of rethinking our build, test, and deploy process was to figure out how best to sync the deployment of all services. We also had to retest builds properly to go live or initiate a rollback.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;With Jenkins and some pipelines, it was relatively simple to create a local and distributed artifact of our application to quickly share and deploy across the team, locally and globally.”&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Because Jenkins is simple to install and easy to maintain, Muzkat has increased productivity far beyond that of a 3-person team. Read on to learn how this bootstrapped Berlin-based agency is making a go of it with Jenkins.  &lt;a href=&quot;https://jenkinsistheway.io/user-story/to-add-spicy-flavors-to-muzkats-processes/&quot;&gt;The full Jenkins / Muzkat story is here!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;story-3-jenkins-is-the-way-to-focus-on-your-code&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#story-3-jenkins-is-the-way-to-focus-on-your-code&quot; /&gt;Story 3: Jenkins is the way to focus on your code&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;as-demands-for-the-wright-medicals-services-grew-they-required-an-agile-devops-environment-that-would-grow-and-scale-along-with-the-tech-team-as-told-by-jenkins-user-christophe-carpentier&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#as-demands-for-the-wright-medicals-services-grew-they-required-an-agile-devops-environment-that-would-grow-and-scale-along-with-the-tech-team-as-told-by-jenkins-user-christophe-carpentier&quot; /&gt;As demands for the Wright Medical’s services grew, they required an agile DevOps environment that would grow and scale along with the tech team, as told by Jenkins user Christophe Carpentier:&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;“What was critical to our success was the stability of Jenkins and a significant number of reliable plugins! We could take a few plugins, set up our workflow, and add GitLab and SonarQube integration without ever stopping or losing data in over a year. We found that all of the problems we encountered were our own, and that is why it was critical to make Jenkins an essential part of our workflow.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;With this implementation, Jenkins allows more than would be manually possible. It flawlessly updates our staging environments, blocks commits based on the SonarQube analysis, and provides us with near-instant feedback on merge requests.”&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Learn how Wright Medical supports a growing dev team by switching to an agile DevOps process that allows for automatic daily releases — versus weekly manual builds. Best of all, it’s letting the developers focus on building great code rather than infrastructure. &lt;a href=&quot;https://jenkinsistheway.io/user-story/to-focus-on-your-code/&quot;&gt;The full Jenkins / Wright Medical story is here!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;what-are-you-building&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#what-are-you-building&quot; /&gt;What are you building?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hope you enjoy these Jenkins user stories. You’ll find that “Jenkins Is The Way” website is a global showcase of how developers and engineers build, deploy, and automate great stuff with Jenkins. If you want to &lt;a href=&quot;https://www.surveymonkey.com/r/JenkinsIsTheWay&quot;&gt;share your story&lt;/a&gt;, we’ll send you a free Jenkins Is The Way T-Shirt in return. Hope to hear from you soon!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/25/document-jenkins-on-kubernetes-introduction/</id>
<title>Documenting Jenkins on Kubernetes Introduction</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-09-25T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/25/document-jenkins-on-kubernetes-introduction/" />
<author>
<name>zaycodes</name>
</author>
<category term="kubernetes"></category>
<category term="documentation"></category>
<category term="gsod"></category>
<category term="gsod2020"></category>
<summary>
I&#8217;m thrilled to announce that I will be participating in Google Season of Docs (GSoD)
2020 with the Jenkins project. I started contributing to Jenkins documentation during the technical writer
exploration phase for Google Season of Docs 2020 and I must say, my journey so far
has been nothing short of amazing majorly because of the supportive community behind this project.
I chose the Jenkins project because I understood this project from a user point of view as I had been exposed to setting up, configuring,
and using Jenkins to automate CI/CD processes. I piqued interest in two of Jenkins project ideas,
Plugin documentation migration and...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’m thrilled to announce that I will be participating in &lt;a href=&quot;https://developers.google.com/season-of-docs/&quot;&gt;Google Season of Docs (GSoD)&lt;/a&gt;
2020 with the &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; project. I started contributing to Jenkins documentation during the technical writer
exploration phase for &lt;a href=&quot;https://developers.google.com/season-of-docs&quot;&gt;Google Season of Docs&lt;/a&gt; 2020 and I must say, my journey so far
has been nothing short of amazing majorly because of the supportive community behind this project.
I chose the Jenkins project because I understood this project from a user point of view as I had been exposed to setting up, configuring,
and using Jenkins to automate CI/CD processes. I piqued interest in two of Jenkins &lt;a href=&quot;https://www.jenkins.io/sigs/docs/gsod/&quot;&gt;project ideas&lt;/a&gt;,
&lt;a href=&quot;https://www.jenkins.io/sigs/docs/#plugin-documentation-on-github&quot;&gt;Plugin documentation migration and update&lt;/a&gt; and &lt;a href=&quot;https://www.jenkins.io/sigs/docs/#jenkins-on-kubernetes&quot;&gt;Document Jenkins on Kubernetes&lt;/a&gt;, submitted proposals for these two projects and to my utmost joy, the latter was selected.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article, I’m going to be explaining what my selected project is about and why this project is important to the Jenkins community and its users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;introduction&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#introduction&quot; /&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Kubernetes is a platform-agnostic container orchestration tool created by Google and heavily supported
by the open-source community as a project of the Cloud Native Computing Foundation.
It allows you to use container instances and manage them for scaling and fault tolerance.
It also handles a wide range of management activities that would otherwise require separate solutions or custom code,
including request routing, container discovery, health checks, and rolling updates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Kubernetes is compatible with the majority of CI/CD tools which allow developers to run tests,
deploy builds in Kubernetes and update applications with no downtime.
One of the most popular CI/CD tools now is Jenkins for the following reasons:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;It is open-source and free.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it is user-friendly, easy to install and does not require additional installations or components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jenkins is also quite easy to configure, modify and extend.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It deploys code and generates test reports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It also boasts a rich plugin ecosystem. The extensive pool of plugins makes Jenkins flexible and allows building, deploying and automating across various platforms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jenkins can be configured according to the requirements for continuous integrations and continuous delivery.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jenkins is available for all platforms and different operating systems, whether it is OS X, Windows or Linux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most of the integration work is automated. Hence fewer integration issues. This saves both time and money over the lifespan of a project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following reasons have made Jenkins on Kubernetes a popular theme for Jenkins users, however,
there’s currently no central location for documentation describing Jenkins on Kubernetes,
thereby making it difficult for Jenkins on Kubernetes users to navigate and find information.
This project would create a new Kubernetes Volume on &lt;a href=&quot;https://www.jenkins.io/solutions/&quot;&gt;Jenkins.io&lt;/a&gt; which would describe the concepts,
techniques, and choices for Kubernetes users running Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;current-state&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#current-state&quot; /&gt;&lt;strong&gt;Current State&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are a lot of presentations and articles about running Jenkins on Kubernetes, however,
there’s no central location for describing Jenkins on Kubernetes. This makes it difficult for:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jenkins on Kubernetes users to navigate and find information&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Track, update and maintain information on Jenkins on Kubernetes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;project-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#project-improvements&quot; /&gt;&lt;strong&gt;Project Improvements&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To solve the existing issue with Jenkins on Kubernetes documentation,
a new Kubernetes volume will be created on &lt;a href=&quot;https://www.jenkins.io/solutions/&quot;&gt;Jenkins.io&lt;/a&gt;.
This Volume is going to aggregate user guides, information on cloud providers and demos on Jenkins on Kubernetes.
You can find the proposed contents for the new volume &lt;a href=&quot;https://docs.google.com/document/d/1wMeeN4oA7AN4F3pfLBIAJZWXD7PdqSKHotdk76yCw68/edit?usp=sharing&quot;&gt;here&lt;/a&gt;.
Feel free to comment on any suggestions you might have in the proposed content doc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This project will also provide the following advantages:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Improve the user experience of Jenkins on Kubernetes users by giving them a one-stop-shop for information on Jenkins on Kubernetes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make it easy to track, update and maintain information on Jenkins on Kubernetes using the Solutions page&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reference the existing community documentation for Jenkins on K8s (plugins and tools/integrations).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to guides, tutorials and explanations of concepts and techniques in Jenkins on Kubernetes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Just-In-Time documentation which means that rather than documenting every feature comprehensively,
we will produce and release documentation in bits but continuously based on popular questions,
feedback and area of interests gathered from the community and users.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;project-timeline&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#project-timeline&quot; /&gt;&lt;strong&gt;Project Timeline&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Find below a summary of the project timeline.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Community bonding (&lt;/strong&gt;&lt;strong&gt;August 17 - September 13&lt;/strong&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Set up a communication channel and time (due to time difference).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Refine my goals and set expectations on both sides.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn more about the community and Jenkins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gather and thoroughly study existing resources that will be useful and helpful to the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pre-planning of the project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contacting Stakeholders and onboarding contributors&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Documentation Period&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This period is going to be focused on creating contents which include user guides,
tutorials, demos, etc. for Jenkins on Kubernetes.
Some of the topics to be covered include Installing Jenkins on Kubernetes,
Administering Jenkins on Kubernetes, Cloud providers and much more.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;Documentation Timeline&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;1st Month (September - October)&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some basic prerequisites for installing jenkins on kubernetes include docker, a kubernetes cluster, and optionally Helm or the Jenkins Operator for Kubernetes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Helm is a package manager which automates the process of installing, configuring, upgrading, and removing complex Kubernetes application. A Helm chart defines several Kubernetes resources as a set. Helm can make deployments easier and repeatable because all resources for an application are deployed by running one command.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Helm has two elements, a client (helm) and a server (Tiller). The server element runs inside a Kubernetes cluster and manages the installation of charts. With Helm, configuration settings are kept in values.yaml file separate from the manifest formats. The configuration values can be changed according to application need without touching the rest of the manifest.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;On the other hand, the Jenkins operator is a Kubernetes native operator which fully manages Jenkins on Kubernetes. It is easy to install with just a few manifests and allows users to configure and manage Jenkins on Kubernetes. To run jenkins-operator, you need to have a running Kubernetes cluster and kubectl installed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins Operator provides out of the box:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Integration with Kubernetes — preconfigured kubernetes-plugin for provisioning dynamic Jenkins Slaves as Pods&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pipelines as Code — declarative way to version your pipelines in VCS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extensibility via Groovy scripts or Configuration as Code plugin-customize your Jenkins, configure OAuth authorization and more&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Security and Hardening — an initial security hardening of Jenkins instance via Groovy scripts to prevent security vulnerabilities&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the first month, the focus will be on documenting an introductory section.
This section will include but is not limited to Setting up Kubernetes cluster, Installing Jenkins on Kubernetes, exploring the various approaches by which this can be achieved such as using helm package manager or the Jenkins Operator as explained above and Administering Jenkins on Kubernetes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;2nd Month (October - November)&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the second month, the focus will be on documenting how to setup up CI/CD pipelines using Jenkins and Kubernetes on different cloud providers.
Some of the cloud providers we will be looking at include but are not limited to:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Amazon Web Service (AWS)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Azure Kubernetes Service&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google Cloud&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;3rd Month (November - December)&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the final month, the focus will be on creating demos and tutorials,
submitting project report, evaluation of mentors and finally,
publishing a report of my experience as a participant in Season of Docs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#conclusion&quot; /&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins community is actively working towards improving its documentation to create a better
experience for Jenkins users and invites technical writers to join the community and contribute to the Jenkins on Kubernetes project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To contribute to the Jenkins on Kubernetes project, simply join the Jenkins documentation &lt;a href=&quot;https://gitter.im/jenkinsci/docs&quot;&gt;Gitter&lt;/a&gt; channel and drop a message,
you can also find the Google season of docs office hour notes and recordings for Jenkins on Kubernetes &lt;a href=&quot;https://docs.google.com/document/d/17cPLUrJ4Ul4Y8MREjDyfWBEN7PlnlrmPh6wuKMPFmPg/edit?usp=sharing&quot;&gt;here&lt;/a&gt;.
GSOD office hours take place twice a week on Mondays and Thursdays between 6pm GMT+1 and 7pm GMT+1,
if you would like to be part of these meetings, you can indicate interest in the Jenkins Documentation
&lt;a href=&quot;https://gitter.im/jenkinsci/docs&quot;&gt;Gitter&lt;/a&gt; channel and we would be happy to have you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you are also a newcomer and would like to contribute to Jenkins, documentation is a great place to contribute.
A lot of small patches can be done from the GitHub web interface even without cloning repositories locally.
You can find some good first issues to get started with &lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/labels/good%20first%20issue&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Find more information on contributing to Jenkins documentation &lt;a href=&quot;https://www.jenkins.io/participate/document&quot;&gt;here&lt;/a&gt;.
If you have further questions about the Jenkins on Kubernetes project or contributing to Jenkins,
you can reach out on the Jenkins documentation &lt;a href=&quot;https://gitter.im/jenkinsci/docs&quot;&gt;Gitter&lt;/a&gt; channel.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;additional-resources&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#additional-resources&quot; /&gt;&lt;strong&gt;Additional Resources&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1zTEKtOp2i1K2fw5RQ_a_KVOB2z0gz9987NYzTnIS6G8/edit?usp=sharing&quot;&gt;GSoD Proposal&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/17cPLUrJ4Ul4Y8MREjDyfWBEN7PlnlrmPh6wuKMPFmPg/edit?usp=sharing&quot;&gt;GSoD Office Hours Notes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1m0rTrXk7WisPXUeaKGj81dOFO2CcW4o_Nvo7NvcoL98/edit?usp=sharing&quot;&gt;Google Season of Docs - Startup&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jenkins.io/sigs/docs/gsod/&quot;&gt;Google Season of Docs&lt;/a&gt; on jenkins.io&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1uNNo0QJKPHnNp8PGr_jLI8p3K_94ZYD-M0evZOEZ93c/edit#heading=h.8q8l1ah569xk&quot;&gt;Docs SIG&lt;/a&gt; for Google Season of Docs startup (&lt;a href=&quot;https://www.youtube.com/watch?v=sY2gI47zho8&amp;amp;list=PLN7ajX_VdyaNp0lk5BmyAgqPS52u_4tC8&quot;&gt;video&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/24/board-elections/</id>
<title>2020 Jenkins Board and Officer elections. Nominations and voter registration are open!</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-09-24T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/24/board-elections/" />
<category term="community"></category>
<category term="governance"></category>
<category term="governance-board"></category>
<category term="elections"></category>
<summary>
Jenkins 2020 Elections are over, thanks to all participants!
Please see the results announcement.





We are happy to announce the 2020 elections in the Jenkins project!
Nominations are open for two governance board and for all five officer positions,
namely: Security, Events, Release, Infrastructure, and Documentation.
The board positions and officer roles are an essential part of Jenkins' community governance and well-being.
We invite Jenkins contributors and community members to sign-up for elections and to nominate contributors for the elected roles.
Deadline for nominations is Oct 15, voter registration ends on Nov 02.


These are the second elections held by the Jenkins project.
During the 2019 elections, we elected...
</summary>
<content type="html">
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot; /&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Jenkins 2020 Elections are over, thanks to all participants!
Please see the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/12/03/election-results&quot;&gt;results announcement&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are happy to announce the 2020 elections in the Jenkins project!
Nominations are open for two &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board&quot;&gt;governance board&lt;/a&gt; and for all five &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/&quot;&gt;officer&lt;/a&gt; positions,
namely: Security, Events, Release, Infrastructure, and Documentation.
The board positions and officer roles are an essential part of Jenkins&#39; community governance and well-being.
We invite Jenkins contributors and community members to sign-up for elections and to nominate contributors for the elected roles.
Deadline for nominations is &lt;strong&gt;Oct 15&lt;/strong&gt;, voter registration ends on &lt;strong&gt;Nov 02&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These are the second elections held by the Jenkins project.
During the 2019 elections, we elected 3 board members and 5 officers.
You can find the voting results &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/12/16/board-election-results/&quot;&gt;here&lt;/a&gt;.
This year, we decided to make a few changes in the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board-election-process&quot;&gt;election process&lt;/a&gt; based on the 2019 elections feedback.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;a class=&quot;image&quot; href=&quot;https://forms.gle/y3qDo8EM8iQnd3fY9&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/jenkins-is-the-way/register-button.png&quot; alt=&quot;register button&quot; height=&quot;48&quot; /&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;key-dates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#key-dates&quot; /&gt;Key dates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sep 24&lt;/strong&gt; - Nominations open, voting sign-up begins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Oct 15&lt;/strong&gt; - Board and officer nominations deadline.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Oct 26&lt;/strong&gt; (or later) - List of candidates is published, including personal statements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Nov 10&lt;/strong&gt; - Voting begins. &lt;a href=&quot;https://civs.cs.cornell.edu/&quot;&gt;Condorcet Internet Voting Service&lt;/a&gt; will be used for voting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Nov 24&lt;/strong&gt; - Voting sign-up is over.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Nov 27&lt;/strong&gt; - Voting ends, 11PM UTC.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dec 03&lt;/strong&gt; - Election results are announced and take effect.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;signing-up-for-voting&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#signing-up-for-voting&quot; /&gt;Signing up for voting&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Any Jenkins individual contributor is eligible to vote in the election
if there was a contribution made before September 01, 2020.
&lt;em&gt;Contribution&lt;/em&gt; does not mean a &lt;em&gt;code contribution&lt;/em&gt;,
all contributions count:
documentation patches,
code reviews,
substantial issue reports,
issues and mailing list responses,
social media posts,
testing,
etc.
Such a contribution should be public.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can register to vote in one of two ways:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Fill out &lt;a href=&quot;https://forms.gle/y3qDo8EM8iQnd3fY9&quot;&gt;this Google Form&lt;/a&gt;.
This way requires logging into your Google Account to verify authenticity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send an email to &lt;a href=&quot;mailto:jenkins-2020-elections@googlegroups.com&quot;&gt;jenkins-2020-elections@googlegroups.com&lt;/a&gt;.
You will need to provide the information specified &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board-election-process/#voter-sign-up-and-eligibility&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the registration period, the election committee will process the form submissions and prepare a list of the registered voters.
In the case of rejection, one of the election committee members will send a rejection email.
Every individual contributor is expected to vote only once.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Deadline for the voter registration is &lt;strong&gt;November 24&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;nominating-contributors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#nominating-contributors&quot; /&gt;Nominating contributors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Suggestions from the community members are highly valued,
and the board welcomes additional nominations.
If you feel that a particular person is well suited to help guide Jenkins, please submit a name and the reason for your nomination to &lt;a href=&quot;mailto:jenkinsci-board@googlegroups.com&quot;&gt;jenkinsci-board@googlegroups.com&lt;/a&gt;.
Self nominations are also welcome.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Deadline for nominations is &lt;strong&gt;October 15&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;terms&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#terms&quot; /&gt;Terms&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The terms of office for these elected positions are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Officer positions (1 year): December 03, 2020 to December 2, 2021&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Governing board member (2 years): December 03, 2020 to December 2, 2022&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;elections-committee&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#elections-committee&quot; /&gt;Elections committee&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The 2020 elections are coordinated by the Jenkins Governance Board members who are not up for re-election this year:
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/slide_o_mix/&quot;&gt;Alex Earl&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/uhafner/&quot;&gt;Ullrich Hafner&lt;/a&gt;, and
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/oleg_nenashev/&quot;&gt;Oleg Nenashev&lt;/a&gt;.
These contributors are responsible for managing the process,
preparing the nominee list for elections,
forming and verifying the voter list,
processing the votes,
and announcing the results.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can contact the election committee via &lt;a href=&quot;mailto:jenkins-2020-elections@googlegroups.com&quot;&gt;jenkins-2020-elections@googlegroups.com&lt;/a&gt;.
Please use this email for any queries and feedback regarding the elections.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;references&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#references&quot; /&gt;References&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board&quot;&gt;Jenkins Governance Board&lt;/a&gt; and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/team-leads/&quot;&gt;Jenkins Officers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/board-election-process&quot;&gt;Jenkins Board and Officer Election Process&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/12/16/board-election-results/&quot;&gt;2019 election results&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://groups.google.com/g/jenkinsci-dev/c/NQg-_xhrT-0&quot;&gt;Elections coordination in the mailing list&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/19/jenkins-at-devops-world-2020/</id>
<title>Jenkins at DevOps World 2020</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-09-19T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/19/jenkins-at-devops-world-2020/" />
<author>
<name>alyssat</name>
</author>
<category term="events"></category>
<category term="conference"></category>
<category term="cicd"></category>
<category term="talks"></category>
<category term="workshops"></category>
<summary>
The annual DevOps World, formerly known as DevOps World | Jenkins World is next week - Sept 22-24, with workshops on Sept 25. Just like other events this year, DevOps World pivoted to a virtual event but that doesn’t mean there is a shortage of sessions or networking opportunities. There will be over 50 Jenkins/open source sessions and opportunities to virtually connect with over 20,000+ attendees on the event platform. Below are just a few sessions, the full agenda can be found HERE:


Jenkins: Where It Is and Where It is Going


Date: Tuesday, September 22, 7:00 a.m.-7:30 a.m (PDT)


Speaker: Oleg Nenashev


Jenkins...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The annual &lt;a href=&quot;https://www.cloudbees.com/devops-world&quot;&gt;DevOps World&lt;/a&gt;, formerly known as DevOps World | Jenkins World is next week - Sept 22-24, with workshops on Sept 25. Just like other events this year, DevOps World pivoted to a virtual event but that doesn’t mean there is a shortage of sessions or networking opportunities. There will be over 50 Jenkins/open source sessions and opportunities to virtually connect with over 20,000+ attendees on the event platform. Below are just a few sessions, the full agenda can be found &lt;a href=&quot;https://sessions.devopsworld.com/sessions&quot;&gt;HERE&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;jenkins-where-it-is-and-where-it-is-going&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-where-it-is-and-where-it-is-going&quot; /&gt;Jenkins: Where It Is and Where It is Going&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Date: Tuesday, September 22, 7:00 a.m.-7:30 a.m (PDT)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Speaker: &lt;a href=&quot;https://github.com/oleg-nenashev&quot;&gt;Oleg Nenashev&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins keeps evolving to address demands from its users and contributors: configuration as code, better support of cloud-native technologies, etc. Recently, we have introduced a public roadmap for the project, and there are many key initiatives in development and preview phases. This session will cover the current state of Jenkins and what’s next for the project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;managing-devsecops-pipelines-at-scale-with-jenkins-templating-engine&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#managing-devsecops-pipelines-at-scale-with-jenkins-templating-engine&quot; /&gt;Managing DevSecOps Pipelines at Scale with Jenkins Templating Engine&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Date: Tuesday, September 22, 11:30 a.m.-12:00 p.m. (PDT)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Speaker: &lt;a href=&quot;https://github.com/steven-terrana/steven-terrana&quot;&gt;Steven Terrana&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Are you currently helping build or maintain a Jenkins pipeline for more than one application or team? Are you tired of copying and pasting Jenkinsfiles and tweaking them to fit each team’s specific needs? This session will feature a live demonstration of getting up and running with the Jenkins Templating Engine (JTE). Attendees will learn how to stop creating bespoke pipelines on a per-application basis and, instead, create tool-agnostic pipeline templates that multiple teams can inherit - regardless of tech stack.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;ebays-journey-building-ci-at-scale&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#ebays-journey-building-ci-at-scale&quot; /&gt;eBay’s Journey Building CI at Scale&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Date: Tuesday, September 22, 12:30 p.m.-1:00 p.m.(PDT)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Speakers: Ravi Kiran Rao Bukka &amp;amp; Vasumathy Seenuvasan&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A scalable CI platform with 6,000+ Jenkins instances serving around 43,000 builds per day on multi-cluster Kubernetes. A system built with metrics, key resource tuning, remediation’s and security in place. Join this session to hear from eBay on their journey of best practices and learnings about open source.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;machine-learning-plugins-for-data-science-in-jenkins&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#machine-learning-plugins-for-data-science-in-jenkins&quot; /&gt;Machine Learning Plugins for Data Science in Jenkins&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Date: Wednesday, September 23, 11:00 a.m.-11:15 a.m.(PDT)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Speaker: Loghi Perinpanayagam&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Machine Learning has evolved rapidly in the software industry for recent years. Jenkins CI/CD can be a good practice to deliver a high reliable product in the end. We have done an initial startup on this plugin that can be used to build Jupyter Notebooks, Python files and JSON files in Zeppelin format. In addition, the build wrappers could be used to convert Jupyter Notebooks to Python/JSON and/or copy the files to the workspace for more actions.  This Machine Learning plugin will endeavor to satisfy the data science community together with the help of other plugins. Success of this plugin will definitely serve much benefits to the community and Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;jenkins-ui-gets-a-makeover&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-ui-gets-a-makeover&quot; /&gt;Jenkins UI Gets a Makeover&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Date: Thursday, September 24, 7:30 a.m.-8:00 a.m.(PDT)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Speakers: &lt;a href=&quot;https://github.com/fqueiruga&quot;&gt;Felix Queiruga&lt;/a&gt; &amp;amp; Jeremy Hartley&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;An overview of the Jenkins UI overhaul. We are taking an iterative approach to gradually refresh the Jenkins UI. This approach will make Jenkins look fresh and modern, without changing the way users are accustomed to working with Jenkins or require plugins to be rewritten to render properly in the new Jenkins UI. Join this session to learn the changes we’ve made and how you can help to improve the Jenkins UI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The event is free to everyone and recordings will be available on-demand. &lt;a href=&quot;https://experience.cloudbees.com/e/DevOpsWorld&quot;&gt;Registration&lt;/a&gt; is required to access the on-demand recordings. And don’t forget to visit the CDF booth in the expo hall for one on one Q&amp;amp;A’s with Jenkins experts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/12/new-jenkins-release-observations/</id>
<title>Testing Jenkins 2.249.1 on Windows</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-09-12T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/12/new-jenkins-release-observations/" />
<category term="windows"></category>
<category term="platform-sig"></category>
<category term="installers"></category>
<category term="announcement"></category>
<summary>
This article describes our observations during Windows testing of the Jenkins 2.249.1 release candidate.


Upgrade testing


Jenkins 2.249.1 is a new long term support release with user interface improvements and changes in Windows support.
It is the first long term support release to drop support for Microsoft.NET framework 2.0.
The end of support for Microsoft.NET framework 2.0 was announced in the Windows Support Updates blog post.
The Windows support upgrade guidelines describe major things to consider when upgrading Jenkins controllers and agents on Windows.


As part of our preparation for the release, we tested several configurations.
This article describes our experiences with those configurations.


Upgrade approaches

We tested controller...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This article describes our observations during Windows testing of the Jenkins 2.249.1 release candidate.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;upgrade-testing&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upgrade-testing&quot; /&gt;Upgrade testing&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins 2.249.1 is a new long term support release with user interface improvements and changes in Windows support.
It is the first long term support release to drop support for Microsoft.NET framework 2.0.
The end of support for Microsoft.NET framework 2.0 was announced in the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/23/windows-support-updates/&quot;&gt;Windows Support Updates blog post&lt;/a&gt;.
The Windows support &lt;a href=&quot;https://www.jenkins.io/blog/2020/07/23/windows-support-updates/#upgrade-guidelines&quot;&gt;upgrade guidelines&lt;/a&gt; describe major things to consider when upgrading Jenkins controllers and agents on Windows.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As part of our preparation for the release, we tested several configurations.
This article describes our experiences with those configurations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;upgrade-approaches&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upgrade-approaches&quot; /&gt;Upgrade approaches&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We tested controller and agent upgrades from Jenkins 2.235.x to 2.249.1-rc on Windows.
The tests included:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#32-bit-windows-msi&quot;&gt;32 bit Windows MSI&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#64-bit-windows-msi&quot;&gt;64 bit Windows MSI&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#war-file-on-windows&quot;&gt;WAR (file) on Windows&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;upgrade-process&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upgrade-process&quot; /&gt;Upgrade process&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our upgrade process included:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install a previous version of Jenkins controller on Windows&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install a previous version of Jenkins agent on Windows and configure it as a service&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade Jenkins controller from &quot;Manage Jenkins&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart the Jenkins Windows service for the controller&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade the Jenkins agent on Windows with the latest &lt;code&gt;agent.jar&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart the Jenkins Windows service for the agent&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;testing-results&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#testing-results&quot; /&gt;Testing results&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We successfully tested&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Restarting Windows service for controller (&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-63198&quot;&gt;JENKINS-63198&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restarting Windows service for agents (&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-63223&quot;&gt;JENKINS-63223&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We confirmed that we can continue our &lt;a href=&quot;https://www.jenkins.io/blog/2020/07/23/windows-support-updates/#new-policy&quot;&gt;Level 1 support policy&lt;/a&gt; for Jenkins 2.249.1.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;32-bit-windows-msi&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#32-bit-windows-msi&quot; /&gt;32 bit Windows MSI&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Prior to Jenkins 2.235.3, the Jenkins LTS Windows installer was provided as a 32 bit MSI and included a bundled Java 8 runtime environment.
The Jenkins agent can be downloaded and run through Java web start using the bundled Java 8 runtime environment.
The agent can also be configured to run as a service using the bundled Java 8 runtime environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jenkins-controller&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-controller&quot; /&gt;Jenkins controller&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins 2.235.1 installs JRE 8u144 for 32 bit Windows.
The installer configures the Jenkins controller to run as the SYSTEM user.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Refer to the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/02/01/windows-installers/&quot;&gt;Windows Installer Updates blog post&lt;/a&gt; for details of the controller installation process with the 32 bit MSI.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jenkins-agent&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-agent&quot; /&gt;Jenkins agent&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins agents on Windows are often configured to &quot;Launch agent by connecting it to the master&quot;.
The Jenkins agent configuration correctly warns that the controller must open the TCP port for inbound agents in the &quot;Configure Global Security&quot; page.
It is easiest to allow Jenkins to choose the port (a &quot;Random&quot; port).
Jenkins selects a random available port number and shares that port number with agents during their initial connection to the Jenkins http port.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/tcp-port-for-inbound-agents.png&quot; alt=&quot;TCP port for inbound agents&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;configure-the-agent&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#configure-the-agent&quot; /&gt;Configure the agent&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once the Jenkins TCP port is open for inbound agents, a new agent is configured from the Jenkins &quot;Nodes&quot; menu
This creates an &quot;inbound Jenkins agent&quot; that uses the Jenkins &lt;code&gt;agent.jar&lt;/code&gt; to initiate the connection to the Jenkins controller.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/inbound-agent-configuration.png&quot; alt=&quot;Inbound agent configuration&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;download-the-agent&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#download-the-agent&quot; /&gt;Download the agent&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The agent starts the first time by clicking the &quot;Launch&quot; button on the agent configuration page (only available with Java 8).
That downloads the &quot;slave-agent.jnlp&quot; file from the web browser.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/launch-inbound-agent-from-jenkins.png&quot; alt=&quot;Launch inbound agent from Jenkins&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;start-the-agent&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#start-the-agent&quot; /&gt;Start the agent&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The downloaded file needs to be opened from a command prompt using the &lt;code&gt;javaws&lt;/code&gt; command that is included with the bundled JRE:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;nowrap&quot;&gt;C:\&amp;gt; &quot;C:\Program Files (x86)\Jenkins\jre\bin\javaws.exe&quot; -wait slave-agent.jnlp&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot; /&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The &lt;code&gt;javaws&lt;/code&gt; program has been removed from  the most recent releases of Java 8 and from Java 11.
Refer to &lt;a href=&quot;#Jenkins agent and icedtea&quot;&gt;[Jenkins agent and icedtea]&lt;/a&gt; for a technique that can help users of the most recent releases of Java 8.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Java web start (javaws.exe) prompts for permission to run the program with this dialog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/javaws-prompt-for-remoting-agent.png&quot; alt=&quot;Java Web Start prompt for remoting agent&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;install-the-agent-as-a-service&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#install-the-agent-as-a-service&quot; /&gt;Install the agent as a service&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The agent runs and displays a window on the desktop with a single menu entry, &quot;Install as a service&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/install-agent-as-a-service.png&quot; alt=&quot;Install agent as a service&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the &quot;Install as a service&quot; menu item is clicked, the agent is adjusted to run as a Windows service using the SYSTEM account.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;upgrade-the-controller&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upgrade-the-controller&quot; /&gt;Upgrade the controller&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins controller on Windows can be upgraded to Jenkins 2.249.1 from the &quot;Manage Jenkins&quot; page.
The upgrade process downloads the new &lt;code&gt;jenkins.war&lt;/code&gt; file, saves the current version in case of later downgrade, and offers to restart.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/upgrade-jenkins-from-manage-jenkins.png&quot; alt=&quot;Upgrade Jenkins from Manage Jenkins&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;upgrade-the-agent&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upgrade-the-agent&quot; /&gt;Upgrade the agent&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins inbound agent is not upgraded automatically.
The agent administrator downloads the most recent &lt;code&gt;agent.jar&lt;/code&gt; from their Jenkins controller, stops the running agent, and replaces the installed &lt;code&gt;agent.jar&lt;/code&gt; with the downloaded version.
The agent service will reconnect to the Jenkins controller after the administrator restarts it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;64-bit-windows-msi&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#64-bit-windows-msi&quot; /&gt;64 bit Windows MSI&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Beginning with &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/12/windows-installers-upgrade/&quot;&gt;Jenkins 2.235.3&lt;/a&gt;, the Jenkins LTS Windows installer is a 64 bit MSI.
It runs Jenkins with the 64 bit JDK (Java 8 or Java 11) selected by the user.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jenkins-controller-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-controller-2&quot; /&gt;Jenkins controller&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins 2.235.3 was installed using AdoptOpenJDK Java 8u262 in one test.
It was installed using AdoptOpenJDK Java 11.0.8 in another test.
In both cases, the installer configured the Jenkins controller to run with the Windows service account we had previously configured.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Refer to the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/02/01/windows-installers/#screenshots&quot;&gt;Windows Installer Updates blog post&lt;/a&gt; for details of the controller installation process with the 64 bit MSI.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jenkins-agent-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-agent-2&quot; /&gt;Jenkins agent&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins agents on Windows are often configured to &quot;Launch agent by connecting it to the master&quot;.
The Jenkins agent configuration correctly warns that the controller must open the TCP port for inbound agents in the &quot;Configure Global Security&quot; page.
It is easiest to allow Jenkins to choose the port (a &quot;Random&quot; port).
Jenkins selects a random available port number and shares that port number with agents during their initial connection to the Jenkins http port.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/tcp-port-for-inbound-agents.png&quot; alt=&quot;TCP port for inbound agents&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;configure-the-agent-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#configure-the-agent-2&quot; /&gt;Configure the agent&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once the Jenkins TCP port is open for inbound agents, a new agent is configured from the Jenkins &quot;Nodes&quot; menu
This creates an &quot;inbound Jenkins agent&quot; that uses the Jenkins &lt;code&gt;agent.jar&lt;/code&gt; to initiate the connection to the Jenkins controller.
Once the Jenkins TCP port is open for inbound agents, a new agent is configured from the Jenkins &quot;Nodes&quot; menu
This creates an &quot;inbound Jenkins agent&quot; that uses the Jenkins &lt;code&gt;agent.jar&lt;/code&gt; to initiate the connection to the Jenkins controller.
Once the Jenkins TCP port is open for inbound agents, a new agent is configured from the Jenkins &quot;Nodes&quot; menu
This creates an &quot;inbound Jenkins agent&quot; that uses the Jenkins &lt;code&gt;agent.jar&lt;/code&gt; to initiate the connection to the Jenkins controller.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/inbound-agent-configuration.png&quot; alt=&quot;Inbound agent configuration&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;download-the-agent-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#download-the-agent-2&quot; /&gt;Download the agent&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The agent was started the first time by clicking the &quot;Launch&quot; button on the agent configuration page (only available with Java 8).
That downloads the &quot;slave-agent.jnlp&quot; file from the web browser.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/launch-inbound-agent-from-jenkins.png&quot; alt=&quot;Launch inbound agent from Jenkins&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;start-the-agent-with-icedtea-web&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#start-the-agent-with-icedtea-web&quot; /&gt;Start the agent with IcedTea-Web&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recent versions of Java 8 and all versions of Java 11 have removed the &lt;code&gt;javaws&lt;/code&gt; command.
Jenkins agents for Java 8 can still be started with the &lt;code&gt;javaws&lt;/code&gt; command, but it needs to be downloaded separately from the JVM.
We open &quot;slave-agent.jnlp&quot; from a command prompt using the &lt;code&gt;javaws&lt;/code&gt; command that is available from &lt;a href=&quot;https://adoptopenjdk.net/icedtea-web.html&quot;&gt;AdoptOpenJDK IcedTea&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;nowrap&quot;&gt;C:\&amp;gt; C:\icedtea-web-1.8.3.win.bin\icedtea-web-image\bin\javaws.exe -wait slave-agent.jnlp&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Java web start (javaws.exe) prompts for permission to run the program with this dialog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/javaws-prompt-for-remoting-agent.png&quot; alt=&quot;Java Web Start prompt for remoting agent&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;install-the-agent-as-a-service-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#install-the-agent-as-a-service-2&quot; /&gt;Install the agent as a service&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The agent runs and displays a window on the desktop with a single menu entry, &quot;Install as a service&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/install-agent-as-a-service.png&quot; alt=&quot;Install agent as a service&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the &quot;Install as a service&quot; menu item is clicked, the agent is installed and configured to run as a Windows service using the SYSTEM account.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;upgrading-the-controller&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upgrading-the-controller&quot; /&gt;Upgrading the controller&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins controller on Windows was upgraded to Jenkins 2.249.1 from the &quot;Manage Jenkins&quot; page.
The upgrade process downloads the new &lt;code&gt;jenkins.war&lt;/code&gt; file, saves the current version in case of later downgrade, and offers to restart.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/upgrade-jenkins-from-manage-jenkins.png&quot; alt=&quot;Upgrade Jenkins from Manage Jenkins&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;upgrading-the-agent&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upgrading-the-agent&quot; /&gt;Upgrading the agent&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins inbound agent is not upgraded automatically or from a Jenkins user interface.
The agent administrator downloads the most recent &lt;code&gt;agent.jar&lt;/code&gt; from their Jenkins controller and replaces the installed &lt;code&gt;agent.jar&lt;/code&gt; with the downloaded version.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;war-file-on-windows&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#war-file-on-windows&quot; /&gt;WAR (file) on Windows&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins allows users to run the Jenkins web archive (WAR) file from a command line and then install it as a service from within Jenkins.
This installation technique uses the Jenkins WAR file but does &lt;strong&gt;not&lt;/strong&gt; use a Windows MSI package.
The Jenkins WAR file includes the necessary components to install and configure Jenkins as a service.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;install-controller-as-a-service&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#install-controller-as-a-service&quot; /&gt;Install controller as a service&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the Jenkins war file is started from a Windows command prompt, &quot;Manage Jenkins&quot; includes &quot;Install as a service&quot;.
An administrator selects that entry and Jenkins will configure itself to run as a service/
The installer configures the Jenkins controller to run as the SYSTEM user.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/install-controller-as-service-from-manage-jenkins.png&quot; alt=&quot;Install Jenkins as a service from Manage Jenkins&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jenkins-agent-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-agent-3&quot; /&gt;Jenkins agent&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins agents on Windows are often configured to &quot;Launch agent by connecting it to the master&quot;.
The Jenkins agent configuration correctly warns that the controller must open the TCP port for inbound agents in the &quot;Configure Global Security&quot; page.
It is easiest to allow Jenkins to choose the port (a &quot;Random&quot; port).
Jenkins selects a random available port number and shares that port number with agents during their initial connection to the Jenkins http port.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/tcp-port-for-inbound-agents.png&quot; alt=&quot;TCP port for inbound agents&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;configure-the-agent-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#configure-the-agent-3&quot; /&gt;Configure the agent&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After opening the Jenkins TCP port for inbound agents, we configured a new agent from the &quot;Nodes&quot; menu
This created an &quot;inbound Jenkins agent&quot; that uses the Jenkins &lt;code&gt;agent.jar&lt;/code&gt; to initiate the connection to the Jenkins controller.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/inbound-agent-configuration.png&quot; alt=&quot;Inbound agent configuration&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;download-the-agent-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#download-the-agent-3&quot; /&gt;Download the agent&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The agent was started the first time by clicking the &quot;Launch&quot; button on the agent configuration page (only available with Java 8).
That downloads the &quot;slave-agent.jnlp&quot; file from the web browser.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/launch-inbound-agent-from-jenkins.png&quot; alt=&quot;Launch inbound agent from Jenkins&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;start-the-agent-with-icedtea-web-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#start-the-agent-with-icedtea-web-2&quot; /&gt;Start the agent with IcedTea-Web&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recent versions of Java 8 and all versions of Java 11 have removed the &lt;code&gt;javaws&lt;/code&gt; command.
Jenkins agents for Java 8 can still be started with the &lt;code&gt;javaws&lt;/code&gt; command, but it needs to be downloaded separately from the JVM.
Open &quot;slave-agent.jnlp&quot; from a command prompt using the &lt;code&gt;javaws&lt;/code&gt; command that is available from &lt;a href=&quot;https://adoptopenjdk.net/icedtea-web.html&quot;&gt;AdoptOpenJDK IcedTea-Web&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;nowrap&quot;&gt;C:\&amp;gt; C:\icedtea-web-1.8.3.win.bin\icedtea-web-image\bin\javaws.exe -wait slave-agent.jnlp&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Java web start (javaws.exe) prompts for permission to run the program with this dialog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/javaws-prompt-for-remoting-agent.png&quot; alt=&quot;Java Web Start prompt for remoting agent&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;install-the-agent-as-a-service-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#install-the-agent-as-a-service-3&quot; /&gt;Install the agent as a service&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The agent runs and displays a window on the desktop with a single menu entry, &quot;Install as a service&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/2020-09-09-new-jenkins-release-observations/install-agent-as-a-service.png&quot; alt=&quot;Install agent as a service&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the &quot;Install as a service&quot; menu item is clicked, the agent is installed and configured to run as a Windows service using the SYSTEM account.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#conclusion&quot; /&gt;Conclusion&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins controller installation is best done with the new 64 bit MSI package.
Previous controller installations can be upgraded to the most recent Jenkins release from within Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins inbound agent installation is more complicated now that the &lt;code&gt;javaws.exe&lt;/code&gt; program is not included in the JDK.
The &lt;a href=&quot;https://adoptopenjdk.net/icedtea-web.html&quot;&gt;AdoptOpenJDK IcedTea-Web project&lt;/a&gt; allows administrators to install and configure Jenkins inbound agents with most of the ease that was available in prior Java releases.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/10/jenkins-continuous-evolution-cdcon/</id>
<title>Learn more about Jenkins&#39; continuous evolution at CDCon</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-09-10T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/09/10/jenkins-continuous-evolution-cdcon/" />
<author>
<name>cdfoundation</name>
</author>
<category term="cdcon"></category>
<category term="talks"></category>
<category term="jcasc"></category>
<category term="cicd"></category>
<category term="tekton"></category>
<summary>
The Jenkins project has been around for over fifteen years and is the defacto platform for CI/CD. One of the reasons it continues to be so ubiquitous is that Jenkins constantly evolves and offers flexibility to integrate other tools that work well for your solution.


At CDCon, on October 7-8, there are two particular Jenkins talks that will focus on new directions that the Jenkins platform is evolving too and getting better and better for users.


Heard of JCasC and Not Sure Where to Start? Let me Help You!


Configuration as code is a best practice for your CI/CD setup as it makes...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins project has been around for over fifteen years and is the defacto platform for CI/CD. One of the reasons it continues to be so ubiquitous is that Jenkins constantly evolves and offers flexibility to integrate other tools that work well for your solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At &lt;a href=&quot;https://events.linuxfoundation.org/cdcon/&quot;&gt;CDCon&lt;/a&gt;, on October 7-8, there are two particular Jenkins talks that will focus on new directions that the Jenkins platform is evolving too and getting better and better for users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;heard-of-jcasc-and-not-sure-where-to-start-let-me-help-you&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#heard-of-jcasc-and-not-sure-where-to-start-let-me-help-you&quot; /&gt;&lt;a href=&quot;https://sched.co/dqOc&quot;&gt;Heard of JCasC and Not Sure Where to Start? Let me Help You!&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Configuration as code is a best practice for your CI/CD setup as it makes the complex process of setting up Jenkins simpler and more reproducible. Jenkins Configuration as Code (JCasc) enables Jenkins users to define the whole configuration as a simple, plain text YAML syntax. With JCasc, setting up a new Jenkins controller is easier than ever before. To get started with JCasC some initial effort is required. This talk walks you through a basic setup for easily spinning up new Jenkins instances.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;October 7 at 2:20 PM PST
Speaker: Ewelina Wilkosz, Eficode&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ewelina W is passionate about making sure that her customers&#39; software is being built, tested and released in the best possible way. And, most importantly, that software developers don’t hate the process. Ewelina has been involved in Jenkins Configuration as Code plugin development from the very beginning. This is a must-see talk where Ewelina will also share some tips and tricks. The talk will feature using Docker, Jenkins and GitHub Actions as a quick way to build… Jenkins!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;bridging-the-gap-with-tekton-client-plugin-for-jenkins&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#bridging-the-gap-with-tekton-client-plugin-for-jenkins&quot; /&gt;&lt;a href=&quot;https://sched.co/dpvN&quot;&gt;Bridging the Gap with Tekton-client-plugin for Jenkins&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Tekton provides Kubernetes-native CI/CD building blocks. It enables users to take full advantage of cloud-native features around scalability and high availability. Jenkins flexibility enables integration with Tekton. This talk showcases the new tekton-client-plugin for Jenkins that enables Jenkins to interact with Tekton pipelines on a Kubernetes cluster. Tekton and Jenkins are both CDF projects and this talk highlights the first steps towards better Tekton and Jenkins interoperability, a key goal of the CD Foundation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;October 7 at 11:40 AM PST
Speaker: Vibhav Bobade, Red Hat&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;register-for-cdcon&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#register-for-cdcon&quot; /&gt;&lt;a href=&quot;https://events.linuxfoundation.org/cdcon/&quot;&gt;Register for CDCon&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Both these talks showcase the ultimate flexibility and power of the Jenkins platform and how it continues to evolve to meet the challenges of modern-day CI/CD. Don’t miss out; &lt;a href=&quot;https://events.linuxfoundation.org/cdcon/&quot;&gt;register for CDCon&lt;/a&gt; to attend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;CDCon has pledged to donate 100% of the proceeds received from CDCon 2020 registration to charitable causes: Black Girls Code, Women Who Code and the CDF Diversity Fund. Registrants indicate which charitable fund they want their 25 USD registration fees to go to during registration. If you can’t afford the registration cost, please apply for the &lt;a href=&quot;https://events.linuxfoundation.org/cdcon/attend/scholarships/&quot;&gt;diversity scholarship&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;https://events.linuxfoundation.org/cdcon/&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/cdcon-register.png&quot; alt=&quot;Register for CDCon&quot; /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/31/github-checks-api-plugin-coding-phase-3/</id>
<title>GitHub Checks API Plugin Project - Coding Phase 3</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-08-31T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/31/github-checks-api-plugin-coding-phase-3/" />
<author>
<name>XiongKezhi</name>
</author>
<category term="github"></category>
<category term="api"></category>
<category term="plugins"></category>
<category term="developer"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
This blog post is about our phase 3 progress on GitHub Checks API Project, you can find our previous blog posts for phase 1 and phase 2.


At the end of this summer, the GSoC journey for GitHub Checks API Project comes to an end as well.
In this blog post, I&#8217;ll show you our works during the last month:




Pipeline Support


Rerun Request Support


Git SCM Support


Documentation




All the above features will be available in our planned 1.0.0 version of Checks API Plugin and GitHub Checks Plugin.


Coding Phase 3 Demo





Pipeline Support

The pipeline support allows users to directly publish checks in their pipeline script without depending...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This blog post is about our phase 3 progress on &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/github-checks/&quot;&gt;GitHub Checks API Project&lt;/a&gt;, you can find our previous blog posts for &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/09/github-checks-api-plugin-coding-phase-1&quot;&gt;phase 1&lt;/a&gt; and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/03/github-checks-api-plugin-coding-phase-2&quot;&gt;phase 2&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the end of this summer, the GSoC journey for &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/github-checks/&quot;&gt;GitHub Checks API Project&lt;/a&gt; comes to an end as well.
In this blog post, I’ll show you our works during the last month:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pipeline Support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rerun Request Support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Git SCM Support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;All the above features will be available in our planned 1.0.0 version of &lt;a href=&quot;https://plugins.jenkins.io/checks-api&quot;&gt;Checks API Plugin&lt;/a&gt; and &lt;a href=&quot;https://plugins.jenkins.io/github-checks&quot;&gt;GitHub Checks Plugin&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Coding Phase 3 Demo&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;800&quot; height=&quot;420&quot; src=&quot;https://www.youtube.com/embed/S-pEgT3lzpk?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;pipeline-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#pipeline-support&quot; /&gt;Pipeline Support&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The pipeline support allows users to directly publish checks in their pipeline script without depending on any other consumers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/08-github-checks-api-plugin-coding-phase-3/pipeline-check.png&quot; alt=&quot;Pipeline Checks&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The check in the above screenshot is published by script:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;publishChecks &lt;span style=&quot;color:#606&quot;&gt;name&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;pipeline check&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:#606&quot;&gt;title&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;pipeline &lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:#606&quot;&gt;summary&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;# A pipeline check example&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;,
        &lt;span style=&quot;color:#606&quot;&gt;text&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;## This check is published through the pipeline script&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span style=&quot;color:#606&quot;&gt;detailsURL&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;https://ci.jenkins.io&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;If you want to publish checks to GitHub, please install the &lt;a href=&quot;https://github.com/jenkinsci/github-checks-plugin&quot;&gt;GitHub implementation&lt;/a&gt; and refer to the &lt;a href=&quot;https://docs.github.com/en/rest/reference/checks&quot;&gt;GitHub API documentation&lt;/a&gt; for the requirements for each field. A default value (build link) for &lt;code&gt;detailsURL&lt;/code&gt; will be provided automatically.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This feature can be useful when many stages exist in your pipeline script and each takes a long time: you can publish a check for each stage to keep track of the build.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;rerun-request-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#rerun-request-support&quot; /&gt;Rerun Request Support&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The rerun request allows GitHub users to rerun the failed builds. When a build failed (which leads to a failed check), a &lt;code&gt;Re-run&lt;/code&gt; button will be added automatically by GitHub.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/08-github-checks-api-plugin-coding-phase-3/failed-checks.png&quot; alt=&quot;Failed Checks&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;By clicking the &lt;code&gt;Re-run&lt;/code&gt; button, Jenkins will reschedule a build for the last commit of this branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Since all checks of a commit are produced by a single build, you don’t have to rerun all failed checks, just rerun any one of the failed check will refresh all checks.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;git-scm-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#git-scm-support&quot; /&gt;Git SCM Support&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/uhafner&quot;&gt;Ullrich&lt;/a&gt;&#39;s great help, the &lt;a href=&quot;https://plugins.jenkins.io/github-checks&quot;&gt;GitHub Checks Plugin&lt;/a&gt; now supports &lt;a href=&quot;https://github.com/jenkinsci/git-plugin&quot;&gt;Git SCM&lt;/a&gt;.
This means now you can publish checks for your freestyle project or any other projects that use Git SCM.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;document&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#document&quot; /&gt;Document&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/checks-api-plugin/blob/master/docs/consumers-guide.md&quot;&gt;Consumers Guide&lt;/a&gt; and &lt;a href=&quot;https://github.com/jenkinsci/checks-api-plugin/blob/master/docs/implementation-guide.md&quot;&gt;Implementation Guide&lt;/a&gt; are now available.
As a Jenkins developer, you can now start consuming our API or even providing an implementation for other SCM platforms beside GitHub.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;acknowledgment&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#acknowledgment&quot; /&gt;Acknowledgment&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The whole &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/github-checks/&quot;&gt;GitHub Checks API project&lt;/a&gt; is started as a Google Summer of Code project. Much appreciate my mentors (&lt;a href=&quot;https://github.com/timja&quot;&gt;Tim&lt;/a&gt; and &lt;a href=&quot;https://github.com/uhafner&quot;&gt;Ullrich&lt;/a&gt;) for their great help during the whole summer. Also huge thanks to the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/gsoc/&quot;&gt;Jenkins GSoC SIG&lt;/a&gt; and the whole community for the technique support and resources.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;resources&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#resources&quot; /&gt;Resources&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/checks-api-plugin&quot;&gt;Checks API Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/github-checks-plugin&quot;&gt;GitHub Checks Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/github-checks/&quot;&gt;Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/jenkinsci/github-checks-api&quot;&gt;Gitter Channel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/31/custom-distribution-service/</id>
<title>Custom Distribution Service : Phase 3 Blogpost</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-08-31T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/31/custom-distribution-service/" />
<author>
<name>sladyn98</name>
</author>
<category term="service"></category>
<category term="distribution"></category>
<category term="cloud-native"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<category term="packaging"></category>
<category term="platform-sig"></category>
<summary>
Hello everyone,


This is the final blog post for the Custom Distribution Service project during the Google Summer of Code timeline.
I have mixed feelings since we are almost near the finish line for one of the most amazing open source programs out there.
However, it is time to wrap things up for this project and achieve a state where the project can be built upon and extended further.
This phase has been super busy with respect to the bug fixes, testing and getting the project hosted, so let us get straight into the phase 3 updates.


Fixes and Code quality assurance


Set Jenkinsfile agent to...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hello everyone,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is the final blog post for the Custom Distribution Service project during the Google Summer of Code timeline.
I have mixed feelings since we are almost near the finish line for one of the most amazing open source programs out there.
However, it is time to wrap things up for this project and achieve a state where the project can be built upon and extended further.
This phase has been super busy with respect to the bug fixes, testing and getting the project hosted, so let us get straight into the phase 3 updates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes-and-code-quality-assurance&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes-and-code-quality-assurance&quot; /&gt;Fixes and Code quality assurance&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;set-jenkinsfile-agent-to-linux&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#set-jenkinsfile-agent-to-linux&quot; /&gt;Set Jenkinsfile agent to linux&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We realised that the build was failing on windows and that there was not really a use-case
for running it on windows for right now. Maybe it could be on a future roadmap. Therefore, we
decided to shift the testing to only linux agents with respect to running the tests on the jenkins
server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/116&quot;&gt;#116&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;backend-port-error-message&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#backend-port-error-message&quot; /&gt;Backend port error message&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Spring boot has a default message on the &lt;code&gt;port:8080&lt;/code&gt; and therefore we wanted to change
it to a custom message on the backend. So the major takeaway here is that we needed to
implement the &lt;code&gt;Error Controller&lt;/code&gt; interface and include a custom message in it.
This was technical debt from the last phase and was completed and merged during this phase.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/92&quot;&gt;#92&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;pmd-analysis&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#pmd-analysis&quot; /&gt;PMD Analysis&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In order to enhance the quality of the code, the PMD source code analyser was applied to the project.
It helped me catch tons of errors. When the initial PMD check was run and we found approximately 162 PMD errors. We realised some of them were not relevant and some of them could be fixed later.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/102&quot;&gt;#102&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;findbugs-analysis&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#findbugs-analysis&quot; /&gt;Findbugs Analysis&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another tool to improve code quality that we included in this phase was findbugs.
It did catch around 5-10 bugs in my code which I immediately resolved. Most of them were
around the &lt;code&gt;Closeable HTTP Request&lt;/code&gt; and an easy fix was the &lt;code&gt;try with resources&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/118&quot;&gt;#118&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jacoco-code-coverage&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jacoco-code-coverage&quot; /&gt;Jacoco Code Coverage&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We needed to make sure most of the code we write had proper coverage for all branches and
lines. Therefore we decided to include a JaCoco Code Coverage reporter that helped us find the
uncovered lines and areas we need to improve coverage on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/103&quot;&gt;#103&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;remove-jcasc-generation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#remove-jcasc-generation&quot; /&gt;Remove JCasC generation&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While developing the service we quickly realised that the generation of the war package broke if we
included a &lt;code&gt;configuration as code&lt;/code&gt; section but did not provide a path to the corresponding required &lt;code&gt;yml&lt;/code&gt;
file. Therefore we took a decision to remove the &lt;code&gt;casc&lt;/code&gt; section all together. Maybe it will comeback in
a future patch&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request link: &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/127&quot;&gt;#127&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Issue link: &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/issues/65&quot;&gt;#65&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;minor-fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#minor-fixes&quot; /&gt;Minor Fixes&lt;/h4&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Logging Fix: &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/99&quot;&gt;#99&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docs Fix : link: &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/120&quot;&gt;#120&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update Center Dump Fix : link: &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/125&quot;&gt;#125&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Class Path Fix: link: &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/126&quot;&gt;#126&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Release Drafter Addition: link: &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/136&quot;&gt;#136&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;front-end&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#front-end&quot; /&gt;Front end&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;community-config-navigation-link&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#community-config-navigation-link&quot; /&gt;Community Config Navigation link&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There was no community configuration link present for navigation which was added here.
 Now it is easier to navigate to the community page from the home page itself.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/100&quot;&gt;#100&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;docker-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#docker-updates&quot; /&gt;Docker updates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;build-everything-with-docker&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#build-everything-with-docker&quot; /&gt;Build everything with Docker&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This was one of the major changes this phase with respect to making the service very easy to spin up locally, this change will greatly help community adoption since it eliminates the tools one needs to install locally. Initially the process was to run maven locally, generate all of the files and then copy all of its contents into the container. However, with this change we are going to generate all of the files inside the docker container itself. Allowing the user to just run a couple of commands to get the service up and running.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So some of the major changes we did with respect to the dockerfile was:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;a) Copy all of the configuration files and &lt;code&gt;pom.xml&lt;/code&gt; into the container.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;b) Run the command &lt;code&gt;mvn clean package&lt;/code&gt; inside the container which generates the jar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;c) Run the jar inside the container.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/104&quot;&gt;#104&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;hosting-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#hosting-updates&quot; /&gt;Hosting updates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This process was supposed to be a future roadmap, however the infra team approved and was super helpful
in making this process as smooth as possible. Thanks to Gavin, Tim and Oblak for making this possible.
Here is the google group &lt;a href=&quot;https://groups.google.com/g/jenkins-infra/c/v3UJfiFte8w&quot;&gt;dicussion&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The project has now been hosted &lt;a href=&quot;https://customize.jenkins.io/&quot;&gt;here&lt;/a&gt; as a preview. It still needs
some fixes to be fully functional.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Infra Docker PR &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/131&quot;&gt;#131&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Infra Project Addition PR link: &lt;a href=&quot;https://github.com/jenkins-infra/charts/pull/393&quot;&gt;#393&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;testing-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#testing-updates&quot; /&gt;Testing Updates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;unit-test-the-services&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#unit-test-the-services&quot; /&gt;Unit test the services&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With respect to community hosting and adoption, testing of the service one of the most important and major milestones for this phase was to test the majority of the code and we have completed the testing with flying colors. All of the services have been completely unit tested, which is a major accomplishment.
For the testing of the service we decided to go with wiremock which can be used to mock external services. Kezhi’s &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/105#issuecomment-668087069&quot;&gt;comment&lt;/a&gt; helped us to understand what we needed to do since he had done something quite similar in his Github Checks API project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So we basically wiremocked the update-center url and made sure we were getting
the accurate response with appropriate control flow logic tested.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code&gt;wireMockRule.stubFor(get(urlPathMatching(&quot;/getUpdateCenter&quot;))
                .willReturn(aResponse()
                        .withStatus(200)
                        .withHeader(&quot;Content-Type&quot;, &quot;application/json&quot;)
                        .withBody(updateCenterBody)));&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/105&quot;&gt;#105&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;add-update-center-controller-tests&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#add-update-center-controller-tests&quot; /&gt;Add Update Center controller tests&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another major testing change involved testing the controllers. For this we decided to use the &lt;code&gt;wiremock&lt;/code&gt; library in java to mock the server response when the controllers were invoked.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example: If I have a controller that serves in an api called &lt;code&gt;/api/plugin/getPluginList&lt;/code&gt;
wiremock can be used to stub out its response when the system is under test. So we use something like this to test it out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code&gt; when(updateService.downloadUpdateCenterJSON()).thenReturn(util.convertPayloadToJSON(dummyUpdateBody))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the particular controller is called the underlying service is mocked and it returns a response according to the one provided by us. To find more details the PR is here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/106&quot;&gt;#106&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;add-packager-controller-tests&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#add-packager-controller-tests&quot; /&gt;Add Packager Controller Tests&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Along with the update center controller tests another controller that needed to be tested was the
packager controller. Also we needed to make sure that all the branches for the controllers were properly tested. Additional details can be found in the PR below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/133&quot;&gt;#133&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;docker-compose-tests&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#docker-compose-tests&quot; /&gt;Docker Compose Tests&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One problem that we faced the entire phase was the docker containers. We regularly found out that due to
some changes in the codebase the docker container build sometimes broke, or even sometimes the inner api’s seemed to malfunction. In order to counteract that we decided to come up with some tests locally.
So what I did was basically introduce a set of bash scripts that would do the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;a) Build the container using the &lt;code&gt;docker-compose&lt;/code&gt; command.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;b) Run the container.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;c) Test the api’s using the exposed port.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;d) Teardown the running containers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/131&quot;&gt;#131&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;user-documentation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#user-documentation&quot; /&gt;User Documentation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We also included a user docs guide so that it makes it super easy to get started with the service.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/145&quot;&gt;#145&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future-roadmap&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#future-roadmap&quot; /&gt;Future Roadmap&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This has been a super exciting project to work on and I can definitely see this project being built
upon and extended in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I would like to talk about some of the features that are left to come in and can be taken up in
a future roadmap discussion&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;a) &lt;strong&gt;JCasC Support&lt;/strong&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Description: Support the generation of a Jenkins Configuration as Code file asking the user interactively for the plugins they select what would be the configuration they would want eg: If the user selects the slack plugin we need to ask him questions like &lt;code&gt;what is the slack channel? what is the token? etc&lt;/code&gt;, and on the basis of this generate a &lt;code&gt;casc&lt;/code&gt; file. This feature was initially planned to go into the service but we realised this is a project in its own capacity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;b) &lt;strong&gt;Auto Pull Request Creation&lt;/strong&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Description: Allow users to create a configuration file and immediately open a pull request on github
without leaving the user interface. This was originally planned using a github bot and we started the work on it. But we were in doubt if the service would be hosted or not and therefore put the development on hold.
You can find the pull requests here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Controller &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/72&quot;&gt;#72&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pull Request Creation Functions &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/66&quot;&gt;#66&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;c) &lt;strong&gt;Synergy with Image Controller&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Description: This feature requires some planning, some of the questions we can ask are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;a) Can we generate the images (i.e Image Controller).
b) Can we have the service as a multipurpose generator ?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;statistics&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#statistics&quot; /&gt;Statistics&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This phase has been the busiest of all phases and it has involved a lot of work, more than I had
initially expected in the phase. Although lines
of code added is not an indication of work done, however 800 lines of Code added is a real personal milestone for me.&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width: 25%;&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 83.3333%;&quot;&gt;
&lt;col style=&quot;width: 16.6667%;&quot;&gt;
&lt;/col&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Pull Requests Opened&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;26&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Lines of Code Added&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;1096&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Lines of Docs Added&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;200&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/col&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;other-links&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#other-links&quot; /&gt;Other links&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/jenkinsci/jenkins-custom-distribution-service&quot;&gt;Gitter Channel Link&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://docs.google.com/document/d/1C7VQJ92Yhr0KRDcNVHYxn4ri7OL9IGZmgxY6UFON6-g/edit?usp=sharing&quot;&gt;GSoC Proposal&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://docs.google.com/document/d/1-ujWVJ2a5VYkUF6UA7m4bEpSDxmb3mJZhCbmoKO716U/edit?usp=sharing&quot;&gt;Design Document&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://docs.google.com/document/d/1DSCH-3wh6uV9Rm_j8PcBzq2lvQPhZ31AIwmWkEaLxvc/edit?usp=sharing&quot;&gt;Daily Notes&lt;/a&gt;&lt;br /&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/colgroup&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/29/git-performance-improvement-phase3/</id>
<title>Git Plugin Performance Improvement: Final Phase and Release</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-08-29T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/29/git-performance-improvement-phase3/" />
<author>
<name>rishabhbudhouliya</name>
</author>
<category term="plugins"></category>
<category term="git"></category>
<category term="platform-sig"></category>
<category term="developer"></category>
<category term="performance"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
Since the beginning of the project, the core value which drove its progress was "To enhance the user experience for running Jenkins jobs by reducing the overall execution time".


To achieve this goal, we laid out a path:




Compare the two existing git implementations i.e CliGitAPIImpl and JGitAPIImpl using performance benchmarking


Use the results to create a feature which would improve the overall performance of git plugin


Also, fix existing user reported performance issues




Let&#8217;s take a journey to understand how we&#8217;ve built the new features. If you&#8217;d like to skip the journey part, you can directly go to the [major performance improvements] section and...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since the beginning of the project, the core value which drove its progress was &quot;To enhance the user experience for running Jenkins jobs by reducing the overall execution time&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To achieve this goal, we laid out a path:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Compare the two existing git implementations i.e CliGitAPIImpl and JGitAPIImpl using performance benchmarking&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the results to create a feature which would improve the overall performance of git plugin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also, fix existing user reported performance issues&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let’s take a journey to understand how we’ve built the new features. If you’d like to skip the journey part, you can directly go to the &lt;a href=&quot;#major performance improvements&quot;&gt;[major performance improvements]&lt;/a&gt; section and the &lt;a href=&quot;#minor performance section&quot;&gt;[minor performance section]&lt;/a&gt; to see what we’ve done!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;journey-to-release&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#journey-to-release&quot; /&gt;Journey to release&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The project started with deciding to choose a git operation and then trying to compare the performance of that operation by using &lt;code&gt;command line git&lt;/code&gt; and then with &lt;code&gt;JGit&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;stage-1-benchmark-results-with-git-fetch&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#stage-1-benchmark-results-with-git-fetch&quot; /&gt;Stage 1: Benchmark results with git fetch&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-git-plugin-performance-improvement/git-fetch-results.png&quot; alt=&quot;git-fetch-results&quot; width=&quot;938&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The performance of git fetch (average execution time/op) is strongly correlated to the size of a repository&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There exists an inflection point on the scale of repository size after which the nature of &lt;code&gt;JGit&lt;/code&gt; performance changes (it starts to degrade)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After running multiple benchmarks, it is safe to say that for a large sized repository &lt;code&gt;command line git&lt;/code&gt; would be a better choice of implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can use this insight to implement a feature which avoids &lt;code&gt;JGit&lt;/code&gt; with large repositories.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;stage-2-comparing-platforms&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#stage-2-comparing-platforms&quot; /&gt;Stage 2: Comparing platforms&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The project was also concerned that there might be important differences between operating systems.
For example, what if command line Git for Windows performed very differently than command line Git on Linux or FreeBSD?
Benchmarks were run to compare fetch performance on several platforms.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Running git fetch operation for a 400 MiB sized repository on:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AMD64 Microsoft Winders&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AMD64 FreeBSD&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IBM PowerPC 64 LE Ubuntu 18&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IBM System 390 Ubuntu 18&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The result of running this experiment is given below:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-git-plugin-performance-improvement/git-multiple-platforms.png&quot; alt=&quot;Performance on multiple platforms&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot; /&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The difference in performance between &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;JGit&lt;/code&gt; remains constant across all platforms.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Benchmark results on one platform are applicable to all platforms.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;stage-3-performance-of-git-fetch-and-repository-structure&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#stage-3-performance-of-git-fetch-and-repository-structure&quot; /&gt;Stage 3: Performance of git fetch and repository structure&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-git-plugin-performance-improvement/git-repo-diagram.png&quot; alt=&quot;git repo diagram&quot; width=&quot;420&quot; title=&quot;Relationship of repository structure with performance&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The area of the circle enclosing each parameter signifies the strength of the positive correlation between the performance of a git fetch operation and that parameter. From the diagram:&lt;br /&gt;
&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Size of the aggregated objects is the &lt;strong&gt;dominant&lt;/strong&gt; player in determining the execution time for a git fetch&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Number of branches and Number of tags play a similar role but are strongly overshadowed by size of repository&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Number of commits has a negligible effect on the performance of running git fetch&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;After running these experiments from Stage-1 to Stage-3, we developed a solution called the &lt;code&gt;GitToolChooser&lt;/code&gt; which is explained in the next stage&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;stage-4-faster-checkout-with-git-tool-chooser&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#stage-4-faster-checkout-with-git-tool-chooser&quot; /&gt;Stage 4: Faster checkout with Git tool chooser&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This feature takes the responsibility of choosing the optimal implementation from the &lt;strong&gt;user&lt;/strong&gt; and hands it to the &lt;strong&gt;plugin&lt;/strong&gt;. It takes the decision of recommending an implementation on the basis of the size of the repository. &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/29/git-performance-improvement-phase2/&quot;&gt;Here is how it works&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-git-plugin-performance-improvement/git-perf-improv.png&quot; alt=&quot;git perf improv&quot; width=&quot;938&quot; title=&quot;Faster checkouts with GitToolChooser&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The image above depicts the performance enhancements we have performed over the course of the GSoC project. These improvements have enabled the checkout step to be finished &lt;strong&gt;within half of what it used to take&lt;/strong&gt; earlier in some cases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let’s talk about performance improvements in two parts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;major-performance-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#major-performance-improvements&quot; /&gt;Major performance improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-git-plugin-performance-improvement/git-major-perf.png&quot; alt=&quot;Major performance enhancements&quot; width=&quot;400&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Building Tensorflow (~800 MiB) using a Jenkins pipeline, there is over 50% reduction in overall time spent in completing a job!
The result is consistent multiple platforms.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The reason for such a decrease is the fact that &lt;code&gt;JGit&lt;/code&gt; degrades in performance when we are talking about large sized repositories. Since the GitToolChooser is aware of this fact, it chooses to recommend &lt;code&gt;command line git&lt;/code&gt; instead which saves the user some time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;minor-performance-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#minor-performance-improvements&quot; /&gt;Minor performance improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note: Enable JGit before using the new performance features to let GitToolChooser work with more options&lt;/strong&gt; → &lt;a href=&quot;https://plugins.jenkins.io/git-client/#enabling-jgit&quot;&gt;Here’s how&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-git-plugin-performance-improvement/git-minor-perf.png&quot; alt=&quot;git minor perf&quot; width=&quot;400&quot; title=&quot;Minor performance enhancements&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Building the git plugin (~ 20 MiB) using a Jenkins pipeline, there is a drop of a &lt;strong&gt;second&lt;/strong&gt; across all platforms when performance enhancement is enabled. Also, eliminating a redundant fetch reduces unnecessary load on git servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The reason for this change is the fact that &lt;code&gt;JGit&lt;/code&gt; performs better than &lt;code&gt;command line git&lt;/code&gt; for small sized repositories (&amp;lt;50MiB) as an already warmed up JVM favors the native Java implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;releases&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#releases&quot; /&gt;Releases&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/git-plugin/releases/tag/git-4.4.0&quot;&gt;Git Plugin 4.4.0&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add GitToolChooser&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove redundant fetch&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/git-client-plugin/releases/tag/git-client-3.4.0&quot;&gt;Git Client Plugin 3.4.0&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add support to communicate compatibility of JGit with certain additional SCM behaviors&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-road-ahead&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-road-ahead&quot; /&gt;The road ahead&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Support from other branch source plugins&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Plugins like the GitHub Branch Source Plugin or GitLab Branch Source Plugin need to extend an extension point provided by the git plugin to facilitate the exchange of information related to size of a remote repository hosted by the particular git provider&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-63519&quot;&gt;JENKINS-63519&lt;/a&gt;: GitToolChooser predicts the wrong implementation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Addition of this feature to GitSCMSource&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Detection of lock related delays accessing the cache directories present on the controller&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This issue was reported by the plugin maintainer Mark Waite, there is a need to reproduce the issue first and then find a possible solution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;reaching-out&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#reaching-out&quot; /&gt;Reaching out&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to reach out to us for any questions or feedback on the project’s
&lt;a href=&quot;https://gitter.im/jenkinsci/git-plugin&quot;&gt;Gitter Channel&lt;/a&gt; or the
&lt;a href=&quot;mailto:jenkinsci-dev@googlegroups.com&quot;&gt;Jenkins Developer Mailing list&lt;/a&gt;.
Report an issue at Jenkins &lt;a href=&quot;https://issues.jenkins.io/&quot;&gt;Jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;useful-links&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#useful-links&quot; /&gt;Useful Links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Phase 1 Blog: &lt;a href=&quot;https://www.jenkins.io/blog/2020/07/09/git-performance-improvement-phase1/&quot; class=&quot;bare&quot;&gt;https://www.jenkins.io/blog/2020/07/09/git-performance-improvement-phase1/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Phase 2 Blog: &lt;a href=&quot;https://www.jenkins.io/blog/2020/07/29/git-performance-improvement-phase2/&quot; class=&quot;bare&quot;&gt;https://www.jenkins.io/blog/2020/07/29/git-performance-improvement-phase2/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Project Page: &lt;a href=&quot;https://www.jenkins.io/projects/gsoc/2020/projects/git-plugin-performance/&quot; class=&quot;bare&quot;&gt;https://www.jenkins.io/projects/gsoc/2020/projects/git-plugin-performance/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;demonstration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#demonstration&quot; /&gt;Demonstration&lt;/h3&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;800&quot; height=&quot;420&quot; src=&quot;https://www.youtube.com/embed/sEqK4dAFg4s?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/27/winsw-yaml-support/</id>
<title>Jenkins Windows Services: YAML Configuration Support - GSoC Project Results</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-08-27T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/27/winsw-yaml-support/" />
<author>
<name>buddhikac96</name>
</author>
<category term="winsw"></category>
<category term="windows"></category>
<category term="jenkins"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<category term="platform-sig"></category>
<summary>
Hello, world! GSoC 2020 Phase 3 has ended now and it was a great period for thw Jenkins Windows Services - YAML Configuration Support project.
In this blog post, I will announce the updates during the GSoC 2020 - Phase 2 and Phase 3. If you are not already aware of this project,
I would recommend reading this blog post which was published after GSoC 2020 - Phase 1.


Project Scope




Windows Service Wrapper - YAML configuration support


YAML schema validation


New CLI


XML Schema validation




YAML Configuration Support

Under WinSW - YAML configurations support, these tasks will be done.


YAML to Object mapping

At the moment YAML object mapping is...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hello, world! GSoC 2020 Phase 3 has ended now and it was a great period for thw &lt;em&gt;Jenkins Windows Services - YAML Configuration Support&lt;/em&gt; project.
In this blog post, I will announce the updates during the GSoC 2020 - Phase 2 and Phase 3. If you are not already aware of this project,
I would recommend reading &lt;a href=&quot;https://www.jenkins.io/blog/2020/07/08/winsw-yaml-support/&quot;&gt;this blog post&lt;/a&gt; which was published after GSoC 2020 - Phase 1.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;project-scope&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#project-scope&quot; /&gt;Project Scope&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Windows Service Wrapper - YAML configuration support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;YAML schema validation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New CLI&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;XML Schema validation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;yaml-configuration-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#yaml-configuration-support&quot; /&gt;YAML Configuration Support&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Under WinSW - YAML configurations support, these tasks will be done.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;yaml-to-object-mapping&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#yaml-to-object-mapping&quot; /&gt;YAML to Object mapping&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the moment YAML object mapping is finished and merged.
You can find all the implementations in this &lt;a href=&quot;https://github.com/winsw/winsw/pull/543&quot;&gt;Pull Request&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;extend-winsw-to-support-both-xml-and-yaml&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#extend-winsw-to-support-both-xml-and-yaml&quot; /&gt;Extend WinSW to support both XML and YAML&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This task is already done and merged. Find the implementation in this &lt;a href=&quot;https://github.com/winsw/winsw/pull/543&quot;&gt;Pull Request&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;yaml-configuration-support-for-extensions&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#yaml-configuration-support-for-extensions&quot; /&gt;YAML Configuration support for Extensions&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the moment there are 2 internal plugins in WinSW. RunAwayProcessKiller and SharedDirectoryMapper.
We allow users to provide configurations for those plugins in the same XML and YAML configuration file which is used to configure WinSW. This task is merged as well.
&lt;a href=&quot;https://github.com/winsw/winsw/pull/638&quot;&gt;Pull Request&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;yaml-schema-validation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#yaml-schema-validation&quot; /&gt;YAML schema validation&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Users can validate YAML configuration file against &lt;a href=&quot;https://github.com/winsw/winsw/blob/master/doc/yamlConfigurationSchema.json&quot;&gt;JSON schema file.&lt;/a&gt;
Users can use &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml&quot;&gt;YAML utility tool from Visual Studio market place&lt;/a&gt; to validate YAML config file against JSON schema.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;key-updates-in-phase-2-and-phase-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#key-updates-in-phase-2-and-phase-3&quot; /&gt;Key updates in Phase 2 and Phase 3&lt;/h4&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;YAML Configuration structure&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Environment variables&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Now users can provide environment variables as a sequence of dictionaries that contains name and value for environment variables.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TimeStamp values&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Users can specify timestamp values in the same manner used in XML (e.g. &lt;code&gt;10 ms&lt;/code&gt;, &lt;code&gt;5 sec&lt;/code&gt;, &lt;code&gt;3 min&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;YAML configuration document was published. &lt;a href=&quot;https://github.com/winsw/winsw/blob/master/doc/YamlConfigFile.md&quot;&gt;YAML Configuration Specification&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extend the WinSW to support both XML and YAML&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/winsw/winsw/blob/master/doc/extensions/extensions.md&quot;&gt;YAML support for extensions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/winsw/winsw/blob/master/doc/yamlConfigurationSchema.json&quot;&gt;YAML schema validation against JSON schema&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;sample-yaml-configuration-file&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sample-yaml-configuration-file&quot; /&gt;Sample YAML Configuration File&lt;/h4&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#606&quot;&gt;id&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;jenkins&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;name&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;Jenkins&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;description&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;This service runs Jenkins automation server.&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;env&lt;/span&gt;:
    - &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;name: JENKINS_HOME&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&quot;color:#606&quot;&gt;value&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;&#39;%LocalAppData%\Jenkins.jenkins&#39;&lt;/span&gt;&lt;/span&gt;
    - &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;name: LM_LICENSE_FILE&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&quot;color:#606&quot;&gt;value&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;host1;host2&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;executable&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;java&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;arguments&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;gt;-&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;
    -Xrs -Xmx256m -Dhudson.lifecycle=hudson.lifecycle.WindowsServiceLifecycle
    -jar &quot;E:\Winsw Test\yml6\jenkins.war&quot; --httpPort=8081&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;log&lt;/span&gt;:
    &lt;span style=&quot;color:#606&quot;&gt;mode&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;rotate&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;onFailure&lt;/span&gt;:
    - &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;action: restart&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&quot;color:#606&quot;&gt;delay&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;10 sec&lt;/span&gt;&lt;/span&gt;
    - &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;action: reboot&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&quot;color:#606&quot;&gt;delay&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;1 hour&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;extensions&lt;/span&gt;:
    - &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;id: killOnStartup&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&quot;color:#606&quot;&gt;enabled&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;yes&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&quot;color:#606&quot;&gt;classname&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;WinSW.Plugins.RunawayProcessKiller.RunawayProcessKillerExtension&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&quot;color:#606&quot;&gt;settings&lt;/span&gt;:
            &lt;span style=&quot;color:#606&quot;&gt;pidfile&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;&#39;%BASE%\pid.txt&#39;&lt;/span&gt;&lt;/span&gt;
            &lt;span style=&quot;color:#606&quot;&gt;stopTimeOut&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;5000&lt;/span&gt;&lt;/span&gt;
            &lt;span style=&quot;color:#606&quot;&gt;StoprootFirst&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;false&lt;/span&gt;&lt;/span&gt;
    - &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;id: mapNetworDirs&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&quot;color:#606&quot;&gt;enabled&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;yes&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&quot;color:#606&quot;&gt;classname&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;WinSW.Plugins.SharedDirectoryMapper.SharedDirectoryMapper&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&quot;color:#606&quot;&gt;settings&lt;/span&gt;:
            &lt;span style=&quot;color:#606&quot;&gt;mapping&lt;/span&gt;:
                - &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;enabled: false&lt;/span&gt;&lt;/span&gt;
                  &lt;span style=&quot;color:#606&quot;&gt;label&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;N&lt;/span&gt;&lt;/span&gt;
                  &lt;span style=&quot;color:#606&quot;&gt;uncpath&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;\\UNC&lt;/span&gt;&lt;/span&gt;
                - &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;enabled: false&lt;/span&gt;&lt;/span&gt;
                  &lt;span style=&quot;color:#606&quot;&gt;label&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;M&lt;/span&gt;&lt;/span&gt;
                  &lt;span style=&quot;color:#606&quot;&gt;uncpath&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;\\UNC2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;new-cli&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-cli&quot; /&gt;New CLI&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let me explain in brief, why we need a new CLI.
In WinSW, we will keep both XML and YAML configuration support.
But according to the current implementation, the user can’t specify the configurations file explicitly.
Also, we want to let the user skip the schema validation as well.
So We decided to move into new CLI which is more structured with commands and options.
Please read my &lt;a href=&quot;https://www.jenkins.io/blog/2020/07/08/winsw-yaml-support/&quot;&gt;previous blog post&lt;/a&gt; to learn more about commands and options in the new CLI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;key-updates-in-phase-2-and-phase-3-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#key-updates-in-phase-2-and-phase-3-2&quot; /&gt;Key updates in Phase 2 and Phase 3&lt;/h4&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Remove the /redirect command&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testwait&lt;/strong&gt; command was removed and add the &lt;strong&gt;wait&lt;/strong&gt; option to the &lt;strong&gt;test&lt;/strong&gt; command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;stopwait&lt;/strong&gt; command was removed and add the &lt;strong&gt;wait&lt;/strong&gt; option to the &lt;strong&gt;stop&lt;/strong&gt; command.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-to-try&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-try&quot; /&gt;How to try&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;User can configure the Windows Service Wrapper by both XML and YAML configuration files using the following steps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Create the configuration file (XML or YAML).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save it with the same name as the Windows Service Wrapper executable name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Place the configuration file inside the directory(or in a parent directory), where the Windows Service Wrapper executable is located.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If there are both XML and YAML configuraiton files, Windows Service Wrapper will be configured by the XML configuration file.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;gsoc-2020-phase-2-demo&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#gsoc-2020-phase-2-demo&quot; /&gt;GSoC 2020 Phase 2 Demo&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube.com/embed/9qyo1f2rKQw?rel=0&amp;amp;start=2736&amp;amp;end=4000&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;gsoc-2020-phase-3-demo&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#gsoc-2020-phase-3-demo&quot; /&gt;GSoC 2020 Phase 3 Demo&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube.com/embed/G05unV7aDrg?rel=0&amp;amp;start=2736&amp;amp;end=4000&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future-works&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#future-works&quot; /&gt;Future Works&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;XML Schema validation&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;XML configuration file will be validated with the XSD file.
I have started working on this feature and you can find the implementation in this &lt;a href=&quot;https://github.com/winsw/winsw/pull/460&quot;&gt;Pull Request&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;YAML Configuration validate on startup&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-to-contribute&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-contribute&quot; /&gt;How to contribute&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can find the GitHub repository in this &lt;a href=&quot;https://github.com/winsw/winsw&quot;&gt;link&lt;/a&gt;.
Issues and Pull requests are always welcome. Also, you can communicate with us in the &lt;a href=&quot;https://gitter.im/winsw/winsw&quot;&gt;WinSW Gitter&lt;/a&gt; channel,
which is a great way to get in touch and there are project sync up meetings every Tuesday at 13:30 UTC on the Gitter channel.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;some-useful-links&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#some-useful-links&quot; /&gt;Some useful links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1hMJwnI8nW33a-wb7JS3rmjelTPFCt4wEb0zVqGi5DiA/edit?usp=sharing&quot;&gt;Presentation Slides&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/winsw-yaml-configs&quot;&gt;Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/winsw/winsw&quot;&gt;Project Repository&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/winsw/winsw/releases&quot;&gt;Feature preview&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/winsw/winsw&quot;&gt;Gitter Channel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/aaubry/YamlDotNet&quot;&gt;YamlDotNet library&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/commandlineparser/commandline&quot;&gt;Command Line Parser library&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/27/machine-learning-plugin-coding-phase3/</id>
<title>Machine Learning Plugin project - Coding Phase 3 blog post</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-08-27T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/27/machine-learning-plugin-coding-phase3/" />
<author>
<name>loghijiaha</name>
</author>
<category term="machinelearning"></category>
<category term="datascience"></category>
<category term="jupyter"></category>
<category term="plugins"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
Good to see you all again !


This is my final blog post about coding phase 3 in Jenkins Machine Learning Plugin for GSoC 2020.
Being at the end of GSoC 2020, we had to finish all the pending issues and testing before a stable release in the main repository. Throughout this program, there were lots of learning and hard work will make this plugin valuable to the Data Science and Jenkins community.


Summary


With combining all of the work in phase 1, 2 and 3, initial version of Machine learning plugin( 1.0 ) was successfully released in Jenkins plugin repository.
An interesting feature which...
</summary>
<content type="html">
&lt;div class=&quot;imageblock text-center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/gsoc/jenkins-gsoc-logo_small.png&quot; alt=&quot;jenkins gsoc logo small&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Good to see you all again !&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is my final blog post about coding phase 3 in Jenkins &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/machine-learning/&quot;&gt;Machine Learning Plugin&lt;/a&gt; for GSoC 2020.
Being at the end of GSoC 2020, we had to finish all the pending issues and testing before a stable release in the main repository. Throughout this program, there were lots of learning and hard work will make this plugin valuable to the Data Science and Jenkins community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;summary&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#summary&quot; /&gt;Summary&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With combining all of the work in phase 1, 2 and 3, initial version of Machine learning plugin( 1.0 ) was successfully released in Jenkins plugin repository.
An interesting feature which allows users to connect to their existing programming language kernels more than connecting to only IPython kernel was introduced in this phase. It can be selected in multiple steps with different kernel.
Images and graphs produced by Jupyter notebooks will be saved in user preferred folder in the workspace that can be used for reporting/analytic purposes later. Hoping this blog summarizes the Machine Learning’s features and future contributions. Thank you for your interest and support !!!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;main-features-of-machine-learning-plugin&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#main-features-of-machine-learning-plugin&quot; /&gt;Main features of Machine Learning plugin&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Execute Jupyter notebooks directly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run different language scripts using multiple build steps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Convert Jupyter Notebooks to Python&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure Jupyter kernels( IPython, IRKernel, IJulia etc) properties&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support to execute Notebooks/scripts on Agent&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract graph/map/images from the code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each build step can be associated with a machine learning task&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for Windows and Linux&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Future improvements&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Improving performance of the plugin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try to implement &lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-63377&quot;&gt;JENKINS-63377&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support parameterized definitions in Notebooks &lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-63478&quot;&gt;JENKINS-63478&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Increasing testing code coverage&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;multiple-language-kernel-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#multiple-language-kernel-support&quot; /&gt;Multiple language kernel support&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If there are existing kernels in the system, user will be able to configure in the global configurations in order to apply in the builder/step configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some popular interactive kernels&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IPython&lt;/code&gt; for &lt;code&gt;python&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IRKernel&lt;/code&gt; for &lt;code&gt;R&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IJulia&lt;/code&gt; for &lt;code&gt;Julia&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IJavascript&lt;/code&gt; for &lt;code&gt;javascript&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More kernels and installation guides are found here. &lt;a href=&quot;https://github.com/jupyter/jupyter/wiki/Jupyter-kernels&quot; class=&quot;bare&quot;&gt;https://github.com/jupyter/jupyter/wiki/Jupyter-kernels&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;dump-images-and-graphs&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#dump-images-and-graphs&quot; /&gt;Dump images and graphs&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Text output will be displayed in the console log. At the same time images/graphs/heat maps and HTMLs will be saved in the workspace. An action is shown in the left panel to display images in realtime. Due to the Content Security Policy of jenkins, some HTMLs which contain harmful javascript may not render in jenkins UI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/gsoc/2020/machine_learning_plugin/action_image_view.png&quot; alt=&quot;action image view&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;fixed-bugs&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixed-bugs&quot; /&gt;Fixed bugs&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There were more bugs identified and fixed with many interactive testings. Setting the working directory of kernels was a big issue while getting datasets/files by script. Zeppelin process launcher was bypassed to fix this &lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-63465&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;patch-version-released&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#patch-version-released&quot; /&gt;Patch version released&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A major bug which was created while setting the process working directory had patched in the v1.0.1. The latest release is more stable now.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;acknowledgement&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#acknowledgement&quot; /&gt;Acknowledgement&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Machine Learning plugin had been developed under GSoC 2020 program. A huge thanks to &lt;a href=&quot;https://github.com/kinow&quot;&gt;Bruno P. Kinoshita&lt;/a&gt;, &lt;a href=&quot;https://github.com/markyjackson-taulia&quot;&gt;Marky Jackson&lt;/a&gt;, &lt;a href=&quot;https://github.com/shivaylamba&quot;&gt;Shivay Lamba&lt;/a&gt;, &lt;a href=&quot;https://github.com/imoutsatsos&quot;&gt;Ioannis Moutsatsos&lt;/a&gt; and Org admins for this wonderful experience.
I would be grateful for contributing this plugin continuously and more in Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;resources&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#resources&quot; /&gt;Resources&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/03/machine-learning-plugin-community-bonding/&quot;&gt;Community Bonding blog post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/30/machine-learning-plugin-coding-phase1/&quot;&gt;Phase 1 blog post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/2020-07-27-machine-learning-plugin-coding-phase2.adoc/&quot;&gt;Phase 2 blog post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/machine-learning-plugin.git&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/machine-learning/&quot;&gt;Project page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://plugins.jenkins.io/machine-learning/&quot;&gt;Plugin page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/10FjktNmWpdjgbGg3tEViadV_JNevn9W0sMOu-bF8m-o/edit?usp=sharing&quot;&gt;Design document&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/25/external-fingerprint-storage-phase-3/</id>
<title>External Fingerprint Storage Phase-3 Update: Introducing the PostgreSQL Fingerprint Storage Plugin</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-08-25T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/25/external-fingerprint-storage-phase-3/" />
<author>
<name>stellargo</name>
</author>
<category term="plugins"></category>
<category term="fingerprint"></category>
<category term="cloud-native"></category>
<category term="external-storage"></category>
<category term="developer"></category>
<category term="PostgreSQL"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
The final phase for the External Fingerprint Storage
Project has come to an end and to finish off, we release one more fingerprint storage plugin:
the PostgreSQL Fingerprint Storage Plugin!


This post highlights the progress made during phase-3.
To understand what the project is about and the past progress, please refer to the
phase-1 post and the
phase-2 post.


Introducing the PostgreSQL Fingerprint Storage Plugin


Why PostgreSQL?

There were several reasons why it made sense to build another reference implementation, especially backed by PostgreSQL.


Redis is a key-value storage, and hence stores the fingerprints as blobs.
The PostgreSQL plugin defines a relational structure for fingerprints.
This offers a more powerful way to...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The final phase for the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/external-fingerprint-storage/&quot;&gt;External Fingerprint Storage
Project&lt;/a&gt; has come to an end and to finish off, we release one more fingerprint storage plugin:
the &lt;a href=&quot;https://github.com/jenkinsci/postgresql-fingerprint-storage-plugin&quot;&gt;PostgreSQL Fingerprint Storage Plugin&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post highlights the progress made during phase-3.
To understand what the project is about and the past progress, please refer to the
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/27/external-fingerprint-storage/&quot;&gt;phase-1 post&lt;/a&gt; and the
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/27/external-fingerprint-storage/&quot;&gt;phase-2 post&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;introducing-the-postgresql-fingerprint-storage-plugin&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#introducing-the-postgresql-fingerprint-storage-plugin&quot; /&gt;Introducing the PostgreSQL Fingerprint Storage Plugin&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;why-postgresql&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#why-postgresql&quot; /&gt;Why PostgreSQL?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There were several reasons why it made sense to build another reference implementation, especially backed by PostgreSQL.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Redis is a key-value storage, and hence stores the fingerprints as blobs.
The PostgreSQL plugin defines a relational structure for fingerprints.
This offers a more powerful way to query the database for fingerprint information.
Fingerprint facets can store extra information inside the fingerprints, which cannot be queried in Redis directly.
PostgreSQL plugin allows powerful (indexing) and efficient querying strategies which can even query the facet metadata.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another reason for building this plugin was to provide a basis for other relational database plugins to be built.
It also validates the flexibility and design of our external fingerprint storage API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since PostgreSQL is a traditional disk storage database, it is more suitable for systems storing a massive number of
fingerprints.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Among relational databases, PostgreSQL is quite popular, has extensive support, and is open-source.
We expect the new implementation to drive more adoption, and prove to be beneficial to the community.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#installation&quot; /&gt;Installation:&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The plugin can be installed using the
&lt;a href=&quot;https://www.jenkins.io/doc/developer/publishing/releasing-experimental-updates/&quot;&gt;experimental update center&lt;/a&gt;.
Follow along the following steps after running Jenkins to download and install the plugin:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;code&gt;Manage Jenkins&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;code&gt;Manage Plugins&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;code&gt;Advanced&lt;/code&gt; tab&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure the Update Site URL as: &lt;code&gt;&lt;a href=&quot;https://updates.jenkins.io/experimental/update-center.json&quot; class=&quot;bare&quot;&gt;https://updates.jenkins.io/experimental/update-center.json&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;Submit&lt;/code&gt;, and then press the &lt;code&gt;Check Now&lt;/code&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;code&gt;Available&lt;/code&gt; tab.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Search for &lt;code&gt;PostgreSQL Fingerprint Storage Plugin&lt;/code&gt; and check the box along it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;Install without restart&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The plugin should now be installed on the system.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;usage&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#usage&quot; /&gt;Usage&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once the plugin has been installed, you can configure the PostgreSQL server details by following the steps below:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;code&gt;Manage Jenkins&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;code&gt;Configure System&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scroll to the section &lt;code&gt;Fingerprints&lt;/code&gt; and choose &lt;code&gt;PostgreSQL Fingerprint Storage&lt;/code&gt; in the dropdown for
&lt;code&gt;Fingerprint Storage Engine&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure the following parameters to connect to your PostgreSQL instance:&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/08-external-fingerprint-storage-phase-3/configure.png&quot; alt=&quot;Configure Redis&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Host&lt;/code&gt; - Enter hostname where PostgreSQL is running&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Port&lt;/code&gt; - Specify the port on which PostgreSQL is running&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SSL&lt;/code&gt; - Click if SSL is enabled&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Database Name&lt;/code&gt; - Specify the database name inside the PostgreSQL instance to be used. Please note that the database
will not be created by the plugin, the user has to create the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Connection Timeout&lt;/code&gt; - Set the connection timeout duration in seconds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Socket Timeout&lt;/code&gt; - Set the socket timeout duration in seconds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Credentials&lt;/code&gt; - Configure authentication using username and password to the PostgreSQL instance.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;li&gt;
&lt;p&gt;Use the &lt;code&gt;Test PostgreSQL Connection&lt;/code&gt; button to verify that the details are correct and Jenkins is able to connect to
the PostgreSQL instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[IMPORTANT] When configuring the plugin for the first time, it is highly important to press the Perform PostgreSQL
Schema Initialization button. It will automatically perform schema initialization and create the necessary indexes.
The button can also be used in the case the database is wiped out and schema needs to be recreated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Press the &lt;code&gt;Save&lt;/code&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, all the fingerprints produced by this Jenkins instance should be saved in the configured PostgreSQL instance!&lt;/p&gt;
&lt;/li&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;querying-the-fingerprint-database&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#querying-the-fingerprint-database&quot; /&gt;Querying the Fingerprint Database&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Due to the relational structure defined by PostgreSQL, it allows users/developers to query the fingerprint data which
was not possible using the Redis fingerprint storage plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The fingerprint storage can act as a consolidated storage for multiple Jenkins instances.
For example, to search for a fingerprint id across Jenkins instances using the file name, the following query could be
used:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code&gt;SELECT fingerprint_id FROM fingerprint.fingerprint
WHERE filename = &#39;random_file&#39;;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A sample query is provided which can be tweaked depending on the parameters to be searched:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code&gt;SELECT * FROM fingerprint.fingerprint
WHERE fingerprint_id = &#39;random_id&#39;
        AND instance_id = &#39;random_jenkins_instance_id&#39;
        AND filename = &#39;random_file&#39;
        AND original_job_name = &#39;random_job&#39;
        AND original_job_build_number = &#39;random_build_number&#39;
        AND timestamp BETWEEN &#39;2019-12-01 23:59:59&#39;::timestamp AND now()::timestamp&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The facets are stored in the database as &lt;code&gt;jsonb&lt;/code&gt;.
PostgreSQL offers support to query &lt;code&gt;jsonb&lt;/code&gt;.
This is especially useful for querying the information stored inside fingerprint facets.
As an example, the &lt;a href=&quot;https://plugins.jenkins.io/docker-traceability&quot;&gt;Docker Traceability Plugin&lt;/a&gt; stores information like the name of Docker images inside these
facets.
These can be queried across Jenkins instances like so:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code&gt;SELECT * FROM fingerprint.fingerprint_facet_relation
WHERE facet_entry-&amp;gt;&amp;gt;&#39;imageName&#39; = &#39;random_container&#39;;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the moment these queries require working knowledge of the database.
In future, these queries can be abstracted away by plugins and the features made available to users directly inside
Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;demo&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#demo&quot; /&gt;Demo&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;External Fingerprint Storage Demo&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;800&quot; height=&quot;420&quot; src=&quot;https://www.youtube.com/embed/HvbbsoljLyg?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1QL5m-7QGtep_G1ysEYKRauAHzDq8nTtOdcnE1t4aYE8/edit?usp=sharing&quot;&gt;Slide deck&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;releases&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#releases&quot; /&gt;Releases 🚀&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We released the &lt;code&gt;0.1-alpha-1&lt;/code&gt; version for the &lt;a href=&quot;https://github.com/jenkinsci/postgresql-fingerprint-storage-plugin&quot;&gt;
PostgreSQL Fingerprint Storage Plugin&lt;/a&gt;.
Please refer to the
&lt;a href=&quot;https://github.com/jenkinsci/postgresql-fingerprint-storage-plugin/releases/tag/postgresql-fingerprint-storage-0.1-alpha-1&quot;&gt;
changelog&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://plugins.jenkins.io/redis-fingerprint-storage/&quot;&gt;Redis Fingerprint Storage Plugin&lt;/a&gt; &lt;code&gt;1.0-rc-3&lt;/code&gt; was also
released.
The
&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/releases/tag/redis-fingerprint-storage-parent-1.0-rc-3&quot;&gt;
changelog&lt;/a&gt; provides more details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A few API changes made in the Jenkins core were released in &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/changelog/#v2.253&quot;&gt;Jenkins-2.253&lt;/a&gt;.
It mainly includes exposing fingerprint range set serialization methods for plugins.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future-directions&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#future-directions&quot; /&gt;Future Directions&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The relational structure of the plugin allows some performance improvements that can be made when implementing
cleanup, as well as improving the performance of &lt;code&gt;Fingerprint#add(String job, int buildNumber)&lt;/code&gt;.
These designs were discussed and are a scope of future improvement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The current external fingerprint storage API supports configuring multiple Jenkins instances to a single storage.
This opens up the possibility of developing traceability plugins which can track fingerprints across Jenkins instances.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please consider reaching out to us if you feel any of the use cases would benefit you, or if you would like to share
some new use cases.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#acknowledgements&quot; /&gt;Acknowledgements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The PostgreSQL Fingerprint Storage Plugin and the Redis Fingerprint Storage plugin are maintained by the
Google Summer of Code (GSoC) Team for &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/external-fingerprint-storage/&quot;&gt;External
Fingerprint Storage for Jenkins&lt;/a&gt;.
Special thanks to &lt;a href=&quot;https://github.com/oleg-nenashev&quot;&gt;Oleg Nenashev&lt;/a&gt;,
&lt;a href=&quot;https://github.com/afalko&quot;&gt;Andrey Falko&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikecirioli&quot;&gt;Mike Cirioli&lt;/a&gt;,
&lt;a href=&quot;https://github.com/timja&quot;&gt;Tim Jacomb&lt;/a&gt;, and the entire Jenkins community for all the contribution to this project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As we wrap up, we would like to point out that there are plenty of future directions and use cases for the externalized
fingerprint storage, as mentioned in the previous section, and we welcome everybody to contribute.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;reaching-out&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#reaching-out&quot; /&gt;Reaching Out&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to reach out to us for any questions, feedback, etc. on the project’s
&lt;a href=&quot;https://gitter.im/jenkinsci/external-fingerprint-storage&quot;&gt;Gitter Channel&lt;/a&gt; or the
&lt;a href=&quot;mailto:jenkinsci-dev@googlegroups.com&quot;&gt;Jenkins Developer Mailing list&lt;/a&gt;.
We use Jenkins &lt;a href=&quot;https://issues.jenkins.io/&quot;&gt;Jira&lt;/a&gt; to track issues.
Feel free to file issues under either the &lt;code&gt;postgresql-fingerprint-storage-plugin&lt;/code&gt; or the
&lt;code&gt;redis-fingerprint-storage-plugin&lt;/code&gt; component depending on the plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;other-links&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#other-links&quot; /&gt;Other Links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/27/external-fingerprint-storage/&quot;&gt;Phase 1 Post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/27/external-fingerprint-storage/&quot;&gt;Phase 2 Post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/postgresql-fingerprint-storage-plugin&quot;&gt;PostgreSQL Fingerprint Storage Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin&quot;&gt;Redis Fingerprint Storage Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/226/README.adoc&quot;&gt;JEP-226&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/jenkinsci/external-fingerprint-storage&quot;&gt;Gitter Channel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/external-fingerprint-storage/&quot;&gt;Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/12/windows-installers-upgrade/</id>
<title>Windows Installer Upgrades</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-08-12T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/12/windows-installers-upgrade/" />
<category term="windows"></category>
<category term="platform-sig"></category>
<category term="installers"></category>
<category term="announcement"></category>
<summary>
This article describes the transition from the old Jenkins Windows installer 2.235.2 (32 bit) to the new Jenkins Windows installer 2.235.3 (64 bit)


Let&#8217;s take a look how Jenkins installation on Windows happened before release of this upgrade.


Step 1





It&#8217;s evident that branding information is not present here.




Step 2





Jenkins would be installed into the 32 bit programs directory along with a 32 bit Java 8 runtime environment.




Step 3





There was no option to select the user that would run the Jenkins service or the network port that would be used.




Issues


The previous installer had issues that needed to be resolved:




Only supported 32-bit installations


Bundled an...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This article describes the transition from the old Jenkins Windows installer 2.235.2 (32 bit) to the new Jenkins Windows installer 2.235.3 (64 bit)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let’s take a look how Jenkins installation on Windows happened before release of this upgrade.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;step-1&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#step-1&quot; /&gt;Step 1&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-08-12-win-installers-upgrade/old_installer_1.png&quot; alt=&quot;Installer Startup&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It’s evident that branding information is not present here.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;step-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#step-2&quot; /&gt;Step 2&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-08-12-win-installers-upgrade/old_installer_2.png&quot; alt=&quot;Installation Directory&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins would be installed into the 32 bit programs directory along with a 32 bit Java 8 runtime environment.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;step-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#step-3&quot; /&gt;Step 3&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-08-12-win-installers-upgrade/old_installer_3.png&quot; alt=&quot;Install It&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There was no option to select the user that would run the Jenkins service or the network port that would be used.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#issues&quot; /&gt;Issues&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The previous installer had issues that needed to be resolved:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Only supported 32-bit installations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bundled an outdated Java 8 runtime environment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No support for Java 11&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No port selection during installation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No choice of account for the Jenkins service&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;Program Files (x86)&lt;/code&gt; directory was used for the Jenkins home directory&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;road-forward&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#road-forward&quot; /&gt;Road Forward&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The new Jenkins Windows Installer resolves those issues&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Supports 64 bit installations and drops 32 bit support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Supports 64 bit Java 8 and 64 bit Java 11&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Port selection and validation from the installer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Service account selection and validation from the installer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Program is installed in &lt;code&gt;Program Files&lt;/code&gt; with Jenkins home directory in &lt;code&gt;%AppData%&lt;/code&gt; of the selected service account&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The JENKINS_HOME directory is placed in the LocalAppData directory for the user that the service will run as, this aligns with modern Windows file system layouts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The installer has been updated with branding to make it look nicer and provide a better user experience&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;screenshots&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#screenshots&quot; /&gt;Screenshots&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You may see below the sequence of screenshots for the new installer:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;step-1-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#step-1-2&quot; /&gt;Step 1&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-08-12-win-installers-upgrade/new_installer_1.png&quot; alt=&quot;Installer Startup&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We can see now the Jenkins logo as a prominent part of the installer UI.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;step-2-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#step-2-2&quot; /&gt;Step 2&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-08-12-win-installers-upgrade/new_installer_2.png&quot; alt=&quot;Installation Directory&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins installs by default in the 64 bit programs folder rather than in the 32 bit folder.
Now the Jenkins logo and name are in the header during entire process of installation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;step-3-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#step-3-2&quot; /&gt;Step 3&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-08-12-win-installers-upgrade/new_installer_3.png&quot; alt=&quot;Account Selection&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now the installer allows both specifying and testing the credentials by validating that the account has LogonAsService rights.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;step-4&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#step-4&quot; /&gt;Step 4&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-08-12-win-installers-upgrade/new_installer_4.png&quot; alt=&quot;Port Selection&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now the installer also allows specifying the port that Jenkins should run on and will not continue until a valid port is entered and tested.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;step-5&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#step-5&quot; /&gt;Step 5&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-08-12-win-installers-upgrade/new_installer_5.png&quot; alt=&quot;JRE Selection&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now instead of bundling a JRE, the installer searches for a compatible JRE on the system (in the current search no JRE was installed).
In case you would like to use a different JRE from the one found by the installer, you can browse and specify it.
Only Java 8 and Java 11 runtimes are supported.
In case the selected JRE is found to be version 11 the installer will automatically add the necessary arguments and additional jar files for running under Java 11.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;step-6&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#step-6&quot; /&gt;Step 6&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image center&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-08-12-win-installers-upgrade/new_installer_6.png&quot; alt=&quot;Install It&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All of the items that users can enter in the installer should be overridable on the command line for automated deployment as well. The full list of properties that can be overridden will be available soon.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;next-steps&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#next-steps&quot; /&gt;Next Steps&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Windows users have alternatives for their existing Jenkins installations:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Upgrade from inside Jenkins&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The &quot;Manage Jenkins&quot; section of the running Jenkins will continue to include an &quot;Upgrade&quot; button for Windows users.
You may continue to use that &quot;Upgrade&quot; button to update the Jenkins installation on your Windows computer.
Upgrade from inside Jenkins will continue to use the current Java version.
Upgrade from inside Jenkins will continue to use the current installation location.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Upgrade with the new Jenkins MSI installer&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;If you run the new Jenkins MSI installer on your Jenkins that was installed with the old Jenkins MSI installer, it will prompt for a new port and a service account.&lt;/p&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Stop and disable the existing Jenkins service from the Windows Service Manager&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the new installer to create the new installation with desired settings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stop the newly installed Jenkins service&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy existing Jenkins configuration files to the new Jenkins home directory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start the newly installed Jenkins service&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After the new Jenkins MSI installer has run, the &quot;Manage Jenkins&quot; section of the running Jenkins will continue to include an &quot;Upgrade&quot; button for Windows users.
You may continue to use that &quot;Upgrade&quot; button to update the Jenkins installation on your Windows computer.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/09/custom-distribution-service-phase-2/</id>
<title>Custom Distribution Service : Phase 2 Blogpost</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-08-09T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/09/custom-distribution-service-phase-2/" />
<author>
<name>sladyn98</name>
</author>
<category term="service"></category>
<category term="distribution"></category>
<category term="cloud-native"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<category term="packaging"></category>
<category term="platform-sig"></category>
<summary>
Hello everyone,
It is time to wrap up another successfull phase for the custom distribution service project,
and we have incorporated most of the features that we had planned at the start of the phase.
It has been an immense learning curve for me and the entire team.


To understand what the project is about and the past progress, please refer to the phase one blogpost
here.


Front-End


Filters for Plugins

In the previous phase we implemented the ability to add plugins to the configuration,
and the ability to search these plugins via a search bar.
Sometimes though we would like to filter these plugins based on their usage,
popularity, stars...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hello everyone,
It is time to wrap up another successfull phase for the &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service&quot;&gt;custom distribution service project&lt;/a&gt;,
and we have incorporated most of the features that we had planned at the start of the phase.
It has been an immense learning curve for me and the entire team.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To understand what the project is about and the past progress, please refer to the phase one blogpost
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/27/custom-distribution-service/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;front-end&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#front-end&quot; /&gt;Front-End&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;filters-for-plugins&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#filters-for-plugins&quot; /&gt;Filters for Plugins&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the previous phase we implemented the ability to add plugins to the configuration,
and the ability to search these plugins via a search bar.
Sometimes though we would like to filter these plugins based on their usage,
popularity, stars etc. Hence we have added a certain set of filters to these plugins.
We support only four major filters for now. They are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist loweralpha&quot;&gt;
&lt;ol class=&quot;loweralpha&quot; type=&quot;a&quot;&gt;
&lt;li&gt;
&lt;p&gt;Title&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most installed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Relevance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trending&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;filter-implementation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#filter-implementation&quot; /&gt;Filter implementation&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The major heavy lifting is done by the plugin api which takes in the necessary parameters
and returns the relevant plugins in the form of a json object,
here is an example of the api call url: &lt;code&gt;const url = &lt;a href=&quot;https://plugins.jenkins.io/api/plugins?$params&quot; class=&quot;bare&quot;&gt;https://plugins.jenkins.io/api/plugins?$params&lt;/a&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For details, see:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Feature request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/issues/9&quot;&gt;#9&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/76&quot;&gt;#76&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;community-configurations&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#community-configurations&quot; /&gt;Community Configurations&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One major deliverable for the project was the ability for users to share the configurations developed by them, so that they can be used widely within the community.
For example we see quite a lot of jenkins configurations involve being run on AWS and kubernetes and so on. Therefore it would be really good for the community to have a place to find and run
these configurations right out of the box.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/gsoc-custom-jenkins-service-distribution/comm-config.png&quot; alt=&quot;community-config&quot; width=&quot;938&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;design-decision&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#design-decision&quot; /&gt;Design Decision&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The major design decision taken here was whether to include the configurations inside
the repository or to have them in a completely new repository.
Let us talk about both these approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;having-the-configurations-in-the-current-repository&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#having-the-configurations-in-the-current-repository&quot; /&gt;Having the configurations in the current repository:&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This allows us to have all of the relevant configurations inside the repository itself,
and so users would not have to go fetch this in different repositories.
We could have issues with the release cycle and dependencies since,
it would have to happen along with the custom distribution service project releases.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;having-the-configurations-in-a-different-repository&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#having-the-configurations-in-a-different-repository&quot; /&gt;Having the configurations in a different repository:&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This allows us to manage all of the configurations and the relevant dependencies separately and easily,
thus avoiding any release conflict with the current repository.
However it would be a bit difficult if users were to not find this repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Decision&lt;/strong&gt; : We still cannot quite agree on what is the best method so for now,
I have included the url from which the community configurations are picked up as a
configuration variable in the &lt;strong&gt;.env&lt;/strong&gt; file which can be configured later and
therefore it can be up to the user to configure. Another advantage of having it configurable,
is that the user can decide to load configurations which are private to his organization as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For details, see:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Issue &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/issues/6161&quot;&gt;#6161&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/73&quot;&gt;#73&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;back-end&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#back-end&quot; /&gt;Back-End&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;war-generation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#war-generation&quot; /&gt;War Generation&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The ability to generate and download war files has finally been achieved,
the reason this feature took so long to complete is because we had some difficulty
in implementing the war generation and its tests. However this has been completed
and can now be tested successfully.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;things-to-take-care-while-generating-war-files&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#things-to-take-care-while-generating-war-files&quot; /&gt;Things to take care while generating war files&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In its current state the war generation cannot include &lt;strong&gt;casc.yml&lt;/strong&gt; or &lt;strong&gt;groovy&lt;/strong&gt; files
if they are included in the configuration they would have to be added externally.
There is an issue opened &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/issues/117&quot;&gt;here&lt;/a&gt;.
The war file generation would yell at you if you tried to build a war file with a jcasc file configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For details, see:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Issue &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/issues/60&quot;&gt;#60&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/68&quot;&gt;#68&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;pull-request-creation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#pull-request-creation&quot; /&gt;Pull Request Creation&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This feature was included in the design document that I created after my GSoC selection.
It involves the ability to create pull requests via the front-end of the service.
The User Story behind this feature was that &lt;strong&gt;If I want to share a configuration with the community and I do not quite know how to use github or I do not want to do it via the terminal&lt;/strong&gt;.
This feature includes creation of a bot that handles the creation of pull requests in the repository.
This bot would have to be installed by the jenkins organization in this repository and the bot would handle the rest.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For details, see:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Issue &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/issues/59&quot;&gt;#59&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/72&quot;&gt;#72&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;disclaimer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#disclaimer&quot; /&gt;Disclaimer:&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This feature has however been put on the back-burner for now because
we are focusing on getting the project to be self hosted and therefore
would like to implement this once we have a clear path for the project to be hosted by the jenkins-infra team.If you would like to participate in the discussion here are the links for the pull requests,
&lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/72&quot;&gt;PR 1&lt;/a&gt; and link: &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/66&quot;&gt;PR 2&lt;/a&gt;, or you can even jump in our &lt;a href=&quot;https://gitter.im/jenkinsci/jenkins-custom-distribution-service&quot;&gt;gitter channel&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have been following my posts,
I mentioned in my second week blog post that pulling in the json file consisting of more than
1600 plugins took a bit more time that my liking.
We managed to solve that issue using a caching mechanism,
so now the files are pulled in the first time you start the service and downloaded in a temporary folder. The next time you want to view the plugin cards they are pulled in directly from the temp directory &lt;strong&gt;bam !&lt;/strong&gt; thereby reducing time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For details see Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/90&quot;&gt;#90&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes-and-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes-and-improvements&quot; /&gt;Fixes and improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;port-8080&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#port-8080&quot; /&gt;Port 8080&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Port 8080 now does have a message instead of a whitelabel error message which is present
by default in the spring-boot tomcat server setup.
Turns out it requires overriding a particular class, and inserting a custom message&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For details, see:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/92&quot;&gt;#92&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;war-generation-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#war-generation-2&quot; /&gt;War Generation&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Till now while you were generating the war file,
if something went wrong during genration the service would not complain it would just swallow the error and throw back a corrupted &lt;strong&gt;war&lt;/strong&gt; file,
however now we have added an error support feature
that will alert you when something goes wrong, the error is not very informative as of now,
but we are working on making it more informative in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For details, see:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;War generation error handling &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/91&quot;&gt;#91&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add Github controller and jwt helper &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/66&quot;&gt;#66&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;dockerfile&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#dockerfile&quot; /&gt;Dockerfile&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of the major milestones of this phase was to have a project that can be self hosted,
needless to say we needed the dockerfile i.e docker-compose.yml to spin the project with a few commands.
The major issue we faced here was that there was a bit of a problem making the two containers talk to each other. Let me give you a little bit of context here.
Our docker-compose is constructed using two separate dockerfiles one for the backend of the service and the other for the front-end.
The backend makes api calls to the front-end via the proxy url i.e localhost:8080.
We now had to change this since the network bridge between the two containers spoke to each other via the backend-server name i.e &lt;strong&gt;app-server&lt;/strong&gt;.
To brige that gap we have this PR that ensured that the docker compose works flawlessly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For details, see:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/82&quot;&gt;#82&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However there is a minor draw-back of the above approach was now the entire
project just relied on the docker compose and could not run using the simple
combination of &lt;strong&gt;npm&lt;/strong&gt; and &lt;strong&gt;maven&lt;/strong&gt; since the proxy was different.
In order to fix this I decided to follow a multiple environment approach,
where we have multiple environment files that pick up the correct proxy and insert it at build time,
to elaborate further we have two environment files,
(using the env-cmd library ) &lt;strong&gt;.env&lt;/strong&gt; and the &lt;strong&gt;docker.env&lt;/strong&gt; and we insert,
the correct file depending on how you want to build the project.
For instance if you want to run it using the dockerfile the command that is run under the hood is something along these lines — &lt;strong&gt;npm --env-cmd -f docker.env start scripts&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For details, see:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pull Request &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service/pull/88&quot;&gt;#88&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;other-links&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#other-links&quot; /&gt;Other links&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/jenkinsci/jenkins-custom-distribution-service&quot;&gt;Gitter Channel Link&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://docs.google.com/document/d/1C7VQJ92Yhr0KRDcNVHYxn4ri7OL9IGZmgxY6UFON6-g/edit?usp=sharing&quot;&gt;GSoC Proposal&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://docs.google.com/document/d/1-ujWVJ2a5VYkUF6UA7m4bEpSDxmb3mJZhCbmoKO716U/edit?usp=sharing&quot;&gt;Design Document&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://docs.google.com/document/d/1DSCH-3wh6uV9Rm_j8PcBzq2lvQPhZ31AIwmWkEaLxvc/edit?usp=sharing&quot;&gt;Daily Notes&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://youtu.be/HQLhakpx5mk?t=547&quot;&gt;Demo&lt;/a&gt;&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/04/cdf-graduation/</id>
<title>Jenkins graduates in the Continuous Delivery Foundation</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-08-04T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/04/cdf-graduation/" />
<author>
<name>oleg_nenashev</name>
</author>
<category term="announcement"></category>
<category term="cdf"></category>
<category term="general"></category>
<category term="community"></category>
<summary>
We are happy to announce that the Jenkins project has achieved the graduated status in
the Continuous Delivery Foundation (CDF).
This status is officially effective Aug 03, 2020.
Jenkins is the first project to graduate in the CD Foundation.
Thanks to all contributors who made our graduation possible!


In this article, we will discuss what the CD Foundation membership and graduation mean to the Jenkins community.
We will also talk about what changed in Jenkins as a part of the graduation,
and what are the future steps for the project.








To know more about the Jenkins graduation,
see also the announcement on the CD Foundation website.
Also see the special...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are happy to announce that the Jenkins project has achieved the &lt;strong&gt;graduated status&lt;/strong&gt; in
the &lt;a href=&quot;https://cd.foundation/&quot;&gt;Continuous Delivery Foundation (CDF)&lt;/a&gt;.
This status is officially effective Aug 03, 2020.
Jenkins is the first project to graduate in the CD Foundation.
Thanks to all contributors who made our graduation possible!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article, we will discuss what the CD Foundation membership and graduation mean to the Jenkins community.
We will also talk about what changed in Jenkins as a part of the graduation,
and what are the future steps for the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot; /&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
To know more about the Jenkins graduation,
see also the &lt;a href=&quot;https://cd.foundation/announcement/2020/08/04/cd-foundation-announces-jenkins-graduation/&quot;&gt;announcement on the CD Foundation website&lt;/a&gt;.
Also see the special edition of the &lt;a href=&quot;https://cd.foundation/stay-connected/newsletter-archive/cdf-newsletter-august2020/&quot;&gt;CD Foundation Newsletter&lt;/a&gt; for Jenkins user success stories and some surprise content.
The press release is available &lt;a href=&quot;https://www.prnewswire.com/news-releases/cd-foundation-announces-jenkins-graduation-301105709.html&quot;&gt;here&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-does-cdf-membership-help-us&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#how-does-cdf-membership-help-us&quot; /&gt;How does CDF membership help us?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;About 18 months ago, Jenkins &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/03/12/cdf-launch/&quot;&gt;became one of the CDF founding projects&lt;/a&gt;, along with Jenkins X, Spinnaker and Tekton.
A new foundation was formed to provide a vendor-neutral home for open source projects used for Continuous Delivery and Continuous Integration.
Special interest groups were started to foster collaboration between projects and end user companies,
most notably:
&lt;a href=&quot;https://github.com/cdfoundation/sig-interoperability&quot;&gt;Interoperability&lt;/a&gt;,
&lt;a href=&quot;https://github.com/cdfoundation/sig-mlops&quot;&gt;MLOps&lt;/a&gt; and
&lt;a href=&quot;https://github.com/cdfoundation/sig-security&quot;&gt;Security&lt;/a&gt; SIGs.
Also, a &lt;a href=&quot;https://cd.foundation/ambassador-program-overview-application/&quot;&gt;Community Ambassador&lt;/a&gt; role was created to organize local meetups and to provide public-facing community representatives.
Many former Jenkins Ambassadors and other contributors are now CDF Ambassadors, and they promote Jenkins and other projects there.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks to this membership we addressed key &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/infrastructure/&quot;&gt;project infrastructure&lt;/a&gt; needs.
Starting from Jan 2020, CDF covers a significant part of the infrastructure costs
including our services and CI/CD instances running on Microsoft Azure.
The CD Foundation provided us with legal assistance required to get code signing keys for the Jenkins project.
Thanks to that, we were able to switch to a new &lt;a href=&quot;https://github.com/jenkins-infra/release&quot;&gt;Jenkins Release Infrastructure&lt;/a&gt;.
The foundation sponsors the Zoom account we use for &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/events/online-meetup/&quot;&gt;Jenkins Online Meetups&lt;/a&gt; and community meetings.
In the future we will continue to review ways of reducing maintenance overhead by switching some of our self-hosted services to equivalents provided by the Linux Foundation to CDF members.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another important CDF membership benefit is community outreach and marketing.
It helped us to establish connections with other CI/CD projects and end user companies.
Through the foundation we have access to the &lt;a href=&quot;https://jenkins.devstats.cd.foundation/&quot;&gt;DevStats service&lt;/a&gt;
that provides community contribution statistics and helps us track trends and discover areas for improvement.
On the marketing side, the foundation organizes webinars, podcasts and newsletters.
Jenkins is regularly represented there.
The CD Foundation also runs the meetup.com professional account which is used by local Jenkins communities for
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/jam/&quot;&gt;CI/CD and Jenkins Area Meetups&lt;/a&gt;.
Last but not least, the Jenkins community is also represented at virtual conferences where CDF has a booth.
All of that helps to grow Jenkins visibility and to highlight new features and initiatives in the project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;why-did-we-graduate&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#why-did-we-graduate&quot; /&gt;Why did we graduate?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;imageblock right&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/logos/graduation/graduation.png&quot; alt=&quot;Jenkins Graduation Logo&quot; width=&quot;224px&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins project has a long history of open governance which is a key part of today’s project success.
Starting from &lt;strong&gt;2011&lt;/strong&gt;, the project has introduced &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/governance-meeting/&quot;&gt;the governance meeting&lt;/a&gt; which are open to anyone.
Most of the discussions and decision making happen publicly in the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/mailing-lists/&quot;&gt;mailing lists&lt;/a&gt;.
&lt;strong&gt;In 2015&lt;/strong&gt; we introduced teams, sub-projects and officer roles.
&lt;strong&gt;In 2017&lt;/strong&gt; we introduced the &lt;a href=&quot;https://github.com/jenkinsci/jep&quot;&gt;Jenkins Enhancement Proposal&lt;/a&gt; process which helped us to make the key architecture and governance decisions more open and transparent to the community and the Jenkins users.
&lt;strong&gt;In 2018&lt;/strong&gt; we introduced &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs&quot;&gt;special interest groups&lt;/a&gt; that focus on community needs.
&lt;strong&gt;In 2019&lt;/strong&gt; we have &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/12/16/board-election-results/&quot;&gt;expanded the Jenkins governance board&lt;/a&gt;
so that it got more bandwidth to facilitate initiatives in the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since the Jenkins project inception 15 years ago, it has been steadily growing.
Now it has millions of users and thousands of contributors.
In 2019 it has seen &lt;strong&gt;5,433 contributors&lt;/strong&gt; from 111 countries and 272 companies,
67 core and 2,654 plugin releases,
45,484 commits, 7,000+ pull requests.
In 2020 Q2 the project has seen &lt;strong&gt;21% growth&lt;/strong&gt; in pull requests numbers compared to 2019 Q2, bots excluded.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One may say that the Jenkins project already has everything needed to succeed.
It is a result of continuous work by many community members,
and this work will never end as long as the project remains active.
Like in any other industry, the CI/CD ecosystem changes every day and sets new expectations from the automation tools in this domain.
Just as the tools evolve, open source communities need to evolve so that they can address expectations, and onboard more users and contributors.
The CDF graduation process helped us to discover opportunities for improvement,
and address them.
We reviewed the project processes and compared them with the Graduated Project criteria defined in the &lt;a href=&quot;https://github.com/cdfoundation/toc/blob/master/PROJECT_LIFECYCLE.md&quot;&gt;CDF project lifecycle&lt;/a&gt;.
Based on this review, we made changes in our processes and documentation.
It should improve the experience of Jenkins users,
and help to make the Jenkins community more welcoming to existing and newcomer contributors.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;what-changed-for-the-project&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#what-changed-for-the-project&quot; /&gt;What changed for the project?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Below you can find a few key changes we have applied during the graduation process:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Public roadmap&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;We introduced a new &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/roadmap/&quot;&gt;public roadmap&lt;/a&gt; for the Jenkins project.
This roadmap aggregates key initiatives in all community areas: features, infrastructure, documentation, community, etc.
It makes the project more transparent to all Jenkins users and adopters,
and at the same time helps potential contributors find the hot areas and opportunities for contribution.
The roadmap is driven by the Jenkins community and it has a fully public process documented in &lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/14/README.adoc&quot;&gt;JEP-14&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More details about the public roadmap are coming next week, stay tuned for a separate blogpost.
On July 10th we had an online contributor meetup about the roadmap
and you can find more information in its materials
(&lt;a href=&quot;https://docs.google.com/presentation/d/1_T2nZhP1WS2Fw0OLVAJV14Ke6nEsqBjLcdAHiygCmNs/edit?usp=sharing&quot;&gt;slides&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=ldWBY5BdQ5I&quot;&gt;video recording&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;User Documentation&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jenkins Weekly Release line is now documented on our website (&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/download/weekly/&quot;&gt;here&lt;/a&gt;).
We have also reworked the downloads page and added guidelines explaining how to verify downloads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A new &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/adopters&quot;&gt;list of Jenkins adopters&lt;/a&gt; was introduced on jenkins.io.
This list highlights Jenkins users and references their case studies and success stories,
including ones submitted through the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/04/30/jenkins-is-the-way/&quot;&gt;Jenkins Is The Way&lt;/a&gt; portal.
Please do not hesitate to add your company there!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Community&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We passed the &lt;a href=&quot;https://www.coreinfrastructure.org/&quot;&gt;Core Infrastructure Initiative (CII)&lt;/a&gt; certification.
This certification helps us to verify compliance with open source best practices
and to make adjustments in the project (see the bullets below).
It also provides Jenkins users and adopters with a public summary about compliance with each best practice.
Details are on the &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/en/projects/3538&quot;&gt;Jenkins core page&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jenkins.io/project/conduct/&quot;&gt;Jenkins Code of Conduct was updated&lt;/a&gt;
to the new version of Contributor Covenant.
In particular, it sets best practices of behavior in the community, and expands definitions of unacceptable behavior.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The default &lt;a href=&quot;https://github.com/jenkinsci/.github/blob/master/CONTRIBUTING.md&quot;&gt;Jenkins contributing template&lt;/a&gt; was updated to cover more common cases for plugin contributors.
This page provides links to the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/participate&quot;&gt;Participate and Contribute&lt;/a&gt; guidelines hosted on our website,
and helps potential contributors to easily access the documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Jenkins Core &lt;a href=&quot;https://github.com/jenkinsci/jenkins/blob/master/docs/MAINTAINERS.adoc&quot;&gt;maintainer guide&lt;/a&gt; was updated to include maintenance and issues triage guidelines.
It should help us to deliver quality releases and to timely triage and address issues reported by Jenkins users.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#whats-next&quot; /&gt;What’s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It an honor to be the first project to reach the graduated stage in the Continuous Delivery Foundation,
but it is also a great responsibility for the project.
As a project, we plan to continue participating in the CDF activities and to work with other projects and end users to maintain the Jenkins&#39; leader role in the CI/CD space.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We encourage everyone to join the project and &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/participate/&quot;&gt;participate&lt;/a&gt; in evolving the Jenkins project and driving its roadmap.
It does not necessarily mean committing code or documentation patches;
user feedback is also very important to the project.
If you are interested to contribute or to share your feedback,
please contact us in the Jenkins community channels (&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/mailing-lists&quot;&gt;mailing lists&lt;/a&gt;, &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/chat&quot;&gt;chats&lt;/a&gt;)!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#acknowledgements&quot; /&gt;Acknowledgements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;CDF graduation work was a major effort in the Jenkins community.
Congratulations and thanks to the dozens of contributors who made our graduation possible.
I would like to thank
&lt;a href=&quot;https://github.com/slide&quot;&gt;Alex Earl&lt;/a&gt;,
&lt;a href=&quot;https://github.com/alyssat&quot;&gt;Alyssa Tong&lt;/a&gt;,
&lt;a href=&quot;https://github.com/dlorenc&quot;&gt;Dan Lorenc&lt;/a&gt;,
&lt;a href=&quot;https://github.com/daniel-beck&quot;&gt;Daniel Beck&lt;/a&gt;,
&lt;a href=&quot;https://github.com/jeffret-b&quot;&gt;Jeff Thompson&lt;/a&gt;,
&lt;a href=&quot;https://github.com/markyjackson-taulia&quot;&gt;Marky Jackson&lt;/a&gt;,
&lt;a href=&quot;https://github.com/markewaite&quot;&gt;Mark Waite&lt;/a&gt;,
&lt;a href=&quot;https://github.com/olblak&quot;&gt;Olivier Vernin&lt;/a&gt;,
&lt;a href=&quot;https://github.com/timja&quot;&gt;Tim Jacomb&lt;/a&gt;,
&lt;a href=&quot;https://github.com/tracymiranda&quot;&gt;Tracy Miranda&lt;/a&gt;,
&lt;a href=&quot;https://github.com/uhafner&quot;&gt;Ullrich Hafner&lt;/a&gt;,
&lt;a href=&quot;https://github.com/wadeck&quot;&gt;Wadeck Follonier&lt;/a&gt;,
and all other contributors who helped with reviews and provided their feedback!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Also thanks to the Continuous Delivery Foundation marketing team (Jacqueline Salinas, Jesse Casman and Roxanne Joncas) for their work on promoting the Jenkins project and, specifically, its graduation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;about-the-continuous-delivery-foundation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#about-the-continuous-delivery-foundation&quot; /&gt;About the Continuous Delivery Foundation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;imageblock right&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/sponsors/cdf.png&quot; alt=&quot;CDF Logo&quot; width=&quot;164px&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://cd.foundation&quot;&gt;Continuous Delivery Foundation (CDF)&lt;/a&gt; serves as the vendor-neutral home of many of the fastest-growing projects for continuous delivery, including Jenkins, Jenkins X, Tekton, and Spinnaker,
as well as fosters collaboration between the industry’s top developers, end users and vendors to further continuous delivery best practices.
The CDF is part of the Linux Foundation, a nonprofit organization.
For more information about the foundation, please visit &lt;a href=&quot;https://cd.foundation&quot;&gt;its website&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;more-information&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#more-information&quot; /&gt;More information&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To know more about the Jenkins graduation in the Continuous Delivery Foundation,
see the &lt;a href=&quot;https://cd.foundation/announcement/2020/08/04/cd-foundation-announces-jenkins-graduation/&quot;&gt;announcement on the CD Foundation website&lt;/a&gt;.
Also see the special edition of the &lt;a href=&quot;https://cd.foundation/stay-connected/newsletter-archive/cdf-newsletter-august2020/&quot;&gt;CD Foundation Newsletter&lt;/a&gt; for Jenkins user success stories and some surprise content.
The press release is available &lt;a href=&quot;https://www.prnewswire.com/news-releases/cd-foundation-announces-jenkins-graduation-301105709.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/03/github-checks-api-plugin-coding-phase-2/</id>
<title>GitHub Checks API Plugin Project - Coding Phase 2</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-08-03T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/08/03/github-checks-api-plugin-coding-phase-2/" />
<author>
<name>XiongKezhi</name>
</author>
<category term="github"></category>
<category term="api"></category>
<category term="plugins"></category>
<category term="developer"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
Another great coding phase for GitHub Checks API Project ends!
In this phase, we focused on consuming the checks API in two widely used plugins:




Warnings NG Plugin


Code Coverage API Plugin




Besides the external usage, we have also split the general checks API from its GitHub implementation and released both of the plugins:




Checks API Plugin


GitHub Checks Plugin




Coding Phase 2 Demo [starts from 25:20]





Warning Checks


The newly released Warnings NG plugin 8.4.0 will use checks API to publish different check runs for different static analysis tools.
Without leaving GitHub, users are now able to see the analysis report they interested in.







On GitHub&#8217;s conversation tab for each...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another great coding phase for &lt;a href=&quot;https://www.jenkins.io/projects/gsoc/2020/projects/github-checks/&quot;&gt;GitHub Checks API Project&lt;/a&gt; ends!
In this phase, we focused on consuming the checks API in two widely used plugins:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://plugins.jenkins.io/warnings-ng/&quot;&gt;Warnings NG Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://plugins.jenkins.io/code-coverage-api/&quot;&gt;Code Coverage API Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Besides the external usage, we have also split the general checks API from its GitHub implementation and released both of the plugins:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://plugins.jenkins.io/checks-api/&quot;&gt;Checks API Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://plugins.jenkins.io/github-checks/&quot;&gt;GitHub Checks Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Coding Phase 2 Demo [starts from 25:20]&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;800&quot; height=&quot;420&quot; src=&quot;https://www.youtube.com/embed/b67I6spBdTg?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;warning-checks&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#warning-checks&quot; /&gt;Warning Checks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The newly released &lt;a href=&quot;https://github.com/jenkinsci/warnings-ng-plugin/releases/tag/warnings-ng-8.4.0&quot;&gt;Warnings NG plugin 8.4.0&lt;/a&gt; will use checks API to publish different check runs for different static analysis tools.
Without leaving GitHub, users are now able to see the analysis report they interested in.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/08-github-checks-api-plugin-coding-phase-2/warning-checks.png&quot; alt=&quot;Warning Checks Summary&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;On GitHub’s conversation tab for each PR, users will see summaries for those checks like the screenshot above. The summaries will include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The status that indicates the quality gate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The name of the analysis tool used&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A short message that indicates statistics of new and total issues&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More fine-grained statistics can be found in the &lt;code&gt;Details&lt;/code&gt; page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/08-github-checks-api-plugin-coding-phase-2/severity-statistics.png&quot; alt=&quot;Severity Statis&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another practical feature is the annotation for specific lines of code. Users can now review the code alone with the annotations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/08-github-checks-api-plugin-coding-phase-2/annotations.png&quot; alt=&quot;Warning Annotations&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;try-it&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#try-it&quot; /&gt;Try It&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In &lt;a href=&quot;https://github.com/jenkinsci/warnings-ng-plugin/releases/tag/warnings-ng-8.4.0&quot;&gt;Wanings NG plugin 8.4.0&lt;/a&gt;, the warning checks is set as a default feature only for GitHub.
For other SCM platforms, a &lt;code&gt;NullPublisher&lt;/code&gt; will be used which does nothing.
Therefore, you can get those checks for your own GitHub project just in a few steps:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Update Warnings NG plugin to 8.4.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href=&quot;https://plugins.jenkins.io/github-checks/&quot;&gt;GitHub Checks plugin&lt;/a&gt; on your Jenkins instance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow the &lt;a href=&quot;https://github.com/jenkinsci/github-branch-source-plugin/blob/master/docs/github-app.adoc&quot;&gt;GitHub app authentication guide&lt;/a&gt; to configure the credentials for the multi-branch project or GitHub organization project you are going to use&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use warnings-ng plugin in your Jenkinsfile for the project you configured in the last step, e.g.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;node {
    stage (&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Checkout&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;) {
        checkout scm
    }

    stage (&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Build and Static Analysis&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;) {
        sh &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;mvn -V -e clean verify -Dmaven.test.failure.ignore&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;

        recordIssues &lt;span style=&quot;color:#606&quot;&gt;tools&lt;/span&gt;: [java(), javaDoc()], &lt;span style=&quot;color:#606&quot;&gt;aggregatingResults&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:#606&quot;&gt;id&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;java&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:#606&quot;&gt;name&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Java&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;
        recordIssues &lt;span style=&quot;color:#606&quot;&gt;tool&lt;/span&gt;: errorProne(), &lt;span style=&quot;color:#606&quot;&gt;healthy&lt;/span&gt;: &lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color:#606&quot;&gt;unhealthy&lt;/span&gt;: &lt;span style=&quot;color:#00D&quot;&gt;20&lt;/span&gt;
        recordIssues &lt;span style=&quot;color:#606&quot;&gt;tools&lt;/span&gt;: [checkStyle(&lt;span style=&quot;color:#606&quot;&gt;pattern&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;target/checkstyle-result.xml&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;),
            spotBugs(&lt;span style=&quot;color:#606&quot;&gt;pattern&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;target/spotbugsXml.xml&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;),
            pmdParser(&lt;span style=&quot;color:#606&quot;&gt;pattern&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;target/pmd.xml&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;),
            cpd(&lt;span style=&quot;color:#606&quot;&gt;pattern&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;target/cpd.xml&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;)],
            &lt;span style=&quot;color:#606&quot;&gt;qualityGates&lt;/span&gt;: [[&lt;span style=&quot;color:#606&quot;&gt;threshold&lt;/span&gt;: &lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color:#606&quot;&gt;type&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;TOTAL&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:#606&quot;&gt;unstable&lt;/span&gt;: &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;]]
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;For more about the pipeline usage of warnings-ng plugin, please see &lt;a href=&quot;https://github.com/jenkinsci/warnings-ng-plugin/blob/master/doc/Documentation.md#pipeline-configuration&quot;&gt;the official documentation&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, if you don’t want to publish the warnings to GitHub, you can either uninstall the GitHub Checks plugin or disable it by adding &lt;code&gt;skipPublishingChecks: true&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;recordIssues &lt;span style=&quot;color:#606&quot;&gt;enabledForFailure&lt;/span&gt;: &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;, &lt;span style=&quot;color:#606&quot;&gt;tools&lt;/span&gt;: [java(), javaDoc()], &lt;span style=&quot;color:#606&quot;&gt;skipPublishingChecks&lt;/span&gt;: &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;coverage-checks&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#coverage-checks&quot; /&gt;Coverage Checks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The coverage checks are achieved by consuming the API in &lt;a href=&quot;https://plugins.jenkins.io/code-coverage-api/&quot;&gt;Code Coverage API plugin&lt;/a&gt;.
First, in the conversation tab of a PR, users will be able to see the summary about the coverage difference compared to previous builds.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/08-github-checks-api-plugin-coding-phase-2/coverage-summary.png&quot; alt=&quot;Coverage Summary&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;Details&lt;/code&gt; page will contain some other things:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Links to the reference build, including the target branch build from the master branch and the last successful build from this branch&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coverage healthy score (the default value is 100% if the threshold is not configured)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coverages and trends of different types in table format&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/08-github-checks-api-plugin-coding-phase-2/coverage-details.png&quot; alt=&quot;Coverage Details&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/jenkinsci/code-coverage-api-plugin/pull/169&quot;&gt;pull request&lt;/a&gt; for this feature will soon be merged and will be included in the next release of Coverage Checks API plugin. After that, you can use it by adding the below section to your pipeline script:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;node {
    stage (&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Checkout&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;) {
        checkout scm
    }

    stage (&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Line and Branch Coverage&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;) {
        publishCoverage &lt;span style=&quot;color:#606&quot;&gt;adapters&lt;/span&gt;: [jacoco(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;**/*/jacoco.xml&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;)], &lt;span style=&quot;color:#606&quot;&gt;sourceFileResolver&lt;/span&gt;: sourceFiles(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;STORE_ALL_BUILD&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Like the warning checks, you can also disable the coverage checks by setting the field &lt;code&gt;skipPublishingChecks&lt;/code&gt;, e.g.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;groovy&quot;&gt;publishCoverage &lt;span style=&quot;color:#606&quot;&gt;adapters&lt;/span&gt;: [jacoco(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;**/*/jacoco.xml&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;)], &lt;span style=&quot;color:#606&quot;&gt;sourceFileResolver&lt;/span&gt;: sourceFiles(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;STORE_ALL_BUILD&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;), &lt;span style=&quot;color:#606&quot;&gt;skipPublishingChecks&lt;/span&gt;: &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;next-phase&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#next-phase&quot; /&gt;Next Phase&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the next phase, we will turn our attention back to &lt;a href=&quot;https://plugins.jenkins.io/checks-api/&quot;&gt;Checks API Plugin&lt;/a&gt; and &lt;a href=&quot;https://plugins.jenkins.io/github-checks/&quot;&gt;GitHub Checks Plugin&lt;/a&gt; and add the following features in future versions:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pipeline Support&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Users can publish checks directly in a pipeline script without requiring a consumer plugin that supports the checks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Re-run Request&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Users can re-run Jenkins build through Checks API.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Lastly, it is exciting to inform that we are currently making the checks feature available on &lt;a href=&quot;https://ci.jenkins.io&quot;&gt;ci.jenkins.io&lt;/a&gt; for all plugins hosted in the jenkinsci GitHub organization, please see &lt;a href=&quot;https://issues.jenkins.io/browse/INFRA-2694&quot;&gt;INFRA-2694&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;resources&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#resources&quot; /&gt;Resources&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/checks-api-plugin&quot;&gt;Checks API Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/github-checks-plugin&quot;&gt;GitHub Checks Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/github-checks/&quot;&gt;Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/jenkinsci/github-checks-api&quot;&gt;Gitter Channel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/29/git-performance-improvement-phase2/</id>
<title>Git Plugin Performance Improvement Phase-2 Progress</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-07-29T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/29/git-performance-improvement-phase2/" />
<author>
<name>rishabhbudhouliya</name>
</author>
<category term="plugins"></category>
<category term="git"></category>
<category term="platform-sig"></category>
<category term="developer"></category>
<category term="performance"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
The second phase of the Git Plugin Performance Improvement project has been great in terms of the progress we have achieved in implementing performance improvement insights
derived from the phase one JMH micro-benchmark experiments.


What we&#8217;ve learned so far in this project is that a git fetch is highly correlated to the size of the remote repository. In order to make fetch improvements in this plugin, our task was to find the difference in performance for the two available git implementations in the Git Plugin, git and JGit.


Our major finding was that git performs much better than JGit when it comes to...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The second phase of the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/09/git-performance-improvement-phase1/&quot;&gt;Git Plugin Performance Improvement project&lt;/a&gt; has been great in terms of the progress we have achieved in implementing performance improvement insights
derived from the phase one &lt;a href=&quot;https://openjdk.java.net/projects/code-tools/jmh/&quot;&gt;JMH&lt;/a&gt; micro-benchmark experiments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What we’ve learned so far in this project is that a git fetch is highly correlated to the size of the remote repository. In order to make fetch improvements in this plugin, our task was to find the difference in performance for the two available git implementations in the &lt;a href=&quot;https://github.com/jenkinsci/git-plugin&quot;&gt;Git Plugin&lt;/a&gt;, &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;JGit&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our major finding was that &lt;code&gt;git&lt;/code&gt; performs much better than &lt;code&gt;JGit&lt;/code&gt; when it comes to a large sized repository (&amp;gt;100 MiB). Interestingly, &lt;code&gt;JGit&lt;/code&gt; performs better than &lt;code&gt;git&lt;/code&gt; when size of the repository is less than 100 MiB.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this phase, we were successful in coding this derived knowledge from the benchmarks into a new functionality called the
GitToolChooser.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;gittoolchooser&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#gittoolchooser&quot; /&gt;GitToolChooser&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This class aims to add the functionality of recommending a git implementation on the basis of the size of a repository which has a strong correlation to the performance of git fetch (from performance Benchmarks).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It utilizes two heuristics to calculate the size:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Using cached .git dir from multibranch projects to estimate the size of a repository&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Providing an extension point which, upon implementation, can use REST APIs exposed by git service providers like Github, GitLab, etc to fetch the size of the remote repository.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Will it optimize your Jenkins instance?
That requires one of the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;you have a multibranch project in your Jenkins instance, the plugin can use that to recommend the optimal git implementation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;you have a branch Source Plugin installed in the Jenkins instance, the particular branch source plugin will recommend a git implementation using REST APIs provided by &lt;a href=&quot;https://plugins.jenkins.io/github-branch-source/&quot;&gt;GitHub&lt;/a&gt; or &lt;a href=&quot;https://plugins.jenkins.io/gitlab-branch-source/&quot;&gt;GitLab&lt;/a&gt; respectively.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The architecture and code for this class is at: &lt;a href=&quot;https://github.com/jenkinsci/git-plugin/pull/931&quot;&gt;PR-931&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This functionality is an upcoming feature in the subsequent Git Plugin release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jmh-benchmarks-in-multiple-environments&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jmh-benchmarks-in-multiple-environments&quot; /&gt;JMH benchmarks in multiple environments&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The benchmarks were being executed on Linux and macOS machines frequently but there was a need to check if the results gained from those benchmarks would hold true across more platforms to ensure that the solution (GitToolChooser) is generally platform-agnostic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To test this hypothesis, we performed an experiment:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Running git fetch operation for a 400 MiB sized repository on:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Windows&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FreeBSD 12&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ppc64le&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;s390x&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The result of running this experiment is given below:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-git-plugin-performance-improvement/git-multiple-platforms.png&quot; alt=&quot;Performance on multiple platforms&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Observations:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ppc64le&lt;/code&gt; and &lt;code&gt;s390x&lt;/code&gt; are able to run the operation in almost half the time it takes for the &lt;code&gt;Windows&lt;/code&gt; or &lt;code&gt;FreeBSD 12&lt;/code&gt; machine. This behavior may be attributed to the increased computational power of those machines.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The difference in performance between &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;JGit&lt;/code&gt; remains constant across all platforms which is a positive sign for the GitToolChooser as its recommendation would be consistent across multiple devices and operating systems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;release-plan&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#release-plan&quot; /&gt;Release Plan 🚀&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-49757&quot;&gt;JENKINS-49757&lt;/a&gt; - Avoid double fetch from Git checkout step
This issue was fixed in phase one, avoids the second fetch in redundant cases.
It will be shipped with some benchmarks on the change in performance due to the removal of the second fetch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/git-client-plugin/pull/574&quot;&gt;PR-574&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/git-plugin/pull/904&quot;&gt;PR-904&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;GitToolChooser&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/git-plugin/pull/931&quot;&gt;PR-931&lt;/a&gt;
This pull request is under review, will be shipped in one of the subsequent Git Plugin releases.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Current Challenges with GitToolChooser&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Implement the extension point to support GitHub Branch Source Plugin, Gitlab Branch Source Plugin and Gitea Plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The current version of JGit doesn’t support LFS checkout and sparse checkout, need to make sure that the recommendation doesn’t break existing use cases.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future-work&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#future-work&quot; /&gt;Future Work&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In phase three, we wish to:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Release a new version of the Git and Git Client Plugin with the features developed during the project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continue to explore more areas for performance improvement&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add a new git operation: git clone (Stretch Goal)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;reaching-out&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#reaching-out&quot; /&gt;Reaching Out&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to reach out to us for any questions or feedback on the project’s &lt;a href=&quot;https://gitter.im/jenkinsci/git-plugin&quot;&gt;Gitter Channel&lt;/a&gt; or the &lt;a href=&quot;mailto:jenkinsci-dev@googlegroups.com&quot;&gt;Jenkins
Developer Mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/git-plugin-performance/&quot;&gt;Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/09/git-performance-improvement-phase1/&quot;&gt;Phase 1 Blog Post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/27/repository-signing-keys-changing/</id>
<title>Jenkins 2.235.3: New Linux Repository Signing Keys</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-07-27T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/27/repository-signing-keys-changing/" />
<author>
<name>markewaite</name>
</author>
<category term="announcement"></category>
<category term="linux"></category>
<category term="platform"></category>
<summary>
The Jenkins core release automation project has been delivering Jenkins weekly releases since Jenkins 2.232, April 16, 2020.
The Linux repositories that deliver the weekly release were updated with new GPG keys with the release of Jenkins 2.232.


Beginning with Jenkins LTS release 2.235.3, stable repositories will be signed with the same GPG keys that sign the weekly repositories.
Administrators of Linux systems must install the new signing keys on their Linux servers before installing Jenkins 2.235.3.


Debian/Ubuntu


Update Debian compatible operating systems (Debian, Ubuntu, Linux Mint Debian Edition, etc.) with the command:


Debian/Ubuntu

# wget -qO - https://pkg.jenkins.io/debian-stable/jenkins.io.key | apt-key add -





Red Hat/CentOS


Update Red Hat compatible...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins core release automation project has been delivering Jenkins weekly releases since &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/changelog/#v2.232&quot;&gt;Jenkins 2.232&lt;/a&gt;, April 16, 2020.
The Linux repositories that deliver the weekly release were updated with new GPG keys with the release of Jenkins 2.232.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Beginning with Jenkins LTS release &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/changelog-stable/#v2.235.3&quot;&gt;2.235.3&lt;/a&gt;, stable repositories will be signed with the same GPG keys that sign the weekly repositories.
Administrators of Linux systems &lt;strong&gt;must&lt;/strong&gt; install the new signing keys on their Linux servers &lt;strong&gt;before&lt;/strong&gt; installing Jenkins 2.235.3.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;debianubuntu&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#debianubuntu&quot; /&gt;Debian/Ubuntu&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Update Debian compatible operating systems (Debian, Ubuntu, Linux Mint Debian Edition, etc.) with the command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Debian/Ubuntu&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;# wget -qO - https://pkg.jenkins.io/debian-stable/jenkins.io.key | apt-key add -&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;red-hatcentos&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#red-hatcentos&quot; /&gt;Red Hat/CentOS&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Update Red Hat compatible operating systems (Red Hat Enterprise Linux, CentOS, Fedora, Oracle Linux, Scientific Linux, etc.) with the command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Red Hat/CentOS&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;# rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;frequently-asked-questions&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#frequently-asked-questions&quot; /&gt;Frequently Asked Questions&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;what-if-i-dont-update-the-repository-signing-key&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#what-if-i-dont-update-the-repository-signing-key&quot; /&gt;What if I don’t update the repository signing key?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Updates will be &lt;strong&gt;blocked&lt;/strong&gt; by the operating system package manager (apt, yum, dnf) on operating systems that have not installed the new repository signing key.
Sample messages from the operating system may look like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Debian/Ubuntu&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;Reading package lists... Done
W: GPG error: https://pkg.jenkins.io/debian-stable binary/ Release:
    The following signatures couldn&#39;t be verified because the public key is not available:
        NO_PUBKEY FCEF32E745F2C3D5
E: The repository &#39;https://pkg.jenkins.io/debian-stable binary/ Release&#39; is not signed.
N: Updating from such a repository can&#39;t be done securely, and is therefore disabled by default.
N: See apt-secure(8) manpage for repository creation and user configuration details.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Red Hat/CentOS&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;Downloading packages:
warning: /var/cache/yum/x86_64/7/jenkins/packages/jenkins-2.235.3-1.1.noarch.rpm:
    Header V4 RSA/SHA512 Signature, key ID 45f2c3d5: NOKEY
Public key for jenkins-2.235.3-1.1.noarch.rpm is not installed&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;why-is-the-repository-signing-key-being-updated&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#why-is-the-repository-signing-key-being-updated&quot; /&gt;Why is the repository signing key being updated?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The original repository GPG signing key is owned by Kohsuke Kawaguchi.
Rather than require that Kohsuke disclose his personal GPG signing key, the core release automation project has used a new repository signing key.
The updated GPG repository signing key is used in the weekly repositories and the stable repositories.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;which-operating-systems-are-affected&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#which-operating-systems-are-affected&quot; /&gt;Which operating systems are affected?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Operating systems that use Debian package management (apt) and operating systems that use Red Hat package management (yum and dnf) need the new repository signing key.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Other operating systems like Windows, macOS, FreeBSD, OpenBSD, Solaris, and OpenIndiana are not affected.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;are-there-other-signing-changes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#are-there-other-signing-changes&quot; /&gt;Are there other signing changes?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Yes, there are other signing changes, though they do not need specific action from users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;jenkins.war&lt;/code&gt; file is signed with a new code signing certificate.
The new code signing certificate has been used on weekly releases since April 2020.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/27/machine-learning-plugin-coding-phase2/</id>
<title>Machine Learning Plugin project - Coding Phase 2 blog post</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-07-27T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/27/machine-learning-plugin-coding-phase2/" />
<author>
<name>loghijiaha</name>
</author>
<category term="machinelearning"></category>
<category term="datascience"></category>
<category term="plugins"></category>
<category term="communitybonding"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
Welcome back folks!


This blog post is about my coding phase 2 in Jenkins Machine Learning Plugin for this GSoC 2020.
After successfully passing the evaluation and demo in the phase 1, our team went ahead for facing the challenges in phase 2.


Summary


This phase of coding was well spent by documentation and by fixing many bugs.
As the main feature of connecting to an IPython Kernel is done in phase 1, we were able to focus on fixing minor/major bugs and documenting for the users.
According to the JENKINS-62927 issue, a Docker agent was built to facilitate users without concerning plugin dependencies in python.
In...
</summary>
<content type="html">
&lt;div class=&quot;imageblock text-center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/gsoc/jenkins-gsoc-logo_small.png&quot; alt=&quot;jenkins gsoc logo small&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Welcome back folks!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This blog post is about my coding phase 2 in Jenkins &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/machine-learning/&quot;&gt;Machine Learning Plugin&lt;/a&gt; for this GSoC 2020.
After successfully passing the evaluation and demo in the phase 1, our team went ahead for facing the challenges in phase 2.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;summary&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#summary&quot; /&gt;Summary&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This phase of coding was well spent by documentation and by fixing many bugs.
As the main feature of connecting to an IPython Kernel is done in phase 1, we were able to focus on fixing minor/major bugs and documenting for the users.
According to the &lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62927&quot;&gt;JENKINS-62927&lt;/a&gt; issue, a Docker agent was built to facilitate users without concerning plugin dependencies in python.
In the act of deprecation of Python 2, we ported our plugin to support Python 3.
We have tested our plugin in Conda, venv and Windows environments.
Machine learning plugin has successfully passed the end to end test. A feature for a code editor is needed for further discussion/analysis as we have done a simple editor that may be useful in other ways in the future. &lt;a href=&quot;https://github.com/jenkinsci/machine-learning-plugin/pull/35&quot;&gt;PR#35&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;main-features-of-machine-learning-plugin&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#main-features-of-machine-learning-plugin&quot; /&gt;Main features of Machine Learning plugin&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Run Jupyter notebook, (Zeppelin) JSON and Python files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run Python code directly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Convert Jupyter Notebooks to Python and JSON&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure IPython kernel properties&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support to execute Notebooks/Python on Agent&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for Windows and Linux&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;upcoming-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upcoming-features&quot; /&gt;Upcoming features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Extract graph/map/images from the code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save artifacts according to the step name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generate reports for corresponding build&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#future-improvements&quot; /&gt;Future improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Usage of JupyterRestClient&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for multiple language kernels&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Note : There is no commitment on future improvements during GSoC period&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;docker-agent&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#docker-agent&quot; /&gt;Docker agent&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following Dockerfile can be used to build the Docker container as an agent for the Machine Learning plugin. This docker agent can be used to run  notebooks or python scripts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Dockerfile&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code&gt;FROM jenkins/agent:latest

MAINTAINER Loghi &amp;lt;loghijiaha@gmail.com&amp;gt;

USER root

RUN apt update &amp;amp;&amp;amp; apt install --no-install-recommends python3 -y \
    python3-pip \
    &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*

COPY requirements.txt /requirements.txt

RUN pip3 install --upgrade pip setuptools &amp;amp;&amp;amp; \
    pip3 install --no-cache-dir -r /requirements.txt &amp;amp;&amp;amp; \
    ln -sf /usr/bin/python3 /usr/bin/python &amp;amp;&amp;amp; \
    ln -sf /usr/bin/pip3 /usr/bin/pip

USER jenkins&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;ported-to-python-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#ported-to-python-3&quot; /&gt;Ported to Python 3&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As discussed in the previous meeting, we concluded that the plugin should support Python 3 as Python 2.7+ has been deprecated since the beginning of 2020. Pull request for docker agent should be also ported to Python 3 support.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jupyter-rest-client-api&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jupyter-rest-client-api&quot; /&gt;Jupyter Rest Client API&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jupyter Notebook server API seemed to be promising that it can be also used to run notebooks and codes. There were 3 api implementations that were merged in the master. But we had to focus on what was proposed in the design document and had to finish all must-have issues/works. Jupyter REST client was left for future implementation. It is also a good start to contribute to the plugin from the community.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;fixed-bugs-for-running-in-agent&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixed-bugs-for-running-in-agent&quot; /&gt;Fixed bugs for running in agent&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There were a few bugs related to the file path of notebooks while building a job. The major problem was caused by the python dependencies needed to connect to a IPython kernel. All issues/bugs were fixed before the timeline given.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;r-support-as-a-future-improvement&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#r-support-as-a-future-improvement&quot; /&gt;R support as a future improvement&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is what we tried to give a glimpse of knowledge that this plugin can be extended for multi language support in the future. There was a conclusion that the kernel should be selected dynamically using extension of the script file(like &lt;code&gt;eval_model.rb&lt;/code&gt; or &lt;code&gt;train_model.r&lt;/code&gt;), instead of scripting the same code for each kernel.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;documentation-and-end-to-end-testing&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#documentation-and-end-to-end-testing&quot; /&gt;Documentation and End to End testing&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A well explained documentation was published in the repository. A guided tutorial to run a notebook checked out from a git repo in an agent was included in the &lt;a href=&quot;https://github.com/jenkinsci/machine-learning-plugin/blob/master/docs/ML-docker-agent.adoc&quot;&gt;docs&lt;/a&gt; page. Mentors helped to test our plugin in both Linux and Windows.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;code-editor-with-rebuild-feature&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#code-editor-with-rebuild-feature&quot; /&gt;Code editor with rebuild feature&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Code editor was filtered as a nice to have feature in the design document. After grabbing the idea of Jenkinsfile replay editor, I could do the same for the code. At the same time, when we are getting the source code from git, it is not an elegant way of editing code in the original code. After the discussion, we had to leave the PR open that may have use cases in the future if needed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jenkins-lts-update&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-lts-update&quot; /&gt;Jenkins LTS update&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The plugin has been updated to support Jenkins LTS 2.204.1 as 2.164.3 had some problems with installing pipeline supported API/plugin&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;installation-for-experimental-version&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#installation-for-experimental-version&quot; /&gt;Installation for experimental version&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Enable the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/developer/publishing/releasing-experimental-updates/#using-the-experimental-update-center&quot;&gt;experimental update center&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Search for &lt;code&gt;Machine Learning Plugin&lt;/code&gt; and check the box along it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;Install without restart&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The plugin should now be installed on your system.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;resources&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#resources&quot; /&gt;Resources&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/03/machine-learning-plugin-community-bonding/&quot;&gt;Community Bonding blog post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/30/machine-learning-plugin-coding-phase1/&quot;&gt;Phase 1 blog post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/machine-learning-plugin.git&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/machine-learning/&quot;&gt;Project page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/10FjktNmWpdjgbGg3tEViadV_JNevn9W0sMOu-bF8m-o/edit?usp=sharing&quot;&gt;Design document&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/27/custom-distribution-service/</id>
<title>Custom Distribution Service : Midterm Summary</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-07-27T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/27/custom-distribution-service/" />
<author>
<name>sladyn98</name>
</author>
<category term="service"></category>
<category term="distribution"></category>
<category term="cloud-native"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<category term="packaging"></category>
<category term="platform-sig"></category>
<summary>
Hello,
After an eventful community bonding period we finally entered into the coding phase. This blog post will summarize the work done till the midterm of the coding phases i.e. week 6. If some of the topics here require a more detailed explanation, I will write a separate blog post. These blogs posts will not have a very defined format but would cover all of the user stories or features implemented.


Project Summary

The main idea behind the project is to build a customizable jenkins distribution service that could be used to build tailor-made jenkins distributions. The service would provide users with a...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hello,
After an eventful community bonding period we finally entered into the coding phase. This blog post will summarize the work done till the midterm of the coding phases i.e. week 6. If some of the topics here require a more detailed explanation, I will write a separate blog post. These blogs posts will not have a very defined format but would cover all of the user stories or features implemented.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;project-summary&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#project-summary&quot; /&gt;Project Summary&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main idea behind the project is to build a customizable jenkins distribution service that could be used to build tailor-made jenkins distributions. The service would provide users with a simple interface to select the configurations they want to build the instance with eg: plugins, authorization matrices etc. Furthermore it would include a section for sharing community created distros so that users can find and download already built jenkins war/configuration files to use out of the box.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;quick-review&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#quick-review&quot; /&gt;Quick review&lt;/h3&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width: 25%;&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 83.3333%;&quot;&gt;
&lt;col style=&quot;width: 16.6667%;&quot;&gt;
&lt;/col&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Pull Requests Opened&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;38&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Github Issues completed&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;36&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/col&gt;
&lt;/colgroup&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;details&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#details&quot; /&gt;Details&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have written separate blog posts for every week in GSoC and the intricate details for each of them can be found at their respective blog pages. I am including a summary for every phase supported with the respective links.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;community-bonding&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#community-bonding&quot; /&gt;Community Bonding&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This year GSoC had a longer community bonding than any of the previous editions due to the Coronavirus pandemic and therefore this gave me a lot of time to explore, so I spent it by building a prototype for my project. I realised some of the blockages I might face early on, and therefore it gave me more clarity in terms of how I can proceed. I also spent this time preparing a design document which you can find &lt;a href=&quot;https://docs.google.com/document/d/1-ujWVJ2a5VYkUF6UA7m4bEpSDxmb3mJZhCbmoKO716U/edit&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://sladyn98.netlify.app/blog/community_bonding/&quot;&gt;Community Bonding Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;week-1&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#week-1&quot; /&gt;Week 1&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In week one, I spent time getting used to the tech stack I would be using, I was pretty familiar with Spring Boot but React was something I was going to be using for the first time, so I spent time studying more about it. I also got the project page ready, the issues I was going to tackle and the milestones that I had to achieve before the evaluation. I also spent a bit of time setting up the home page and a bit of front-end components.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://sladyn98.netlify.app/blog/gsoc_week1/&quot;&gt;Week 1 Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;week-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#week-2&quot; /&gt;Week 2&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once we were done with the initial setup, it was time to work on the core of the project.
In the second week, I worked on generating the package configuration and the plugin list dummy display page setup.
I also ran into issues with the Jenkinsfile so the majority of time was spent fixing it.
Finally I managed to get around those problems.
You can read more about it in the &lt;a href=&quot;https://sladyn98.netlify.app/blog/gsoc_week2/&quot;&gt;Week 2 Blog post&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://sladyn98.netlify.app/blog/gsoc_week2/&quot;&gt;Week 2 Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;week-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#week-3&quot; /&gt;Week 3&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The last week was spent cleaning up most of the code and getting the remaining milestones in. This was probably the hardest part of phase 1 because it involved connecting the front and back end of the project.You can read more about it here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://sladyn98.netlify.app/blog/gsoc_week3/&quot;&gt;Week 3&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;midterm-update&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#midterm-update&quot; /&gt;Midterm Update&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The second phase has been going on for the past 3 weeks and we have already accomplished a majority of the deliverables including community configurations, war downloading and filtering of plugins. More details about the mid term report can be found here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://sladyn98.netlify.app/blog/gsoc_midterm/&quot;&gt;Midterm Update&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;getting-the-code&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#getting-the-code&quot; /&gt;Getting the Code&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Custom Distribution Service was created from scratch during GSoC and can be found &lt;a href=&quot;https://github.com/jenkinsci/custom-distribution-service&quot;&gt;here on Github&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;other-links&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#other-links&quot; /&gt;Other links&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1C7VQJ92Yhr0KRDcNVHYxn4ri7OL9IGZmgxY6UFON6-g/edit?usp=sharing&quot;&gt;GSoC Proposal&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://docs.google.com/document/d/1-ujWVJ2a5VYkUF6UA7m4bEpSDxmb3mJZhCbmoKO716U/edit?usp=sharing&quot;&gt;Design Document&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://docs.google.com/document/d/1DSCH-3wh6uV9Rm_j8PcBzq2lvQPhZ31AIwmWkEaLxvc/edit?usp=sharing&quot;&gt;Daily Notes&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://youtu.be/HQLhakpx5mk&quot;&gt;Demo&lt;/a&gt;&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;feedback-channel&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#feedback-channel&quot; /&gt;Feedback channel&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/jenkinsci/jenkins-custom-distribution-service&quot;&gt;Gitter Channel Link&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/table&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/24/external-fingerprint-storage-phase-2/</id>
<title>External Fingerprint Storage Phase-2 Updates</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-07-24T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/24/external-fingerprint-storage-phase-2/" />
<author>
<name>stellargo</name>
</author>
<category term="plugins"></category>
<category term="fingerprint"></category>
<category term="cloud-native"></category>
<category term="external-storage"></category>
<category term="developer"></category>
<category term="redis"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
As another great phase for the
External Fingerprint Storage Project
comes to an end, we summarise the work done during this phase in this blog post.
It was an exciting and fruitful journey, just like the previous phase, and offered some great learning experience.


To understand what the project is about and the past progress, please refer to the
phase 1 blog post.


New Stories Completed


We targeted four stories in this phase, namely fingerprint cleanup, fingerprint migration, refactoring the current
implementation to use descriptors, and improved testing of the Redis Fingerprint Storage Plugin.
We explain these stories in detail below.


Fingerprint Cleanup



https://github.com/jenkinsci/jenkins/pull/4817


https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/23




This story involved extending the FingerprintStorage API to...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As another great phase for the
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/external-fingerprint-storage/&quot;&gt;External Fingerprint Storage Project&lt;/a&gt;
comes to an end, we summarise the work done during this phase in this blog post.
It was an exciting and fruitful journey, just like the previous phase, and offered some great learning experience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To understand what the project is about and the past progress, please refer to the
&lt;a href=&quot;https://www.jenkins.io/blog/2020/06/27/external-fingerprint-storage/&quot;&gt;phase 1 blog post&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-stories-completed&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-stories-completed&quot; /&gt;New Stories Completed&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We targeted four stories in this phase, namely fingerprint cleanup, fingerprint migration, refactoring the current
implementation to use descriptors, and improved testing of the Redis Fingerprint Storage Plugin.
We explain these stories in detail below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;fingerprint-cleanup&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fingerprint-cleanup&quot; /&gt;Fingerprint Cleanup&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/jenkins/pull/4817&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/jenkins/pull/4817&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/23&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/23&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This story involved extending the &lt;code&gt;FingerprintStorage&lt;/code&gt; API to allow external storage plugins to perform and configure
their own fingerprint cleanup strategies.
We added the following functionalities to Jenkins core API:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FingerprintStorage#iterateAndCleanupFingerprints(TaskListener taskListener)&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This allows external fingerprint storage implementations to implement their own custom fingerprint cleanup.
The method is called periodically by Jenkins core.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FingerprintStorage#cleanFingerprint(Fingerprint fingerprint, TaskListener taskListener)&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This is a reference implementation which can be called by external storage plugins to clean up a fingerprint.
It is upto the plugin implementation to decide whether to use this method.
They may choose to write a custom implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We consume these new API functionalities in the
&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin&quot;&gt;Redis Fingerprint Storage plugin&lt;/a&gt;.
The plugin uses cursors to traverse the fingerprints, updating the build information, and deleting the build-less
fingerprints.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Earlier, fingerprint cleanup was always run periodically and there was no way to turn it off.
We also added an option to allow the user to turn off fingerprint cleanup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-external-fingerprint-storage-phase-2/cleanup_disable.png&quot; alt=&quot;Fingerprint cleanup disable&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This was done because it may be the case that keeping redundant fingerprints in memory might be cheaper than the
cleanup operation (especially in the case of external storages, which are cheaper these days).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;fingerprint-migration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fingerprint-migration&quot; /&gt;Fingerprint Migration&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/jenkins/pull/4825&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/jenkins/pull/4825&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Earlier, there was no support for fingerprints stored in the local storage.
In this phase, we introduce migration support for users.
The old fingerprints are now migrated to the new configured external storage whenever they are used (lazy migration).
This allows gradual migration of old fingerprints from local disk storage to the new external storage.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;refactor-fingerprintstorage-to-use-descriptors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#refactor-fingerprintstorage-to-use-descriptors&quot; /&gt;Refactor &lt;code&gt;FingerprintStorage&lt;/code&gt; to use descriptors&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/jenkins/pull/4834&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/jenkins/pull/4834&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/36&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/36&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Earlier, whenever an external fingerprint storage plugin was installed, it was enabled by default.
We refactored the implementation to make use of &lt;code&gt;Descriptor&lt;/code&gt; pattern so the fingerprint engine can now be selected
as a dropdown from the Jenkins configuration page.
The dropdown is shown only when multiple fingerprint storage engines are configured on the system.
&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin&quot;&gt;Redis Fingerprint Storage Plugin&lt;/a&gt; was refactored
to use this new implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-external-fingerprint-storage-phase-2/fingerprint_storage_engine_dropdown.png&quot; alt=&quot;Fingerprint Storage Engine Dropdown&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;strengthened-testing-for-the-redis-fingerprint-storage-plugin&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#strengthened-testing-for-the-redis-fingerprint-storage-plugin&quot; /&gt;Strengthened testing for the Redis Fingerprint Storage Plugin&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/33&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/33&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We introduced new connection tests in the
&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin&quot;&gt;Redis Fingerprint Storage Plugin&lt;/a&gt;.
These tests allow testing of cases like slow connection, breakage of connection to Redis, etc.
These were implemented using the Toxiproxy module inside Testcontainers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/31&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/31&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We introduced test for Configuration-as-code (JCasC) compatibility with the plugin.
The documentation for configuring the plugin using JCasC was also added.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/39&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/39&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We introduced a suite of authentication tests, to verify the proper working of the Redis authentication system.
Authentication uses the credentials plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/32&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/32&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/36&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/pull/36&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We strengthened our web UI testing to ensure that the configuration page for the plugin works properly as planned.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;other-miscellaneous-tasks&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#other-miscellaneous-tasks&quot; /&gt;Other miscellaneous tasks&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please refer to the &lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62754&quot;&gt;Jira Epic&lt;/a&gt; for this phase.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;releases&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#releases&quot; /&gt;Releases 🚀&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Changes in the Jenkins core (except migration) were released in &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/changelog/#v2.248&quot;&gt;Jenkins 2.248&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We drafted &lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/releases/tag/redis-fingerprint-storage-parent-1.0-rc-1&quot;&gt;1.0-rc-1&lt;/a&gt;
release for the &lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin&quot;&gt;Redis Fingerprint Storage Plugin&lt;/a&gt;
to deliver the changes.
This was an increment from the &lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/releases/tag/redis-fingerprint-storage-parent-0.1-alpha-1&quot;&gt;alpha release&lt;/a&gt;
we had drafted at the end of the previous phase.
The plugin is now available at &lt;a href=&quot;https://plugins.jenkins.io/redis-fingerprint-storage/&quot; class=&quot;bare&quot;&gt;https://plugins.jenkins.io/redis-fingerprint-storage/&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;trying-out-the-new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#trying-out-the-new-features&quot; /&gt;Trying out the new features!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The latest release for the plugin can be downloaded from the update center, instructions for which can be
found in the &lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin/blob/master/README.adoc&quot;&gt;README&lt;/a&gt;
of the plugin.
We appreciate you trying out the plugin, and welcome any suggestions, feature requests, bug reports, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#acknowledgements&quot; /&gt;Acknowledgements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Redis Fingerprint Storage plugin is built and maintained by the Google Summer of Code (GSoC) Team for
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/external-fingerprint-storage/&quot;&gt;External Fingerprint Storage for
Jenkins&lt;/a&gt;. Special thanks to &lt;a href=&quot;https://github.com/oleg-nenashev&quot;&gt;Oleg Nenashev&lt;/a&gt;,
&lt;a href=&quot;https://github.com/afalko&quot;&gt;Andrey Falko&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikecirioli&quot;&gt;Mike Cirioli&lt;/a&gt;,
&lt;a href=&quot;https://github.com/timja&quot;&gt;Tim Jacomb&lt;/a&gt;, and the entire Jenkins community for all the contribution to this project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future-work&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#future-work&quot; /&gt;Future Work&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some of the topics we aim to tackle in the next phase include a new reference implementation (possibly backed
by PostgreSQL), tracing, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;reaching-out&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#reaching-out&quot; /&gt;Reaching Out&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to reach out to us for any questions, feedback, etc. on the project’s &lt;a href=&quot;https://gitter.im/jenkinsci/external-fingerprint-storage&quot;&gt;Gitter Channel&lt;/a&gt; or the &lt;a href=&quot;mailto:jenkinsci-dev@googlegroups.com&quot;&gt;Jenkins
Developer Mailing list&lt;/a&gt;.
We use Jenkins &lt;a href=&quot;https://issues.jenkins.io/&quot;&gt;Jira&lt;/a&gt; to track issues.
Feel free to file issues under &lt;code&gt;redis-fingerprint-storage-plugin&lt;/code&gt; component.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;other-links&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#other-links&quot; /&gt;Other Links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin&quot;&gt;Redis Fingerprint Storage Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62754&quot;&gt;Issue Tracker for Phase 2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/226/README.adoc&quot;&gt;JEP-226&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/jenkinsci/external-fingerprint-storage&quot;&gt;Gitter Channel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/external-fingerprint-storage/&quot;&gt;Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/27/external-fingerprint-storage/&quot;&gt;Phase 1 Blog Post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/23/windows-support-updates/</id>
<title>Jenkins 2.248: Windows Support Updates</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-07-23T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/23/windows-support-updates/" />
<author>
<name>oleg_nenashev</name>
</author>
<category term="announcement"></category>
<category term="windows"></category>
<category term="platform"></category>
<category term="winsw"></category>
<summary>
In this article, I would like to announce the new Windows support policy
which was introduced in the Jenkins project in June 2020.
This policy sets an expectation about how we handle issues and patches related to Windows support for the Jenkins server and agents, and how we organize testing of Windows support in the project.
We will also talk about .NET Framework 2.0 support removal in Jenkins 2.248,
and about new Windows service management features and fixes Jenkins users get with this release.





Figure 1. Jenkins on Windows


Why?


In theory, Jenkins can run everywhere where you can run Java 8 or Java 11, but, in...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article, I would like to announce the new &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/administration/requirements/windows/&quot;&gt;Windows support policy&lt;/a&gt;
which was introduced in the Jenkins project in June 2020.
This policy sets an expectation about how we handle issues and patches related to Windows support for the Jenkins server and agents, and how we organize testing of Windows support in the project.
We will also talk about .NET Framework 2.0 support removal in &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/changelog/#v2.248&quot;&gt;Jenkins 2.248&lt;/a&gt;,
and about new Windows service management features and fixes Jenkins users get with this release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock text-center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-windows-support-updates/header_image.png&quot; alt=&quot;header image&quot;&gt;
&lt;/img&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Jenkins on Windows&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;why&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#why&quot; /&gt;Why?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In theory, Jenkins can run everywhere where you can run Java 8 or Java 11, but, in practice, there are some limitations.
The Jenkins core and some plugins contain native code, and hence they rely on operating systems and platforms.
We use Java Native Access and Java Native Runtime libraries which provide wide platform support for low-level operations,
but there are platform-specific cases not covered by such generic libraries.
In the case of Windows platforms we use &lt;a href=&quot;https://github.com/winsw/winsw&quot;&gt;Windows Service Wrapper (WinSW)&lt;/a&gt; and
&lt;a href=&quot;https://github.com/kohsuke/winp&quot;&gt;Windows Process Management Library (WinP)&lt;/a&gt;.
These libraries depend on particular Windows API versions and, in the case of Windows services, on .NET Framework.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Historically Jenkins had no documented support policy for Windows,
and we were accepting patches for all versions which existed since the Hudson inception in 2004.
It became a serious obstacle for Windows component maintainers who had to be very conservative about incoming patches so that we could avoid breaking instances running on old platforms.
Lack of testing for older platforms did not help either.
And it is not just about maintenance overhead.
Users were impacted as well, because it blocked us from adopting some new Windows features and making Jenkins more stable/maintainable on modern platforms.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-policy&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-policy&quot; /&gt;New policy&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To set proper expectations about Windows support,
in the new policy we defined four support levels.
See the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/administration/requirements/windows/&quot;&gt;Windows support policy page&lt;/a&gt; for the actual information about the support levels and the supported platforms.
This blogpost captures the support state as of Jul 23, 2020:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Level 1 - Full Support&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;We run automated testing for these platforms, and we intend to timely fix the reported issues.
This support level includes 64-bit (amd-64) Windows Server versions with the latest GA update pack,
and versions used in the official Jenkins server and agent Docker images.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Level 2 - Supported&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;We do not actively test these platforms, but we intend to keep compatibility.
We are happy to accept patches.
This support level includes 64-bit (amd64) Windows Server and Windows 10 versions generally supported by Microsoft.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Level 3 - Patches considered&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The platforms are generally expected to work, but they may have limitations and extra requirements.
We do not test compatibility, and we may drop support if needed.
We will consider patches if they do not put Level 1/2 platforms at risk and if they do not create maintenance overhead.
This support level includes non-amd64 platforms like x86 (32-bit) and AArch64 (Arm).
It also applies to non-mainstream release lines like Windows Embedded, preview releases, and versions no longer supported by Microsoft.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Level 4 - Unsupported&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;These versions are known to be incompatible or to have severe limitations.
We do not support the listed platforms, and we will not accept patches.
At the moment this level applies to platforms released before 2008.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the policy was introduced, there were questions raised about platforms listed in the &lt;em&gt;Level 3&lt;/em&gt; support category.
First of all, these platforms are still supported.
Users are welcome to run Jenkins on these platforms.
We recognize the importance of the platforms listed there, and we intend to keep compatibility with them.
At the same time, particular functionality may break there due to the lack of testing when we update Jenkins or upstream dependencies.
It may take a while until a fix is submitted by a user or contributor,
because we do not maintain development environments for these platforms.
By setting a Level 3 support level, we want to set an explicit expectation about those limitations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you are interested in expanding the official Windows support policy and adding more platforms there,
we invite you to participate in &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/participate/test/&quot;&gt;quality assurance of Jenkins&lt;/a&gt;.
You may contribute by expanding test automation for Jenkins,
contributing test environments for your platforms,
or participating in the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/download/lts/&quot;&gt;LTS release candidate testing&lt;/a&gt; and reporting results.
Please contact us via &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/platform/&quot;&gt;Platform SIG&lt;/a&gt; channels if you are interested.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;windows-service-management-changes-in-jenkins-2-248&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#windows-service-management-changes-in-jenkins-2-248&quot; /&gt;Windows Service Management changes in Jenkins 2.248&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;imageblock right&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-windows-support-updates/winsw-logo.png&quot; alt=&quot;winsw logo&quot; width=&quot;224px&quot;&gt;
&lt;/img&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. WinSW Logo&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Although the policy was introduced more than 1 month ago,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/changelog/#v2.248&quot;&gt;Jenkins 2.248&lt;/a&gt; is the first release where the new policy is applied.
Starting from this release, we won’t support .NET Framework 2.0 for launching the Jenkins server or agents as Windows services.
 .NET Framework 4.0 or above is now required for using the default service management features.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This release also upgrades &lt;a href=&quot;https://github.com/winsw/winsw&quot;&gt;Windows Service Wrapper (WinSW)&lt;/a&gt; from 2.3.0 to 2.9.0 and replaces the bundled binary from .NET Framework 2.0 to 4.0.
There are many improvements and fixes in these versions,
big thanks to &lt;a href=&quot;https://github.com/NextTurn&quot;&gt;NextTurn&lt;/a&gt; and all other contributors.
You can find the full WinSW changelog &lt;a href=&quot;https://github.com/winsw/winsw/releases&quot;&gt;here&lt;/a&gt;,
just a few highlights important to Jenkins users:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Prompt for permission elevation when administrative access is required.
Now Jenkins users do not need to run the agent process as Administrator to install the agent as a service from GUI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable TLS 1.1/1.2 in .NET Framework 4.0 packages on Windows 7 and Windows Server 2008 R2.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable strong cryptography when running .NET Framework 4.0 binaries on .NET 4.6.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support security descriptor string in the Windows service definition.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support &#39;If-Modified-Since&#39; and proxy settings for automatic downloads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix Runaway Process Killer extension so that it does not kill wrong processes with the same PID on startup.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix the default domain name in the &lt;code&gt;serviceaccount&lt;/code&gt; parameter (&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-12660&quot;&gt;JENKINS-12660&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix archiving of old logs in the &lt;code&gt;roll-by-size-time&lt;/code&gt; mode.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you may see, there are many improvements available with this version,
and we hope that it will make Windows service installation even more reliable.
Some of the changes in WinSW also replaced old workarounds in the Jenkins core,
making the code more maintainable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;use-cases-affected-by-net-framework-2-0-support-removal&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#use-cases-affected-by-net-framework-2-0-support-removal&quot; /&gt;Use-cases affected by .NET Framework 2.0 support removal&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you use .NET Framework 2.0 to run the Jenkins Windows services,
the following use-cases are likely to be affected:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Installing the Jenkins server as a Windows service from Web UI.
The official MSI Installer supports .NET Framework 2.0 for the moment, but it will be changed in future versions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installing agents as Windows services from GUI.
This feature is provided by in &lt;a href=&quot;https://github.com/jenkinsci/windows-slave-installer-module&quot;&gt;Windows Agent Installer Module&lt;/a&gt; from the Jenkins core.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installing agents over Windows Management Instrumentation (WMI) via the &lt;a href=&quot;https://plugins.jenkins.io/windows-slaves&quot;&gt;WMI Windows Agents&lt;/a&gt; plugin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Auto-updating of Windows service wrappers on agents installed from GUI.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;upgrade-guidelines&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#upgrade-guidelines&quot; /&gt;Upgrade guidelines&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If all of your Jenkins server and agent instances already use .NET Framework 4.0 or above,
there are no special upgrade steps required.
Please enjoy the new features!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you run the Jenkins server as a Windows Service with .NET Framework 2.0,
this instance will require an upgrade of .NET Framework to version 4.0 or above.
We recommend running with .NET Framework 4.6.1 or above,
because this .NET version provides many platform features by default
(e.g. TLS 1.2 encryption and strong cryptography),
and Windows Service Wrapper does not have to apply custom workarounds.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you want to continue running some of your agents with .NET Framework 2.0,
the following extra upgrade steps are required:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Disable auto-upgrade of Windows Service Wrapper on agents by setting the
&lt;code&gt;-Dorg.jenkinsci.modules.windows_slave_installer.disableAutoUpdate=true&lt;/code&gt; flag on the Jenkins server side.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade agents with .NET Framework 4.0+ by downloading the recent Windows Service Wrapper 2.x
version from &lt;a href=&quot;https://github.com/winsw/winsw/releases&quot;&gt;WinSW GitHub Releases&lt;/a&gt;
and manually replacing the wrapper &quot;.exe&quot; files in the agent workspaces.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#whats-next&quot; /&gt;What’s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We plan to continue expanding the Windows support in Jenkins,
including providing official Docker images for newer Windows versions.
For example, there is already a &lt;a href=&quot;https://github.com/jenkinsci/docker-agent/pull/145&quot;&gt;pull request&lt;/a&gt; which will introduce official agent images for Windows Server Core LTSC 2019 and
for Windows Server Core and Nano Server 1909.
We are also interested to keep expanding test coverage for Windows platforms.
Any contributions and feedback will be appreciated!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We also keep working on improving Windows Services.
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/authors/buddhikac96&quot;&gt;Buddhika Chathuranga&lt;/a&gt;, a Google Summer of Code 2020 student, is working on support for YAML Configurations in Windows Service Wrapper,
and on better verification of XML and YAML Configurations.
See the details on the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/winsw-yaml-configs/&quot;&gt;project page&lt;/a&gt; and in the
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/08/winsw-yaml-support/&quot;&gt;Coding Phase 1 Report&lt;/a&gt;.
In addition to that, there is ongoing work on a new &lt;a href=&quot;https://github.com/winsw/winsw/tree/v3&quot;&gt;Windows Service Wrapper 3.0&lt;/a&gt; release which will redesign CLI and introduce a lot more improvements.
If you are interested in contributing to Windows Service Wrapper,
see the guidelines &lt;a href=&quot;https://github.com/winsw/winsw/blob/master/CONTRIBUTING.md&quot;&gt;here&lt;/a&gt;.
We will also appreciate your feedback on the &lt;a href=&quot;https://gitter.im/winsw/winsw&quot;&gt;WinSW Gitter channel&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/15/xss-severity/</id>
<title>Severity of cross-site scripting vulnerabilities</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-07-15T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/15/xss-severity/" />
<author>
<name>daniel-beck</name>
</author>
<category term="security"></category>
<category term="announcement"></category>
<summary>
Eagle-eyed readers of today&#8217;s security advisory may already have noticed that we consider the cross-site scripting (XSS) vulnerabilities to be 'High' severity.
This is a change from previous security advisories, in which similar vulnerabilities got a 'Medium' score.


We follow the guidelines of CVSS version 3.0 for the severity we assign to these issues.
Their examples for XSS vulnerabilities, as well as XSS vulnerabilities in other software, consider the most severe, immediate impact to be a modification of the HTML output, possibly also the extraction of the session cookie (something Jenkins prevents by declaring it to be HttpOnly).


Unfortunately, this does not adequately model...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Eagle-eyed readers of today’s &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/security/advisory/2020-07-15/&quot;&gt;security advisory&lt;/a&gt; may already have noticed that we consider the cross-site scripting (XSS) vulnerabilities to be &#39;High&#39; severity.
This is a change from previous security advisories, in which similar vulnerabilities got a &#39;Medium&#39; score.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We follow the guidelines of &lt;a href=&quot;https://www.first.org/cvss/calculator/3.0&quot;&gt;CVSS version 3.0&lt;/a&gt; for the severity we assign to these issues.
Their examples for XSS vulnerabilities, as well as XSS vulnerabilities in other software, consider the most severe, immediate impact to be a modification of the HTML output, possibly also the extraction of the session cookie (something Jenkins prevents by declaring it to be &lt;code&gt;HttpOnly&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Unfortunately, this does not adequately model the impact that a successful XSS exploitation in Jenkins can have:
Jenkins administrators can perform far more sensitive actions than e.g. the admins of most content management systems could, as it is designed to allow users to execute code to build, test, and deploy their software.
So this kind of vulnerability, that allows attackers to do &lt;em&gt;anything&lt;/em&gt; their victims have permission to do, in Jenkins can mean execution of arbitrary code, perhaps via the script console, if the victim has the Overall/Administer permission.
None of this requires chaining different actions in an attack, a well-chosen XSS payload will accomplish this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Therefore, starting today, we score XSS vulnerabilities by the highest immediate impact a successful attack can have, which is a complete system compromise if admins can be attacked.
For stored XSS requiring some permissions, like the ability to configure jobs, a typical score would be &lt;a href=&quot;https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H&quot;&gt;8.0&lt;/a&gt;.
Reflected XSS, which don’t require any permissions to exploit, will usually score &lt;a href=&quot;https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H&quot;&gt;8.8&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/09/github-checks-api-plugin-coding-phase-1/</id>
<title>GitHub Checks API Plugin Project - Coding Phase 1</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-07-09T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/09/github-checks-api-plugin-coding-phase-1/" />
<author>
<name>XiongKezhi</name>
</author>
<category term="github"></category>
<category term="api"></category>
<category term="plugins"></category>
<category term="developer"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
This blog post is about our coding phase 1 progress on GSoC project: GitHub Checks API Plugin.


The GitHub Checks API is a highly customized way to integrate CI tools to make reports for pull-requests (PRs).
It allows users to see CI reports on GitHub pages directly.





Figure 1. GitHub Check Run Screenshot from GitHub Docs


What&#8217;s more exciting is that it can leave annotations on specific lines of code, just as the comments people left while reviewing.





Figure 2. Check Run Annotation Screenshot from GitHub Docs


While on Jenkins' side, the source code view provided by Warnings Next Generation Plugin does pretty much the same...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This blog post is about our coding phase 1 progress on GSoC project: &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/github-checks/&quot;&gt;GitHub Checks API Plugin&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The GitHub Checks API is a highly customized way to integrate CI tools to make reports for pull-requests (PRs).
It allows users to see CI reports on GitHub pages directly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-github-checks-api-plugin-coding-phase-1/github-check-run.png&quot; alt=&quot;github check run&quot;&gt;
&lt;/img&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. GitHub Check Run Screenshot from GitHub Docs&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What’s more exciting is that it can leave annotations on specific lines of code, just as the comments people left while reviewing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-github-checks-api-plugin-coding-phase-1/github-check-annotations.png&quot; alt=&quot;github check annotations&quot;&gt;
&lt;/img&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Check Run Annotation Screenshot from GitHub Docs&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While on Jenkins&#39; side, the source code view provided by &lt;a href=&quot;https://plugins.jenkins.io/warnings-ng/&quot;&gt;Warnings Next Generation Plugin&lt;/a&gt; does pretty much the same thing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-github-checks-api-plugin-coding-phase-1/source-view.png&quot; alt=&quot;source view&quot;&gt;
&lt;/img&gt;
&lt;div class=&quot;title&quot;&gt;Figure 3. Source Code View from Warnings Next Generation Plugin&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Utilizing such features through GitHub Checks API, it would make Jenkins more convenient to GitHub users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;features-from-coding-phase-1&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#features-from-coding-phase-1&quot; /&gt;Features from Coding Phase 1&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the past month, our team was mostly working on the general checks API and an implementation for GitHub checks API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;GitHub Checks API Plugin Demo [starts from 50:15]&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;800&quot; height=&quot;420&quot; src=&quot;https://www.youtube.com/embed/HQLhakpx5mk?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;general-checks-api&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#general-checks-api&quot; /&gt;General Checks API&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Although the general checks API is developed based on the semantic meaning of GitHub Checks API, we still want to prepare it for similar concepts on other platforms like &lt;a href=&quot;https://docs.gitlab.com/ee/api/commits.html#commit-status&quot;&gt;Commit Status API&lt;/a&gt; from GitLab.
Contributions for implementations on these platforms will be welcomed in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;github-checks-api-implementation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#github-checks-api-implementation&quot; /&gt;GitHub Checks API Implementation&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our work on supporting GitHub Checks API is mostly done by now.
Besides, we implemented a consumer to automatically create a check run that simply indicates the current stage of a Jenkins build.
After the release, Jenkins developers (especially publisher plugin ones) can create their own GitHub checks for a GitHub branch source project by consuming our API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; To create a check run like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-github-checks-api-plugin-coding-phase-1/created-check-run.png&quot; alt=&quot;Created Check Run&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Consumers need to use our API in this way:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;java&quot;&gt;ChecksDetails details = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; ChecksDetailsBuilder()
        .withName(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Jenkins&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
        .withStatus(ChecksStatus.COMPLETED)
        .withDetailsURL(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;https://ci.jenkins.io&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
        .withStartedAt(LocalDateTime.now(ZoneOffset.UTC))
        .withCompletedAt(LocalDateTime.now(ZoneOffset.UTC))
        .withConclusion(ChecksConclusion.SUCCESS)
        .withOutput(&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; ChecksOutputBuilder()
                .withTitle(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Jenkins Check&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                .withSummary(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;# A Successful Build&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                .withText(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;## 0 Failures&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                .withAnnotations(&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;Arrays&lt;/span&gt;.asList(
                        &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; ChecksAnnotationBuilder()
                                .withPath(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Jenkinsfile&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                                .withLine(&lt;span style=&quot;color:#00D&quot;&gt;1&lt;/span&gt;)
                                .withAnnotationLevel(ChecksAnnotationLevel.NOTICE)
                                .withMessage(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;say hello to Jenkins&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                                .withStartColumn(&lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;)
                                .withEndColumn(&lt;span style=&quot;color:#00D&quot;&gt;20&lt;/span&gt;)
                                .withTitle(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Hello Jenkins&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                                .withRawDetails(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;a simple echo command&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                                .build(),
                        &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; ChecksAnnotationBuilder()
                                .withPath(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Jenkinsfile&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                                .withLine(&lt;span style=&quot;color:#00D&quot;&gt;2&lt;/span&gt;)
                                .withAnnotationLevel(ChecksAnnotationLevel.WARNING)
                                .withMessage(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;say hello to GitHub Checks API&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                                .withStartColumn(&lt;span style=&quot;color:#00D&quot;&gt;0&lt;/span&gt;)
                                .withEndColumn(&lt;span style=&quot;color:#00D&quot;&gt;30&lt;/span&gt;)
                                .withTitle(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Hello GitHub Checks API&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                                .withRawDetails(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;a simple echo command&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
                                .build()))
                .build())
        .withActions(&lt;span style=&quot;color:#0a8;font-weight:bold&quot;&gt;Collections&lt;/span&gt;.singletonList(
                &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; ChecksAction(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;formatting&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;format code&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;#0&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)))
        .build();

ChecksPublisher publisher = ChecksPublisherFactory.fromRun(run);
publisher.publish(details);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future-works&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#future-works&quot; /&gt;Future Works&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next step is integrating our API into &lt;a href=&quot;https://plugins.jenkins.io/warnings-ng/&quot;&gt;Warnings Next Generation Plugin&lt;/a&gt; and &lt;a href=&quot;https://plugins.jenkins.io/code-coverage-api/&quot;&gt;Code Coverage API Plugin&lt;/a&gt; consume our API.
After that, pipeline support will be added: users can publish checks directly in a pipeline script without requiring a consumer plugin that support the checks.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;resources&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#resources&quot; /&gt;Resources&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/checks-api-plugin&quot;&gt;GitHub Repository&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/github-checks/&quot;&gt;Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/jenkinsci/github-checks-api&quot;&gt;Gitter Channel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;references&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#references&quot; /&gt;References&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/developers/apps/creating-ci-tests-with-the-checks-api&quot;&gt;GitHub Doc: Creating CI tests with the Checks API&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/warnings-ng-plugin/blob/master/doc/Documentation.md#source-code-view&quot;&gt;Warnings Next Generation Plugin: Source Code View&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/09/git-performance-improvement-phase1/</id>
<title>Git Plugin Performance Improvement: Phase-1</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-07-09T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/09/git-performance-improvement-phase1/" />
<author>
<name>rishabhbudhouliya</name>
</author>
<category term="plugins"></category>
<category term="git"></category>
<category term="platform-sig"></category>
<category term="developer"></category>
<category term="performance"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
Git Plugin Performance Improvement is a Google Summer of Code 2020 project.
It aims to improve the performance of the git plugin, which provides fundamental git functionalities.


Internally, the plugin provides these functionalities using two implementations: command line git and JGit (pure java implementation).





CLI git is the default implementation for the plugin, a user can switch to JGit if needed


The project is divided into two parallel stages:




Stage 1: Create benchmarks which evaluate the execution time of a git operation provided by CLI git and JGit using JMH, a micro benchmarking test harness.


Stage 2: Implement the insights gained from the analysis into the...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/git-plugin-performance/&quot;&gt;Git Plugin Performance Improvement&lt;/a&gt; is a &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/#gsoc-2020&quot;&gt;Google Summer of Code 2020 project&lt;/a&gt;.
It aims to improve the performance of the git plugin, which provides fundamental git functionalities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Internally, the plugin provides these functionalities using two implementations: &lt;a href=&quot;https://www.git-scm.com/&quot;&gt;command line git&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/jgit/&quot;&gt;JGit (pure java implementation)&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-git-plugin-performance-improvement/git-intro.png&quot; alt=&quot;git-intro&quot; width=&quot;938&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;CLI git is the default implementation for the plugin, a user can switch to JGit if needed&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The project is divided into two parallel stages:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Stage 1&lt;/strong&gt;: Create benchmarks which evaluate the execution time of a git operation provided by CLI git and JGit using JMH, a micro benchmarking test harness.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Stage 2&lt;/strong&gt;: Implement the insights gained from the analysis into the plugin to improve the overall performance of the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The project also aims to fix any existing performance bottlenecks within the plugin as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;benchmarks&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#benchmarks&quot; /&gt;Benchmarks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The benchmarks are written using &lt;a href=&quot;https://openjdk.java.net/projects/code-tools/jmh/&quot;&gt;JMH&lt;/a&gt;. It was introduced in a &lt;a href=&quot;https://www.jenkins.io/blog/2019/06/21/performance-testing-jenkins/&quot;&gt;GSoC 2019 project&lt;/a&gt; to Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;JMH is provided within the plugin through the Jenkins Unit Test Harness POM dependency.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The JMH &lt;a href=&quot;https://github.com/jenkinsci/git-client-plugin/tree/master/src/test/java/jmh/benchmark&quot;&gt;benchmarks&lt;/a&gt; are created and run within the git client plugin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;During phase-1, we have created benchmarks for two operations: &quot;git fetch&quot; and &quot;git ls-remote&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;results-and-analysis&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#results-and-analysis&quot; /&gt;Results and Analysis&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The benchmark analysis for git fetch:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;git-fetch-results&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#git-fetch-results&quot; /&gt;Git fetch results&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/07-git-plugin-performance-improvement/git-fetch-results.png&quot; alt=&quot;git-fetch-results&quot; width=&quot;938&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The performance of git fetch (average execution time/op) is strongly correlated to the size of a repository&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There exists an inflection point on the scale of repository size after which the nature of JGit performance changes (it starts to degrade)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After running multiple benchmarks, it is safe to say that for a large sized repository &lt;strong&gt;CLI-git&lt;/strong&gt; would be a better choice of implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can use this insight to implement a feature which avoids JGit when it comes to large repositories.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please refer to &lt;a href=&quot;https://github.com/jenkinsci/git-client-plugin/pull/521&quot;&gt;PR-521&lt;/a&gt; for an elaborate explanation on these results&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Repository size means &lt;code&gt;du -h .git&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixing-redundant-fetch-issue&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixing-redundant-fetch-issue&quot; /&gt;Fixing redundant fetch issue&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The git plugin performs two fetch operations instead of one while performing a fresh checkout of a remote git repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To &lt;a href=&quot;https://github.com/jenkinsci/git-plugin/pull/904&quot;&gt;fix&lt;/a&gt; this issue, we had to safely remove the second fetch keeping multiple use-cases in mind. The fix itself was not difficult to code, but to do that safely without breaking any existing use-case was a challenging task.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;further-plan&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#further-plan&quot; /&gt;Further Plan&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After consolidating a benchmarking strategy during Phase 1, the next steps will be:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Provide functionality to the git plugin, which enables it to estimate the size of the repository without cloning it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Broaden the scope of benchmarking strategy&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Consider parameters like number of branches, references and commit history to find a relation with the performance of a git operation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The git plugin depends on other plugins like Credentials which might require benchmarking the plugin itself and the effects of these external dependencies on the plugin’s performance&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Focus on other use-cases of the plugin&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For phase-1, I focused on the checkout step and the operations involved with it&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For the next phase, the focus will shift to other areas like Multibranch pipelines or Organisation Folders&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-can-you-help&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#how-can-you-help&quot; /&gt;How can you help?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have reached this far of the blog, you might be interested in the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To help, you can&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Review the benchmarks in the &lt;a href=&quot;https://github.com/jenkinsci/git-client-plugin/tree/master/src/test/java/jmh/benchmark&quot;&gt;benchmarks module&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Analyse the benchmarks results available on &lt;a href=&quot;https://ci.jenkins.io/job/Plugins/job/git-client-plugin/job/master/&quot;&gt;ci.jenkins.io&lt;/a&gt; [soon]&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Come visit our Gitter channel: &lt;a href=&quot;https://gitter.im/jenkinsci/git-plugin&quot; class=&quot;bare&quot;&gt;https://gitter.im/jenkinsci/git-plugin&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/08/winsw-yaml-support/</id>
<title>Windows Service Wrapper : YAML Configuration Support - GSoC Phase - 01 Updates</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-07-08T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/07/08/winsw-yaml-support/" />
<author>
<name>buddhikac96</name>
</author>
<category term="winsw"></category>
<category term="windows"></category>
<category term="jenkins"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
Hello all, I am Buddhika Chathuranga from Sri Lanka and I am a final year undergraduate at the Faculty of IT, University of Moratuwa. I am participating in GSoC 2020 with Jenkins.
I am working on the Windows Service Wrapper Project.
So the Coding Phase 01 of GSoC 2020 is now over and this blog post describes what I have done so far.


Windows Service Wrapper is an executable, which we can use to run applications as Windows Services on Windows machines, which has almost one million downloads.
In Jenkins, we use Windows service wrapper to run Jenkins server and agents as Windows services...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hello all, I am Buddhika Chathuranga from Sri Lanka and I am a final year undergraduate at the Faculty of IT, University of Moratuwa. I am participating in GSoC 2020 with Jenkins.
I am working on the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/winsw-yaml-configs/&quot;&gt;Windows Service Wrapper Project&lt;/a&gt;.
So the Coding Phase 01 of GSoC 2020 is now over and this blog post describes what I have done so far.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Windows Service Wrapper is an executable, which we can use to run applications as Windows Services on Windows machines, which has almost one million downloads.
In Jenkins, we use Windows service wrapper to run Jenkins server and agents as Windows services to gain more robustness.
This feature is bundled into Jenkins’s core. Currently, the Windows Service wrapper is configured by an XML file.
However, there is a limited number of configuration checks and there is no XML schema.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;XML is not such a human-friendly way to do that. It is quite verbose and not easy to identify the schema without some effort.
Usually, users misconfigure the service wrapper. This is a sample XML configuration file that we can use to provide configurations to Windows Service Wrapper.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;sample-xml-configuration-file&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sample-xml-configuration-file&quot; /&gt;Sample XML Configuration File&lt;/h3&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;service&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;jenkins&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Jenkins&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;This service runs Jenkins automation server.&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;env&lt;/span&gt; &lt;span style=&quot;color:#b48&quot;&gt;name&lt;/span&gt;=&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;JENKINS_HOME&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#b48&quot;&gt;value&lt;/span&gt;=&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;%LocalAppData%\Jenkins.jenkins&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;C:\Program Files\Java\jdk1.8.0_201\bin\java.exe&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;-Xrs -Xmx256m -Dhudson.lifecycle=hudson.lifecycle.WindowsServiceLifecycle
    -jar &quot;C:\Program Files\Jenkins\jenkins.war&quot; --httpPort=8081 --webroot=&quot;%LocalAppData%\Jenkinswar&quot;&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;logmode&amp;gt;&lt;/span&gt;rotate&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/logmode&amp;gt;&lt;/span&gt;

    &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;onfailure&lt;/span&gt; &lt;span style=&quot;color:#b48&quot;&gt;action&lt;/span&gt;=&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;restart&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;extensions&amp;gt;&lt;/span&gt;
        &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;extension&lt;/span&gt; &lt;span style=&quot;color:#b48&quot;&gt;enabled&lt;/span&gt;=&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#b48&quot;&gt;className&lt;/span&gt;=&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;winsw.Plugins.RunawayProcessKiller.RunawayProcessKillerExtension&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#b48&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;killOnStartup&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;pidfile&amp;gt;&lt;/span&gt;%LocalAppData%\Jenkinsjenkins.pid&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/pidfile&amp;gt;&lt;/span&gt;
        &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;stopTimeout&amp;gt;&lt;/span&gt;10000&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/stopTimeout&amp;gt;&lt;/span&gt;
        &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;stopParentFirst&amp;gt;&lt;/span&gt;false&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/stopParentFirst&amp;gt;&lt;/span&gt;
        &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/extension&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/extensions&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;/service&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The usage of YAML could simplify configuration management in Jenkins, especially when automated and configuration management tools are used.
So what we are doing under GSoC - 2020 is to update the Windows Service Wrapper to support YAML configurations.
After finishing this project, users will be able to provide configurations to the Windows Service Wrapper as a YAML file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is a sample YAML configuration file for Windows Service Wrapper and you can see it is less verbose than XML or JSON and much more human friendly.
Users can read and edit this without a big effort.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;sample-yaml-configuration-file&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sample-yaml-configuration-file&quot; /&gt;Sample YAML Configuration File&lt;/h3&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight nowrap&quot;&gt;&lt;code data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#606&quot;&gt;id&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;jenkins&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;name&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;Jenkins&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;description&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;This service runs Jenkins automation server.&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;env&lt;/span&gt;:
    &lt;span style=&quot;color:#606&quot;&gt;_name&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;JENKINS_HOME&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#606&quot;&gt;_value&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;&#39;%LocalAppData%\Jenkins.jenkins&#39;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;executable&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;&#39;C:\Program Files\Java\jdk1.8.0_201\bin\java.exe&#39;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;arguments&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;gt;-&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;
    -Xrs -Xmx256m -Dhudson.lifecycle=hudson.lifecycle.WindowsServiceLifecycle
    -jar &quot;C:\Program Files\Jenkins\jenkins.war&quot; --httpPort=8081 --webroot=&quot;%LocalAppData%\Jenkinswar&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;logmode&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;rotate&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;onfailure&lt;/span&gt;:
    &lt;span style=&quot;color:#606&quot;&gt;_action&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;restart&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#606&quot;&gt;extensions&lt;/span&gt;:
    -
        &lt;span style=&quot;color:#606&quot;&gt;pidfile&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;&#39;%LocalAppData%\Jenkinsjenkins.pid&#39;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#606&quot;&gt;stopTimeout&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;&#39;10000&#39;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#606&quot;&gt;stopParentFirst&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;&#39;false&#39;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#606&quot;&gt;_enabled&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;&#39;true&#39;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#606&quot;&gt;_className&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;winsw.Plugins.RunawayProcessKiller.RunawayProcessKillerExtension&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#606&quot;&gt;_id&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#D20&quot;&gt;killOnStartup&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;advantages-of-yaml-as-a-configuration-file&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#advantages-of-yaml-as-a-configuration-file&quot; /&gt;Advantages of YAML as a configuration file&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It is less verbose and much more human friendly than XML.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since YAML is not using extra delimiters, it is lightweight.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nowadays YAML has become more popular among configuration management tools.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;project-scope&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#project-scope&quot; /&gt;Project Scope&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During this project, I will add the following features to Windows Service Wrapper.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;YAML Configuration support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;YAML Schema validation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New CLI for the Windows Service Wrapper&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for XML Schema validation via XML Schema Definition (XSD)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;phase-01-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#phase-01-updates&quot; /&gt;Phase 01 Updates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In GSoC - 2020 phase 01, I have done the following updates to the Windows Service Wrapper.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Project Structure overview document. &lt;a href=&quot;https://github.com/winsw/winsw/blob/master/doc/developer/projectStructure.md&quot;&gt;(Published)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;YAML configurations support (Not released yet) - &lt;a href=&quot;https://github.com/winsw/winsw/pull/543&quot;&gt;Pull Request&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New CLI (Not released yet) - &lt;a href=&quot;https://github.com/winsw/winsw/pull/565&quot;&gt;Pull Request&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;XML Schema validation (Not released yet) - &lt;a href=&quot;https://github.com/winsw/winsw/pull/460&quot;&gt;Pull Request&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube.com/embed/9qyo1f2rKQw?rel=0&amp;amp;start=1620&amp;amp;end=3040&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can find Phase 01 Demo slides in this &lt;a href=&quot;https://docs.google.com/presentation/d/1E_Y0OJJzNn3gAol-cM4jN6dWrD-EbP6Eatis8olRjzQ/edit?usp=sharing&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Below you can find more details about the deliverables listed above.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;project-structure-overview&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#project-structure-overview&quot; /&gt;Project Structure overview&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The project structure overview document describes how files and directories are organized in the Windows Service Wrapper project.
It will help contributors as well as users, to understand the codebase easily.
Also, it helps me a lot to understand the codebase. You can find the document from the given link.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;yaml-configurations-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#yaml-configurations-support&quot; /&gt;YAML configurations support&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As I explained before, in this project, configurations will be provided as a YAML file.
I used YamlDotNet library which has more than 2.2k stars on GitHub, to deserialize the YAML file into an Object graph.
In this YAML file, users can specify configurations in a more structured way than in XML configuration files.
As an example, now users can specify all the log related configurations under the log config.
Users can specify all service account related configurations under serviceaccount config etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the moment, I am working on a design document for YAML configuration support. I will add it to the GitHub Issue once ready&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;new-cli&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-cli&quot; /&gt;New CLI&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Before moving into Phase 01 updates, it’s better to explain why we needed a new CLI for Windows Service Wrapper.
In the early phases of Windows Service Wrapper, we will keep the XML configuration support as well.
So we should allow users to specify the configurations file separately.
The current approach is, configurations file should be in the same directory, where Windows Service Wrapper executable exists and the file name of the XML file should be the same as the Windows Service Wrapper executable file name.
Also, users should be able to redirect logs if they need to and they should be allowed to elevate command prompt using Windows Service Wrapper.
Also, we thought that it’s better to allow users to skip schema validation if they needed. So we decided to move into a new CLI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As I explained, after releasing this, users will have options in addition to commands.
It will make the WinSW CLI more flexible so that we can easily extend it later. These are the options users are allowed to use.
These options are available with all the commands except help and version&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;--redirect / -r [string]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Users can specify the redirect path for the logs if needed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not required | Default value is null&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;--elevated / -e [boolean]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Elevate the command prompt before executing the command&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not required | Default value is false&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;--configFile / -c [string]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Users can specify the configurations file as a path&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not Required | Default value is null&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;--skipConfigValidation / -s [boolean]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Users can skip schema validation for configurations file if needed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not required | Default value is true&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;--help / -h&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;User can find what options are available with a particular command with this option&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This option is available with the install command&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;--profile / -f [boolean]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If this option is true, then users can provide a service account for installation explicitly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not required | Default value is false&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We used commandlineparser/commandline library to parse the command line argument which has more than 2k stars in GitHub. At a glance, the library is compatible with .NET Framework 4.0+, Mono 2.1+ Profile, .NET Standard, and .NET Core.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;xml-schema-validation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#xml-schema-validation&quot; /&gt;XML Schema validation&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As I mentioned before, there was no schema validation for XML in Windows Service Wrapper.
Hence, I was working on schema validation for XML. I use XSD to validate XML files. The XSD file will be shipped as an embedded resource with the executable.
You can find the XSD file in my pull request.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#future-updates&quot; /&gt;Future updates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the next phase, for GSoC 2020 the listed deliverables features will be released and the YAML schema validation feature will be added.
Also, we hope to publish a design document for the new features, which will help contributors.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-to-contribute&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-contribute&quot; /&gt;How to contribute&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can find the GitHub repository in this link. Issues and Pull requests are always welcome.
Also, you can communicate with us in the WinSW Gitter channel, which is a great way to get in touch and there are project sync up meetings every Tuesday at 13:30 UTC on the Gitter channel.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;some-useful-links&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#some-useful-links&quot; /&gt;Some useful links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/winsw-yaml-configs&quot;&gt;Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/winsw/winsw&quot;&gt;Project Repository&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/winsw/winsw&quot;&gt;Gitter Channel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/aaubry/YamlDotNet&quot;&gt;YamlDotNet library&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/commandlineparser/commandline&quot;&gt;Command Line Parser library&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/30/machine-learning-plugin-coding-phase1/</id>
<title>Machine Learning Plugin project - coding phase 1 blog post</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-06-30T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/30/machine-learning-plugin-coding-phase1/" />
<author>
<name>loghijiaha</name>
</author>
<category term="machinelearning"></category>
<category term="datascience"></category>
<category term="plugins"></category>
<category term="communitybonding"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
Welcome back !


This blog post is briefing my coding phase 1 in Jenkins Machine Learning Plugin for this GSoC 2020.


After a fresh introduction of community bonding, On June 1st, coding of GSoC had started officially with phase 1. At this point, every GSoC student should be expected to have a rigid plan with their entire project. With the guidance of mentors I was able to complete a design document and timeline which can be slightly adjustable during the coding. The coding phase was more about coding and discussion.


Quick review







Pull Requests
21


Jira Issues
11


Major Tasks
3


Completed
3


In progress
0





Week 1

I have to ensure that I have...
</summary>
<content type="html">
&lt;div class=&quot;imageblock text-center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/gsoc/jenkins-gsoc-logo_small.png&quot; alt=&quot;jenkins gsoc logo small&quot;&gt;
&lt;/img&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Welcome back !&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This blog post is briefing my coding phase 1 in Jenkins &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/machine-learning/&quot;&gt;Machine Learning Plugin&lt;/a&gt; for this GSoC 2020.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After a fresh introduction of community bonding, On June 1st, coding of GSoC had started officially with phase 1. At this point, every GSoC student should be expected to have a rigid plan with their entire project. With the guidance of mentors I was able to complete a design document and timeline which can be slightly adjustable during the coding. The coding phase was more about coding and discussion.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;quick-review&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#quick-review&quot; /&gt;Quick review&lt;/h3&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width: 25%;&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 83.3333%;&quot;&gt;
&lt;col style=&quot;width: 16.6667%;&quot;&gt;
&lt;/col&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Pull Requests&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;21&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Jira Issues&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;11&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Major Tasks&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;3&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Completed&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;3&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;In progress&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;0&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/col&gt;
&lt;/colgroup&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;week-1&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#week-1&quot; /&gt;Week 1&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have to ensure that I have a solid architecture for implementing the core of this plugin such that perhaps I or future community will be able to develop R and Julia kernels for this plugin. Factory method design patterns are suitable when users need different types of products ( Python, R and Julia) without knowing much about the internal infrastructure ( Manager of these interpreters ).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All the base classes were implemented this week.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Design the Kernel connectors&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initiate the interpreter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Close the connection&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add simple tests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update pom.xml&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More than these changes, repo was updated with pull request template and licence header. Readme was extended a little at the end of the week.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;issues-and-challenges&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#issues-and-challenges&quot; /&gt;Issues and Challenges&lt;/h4&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Git rebase and squash&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tests invokes ipython client in the server failed during the CI build&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;week-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#week-2&quot; /&gt;Week 2&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With the help of a design document, I had a plan to do the configurations globally and using the Abstract Folder property I could save the configuration and retrieve for the job configuartion. I used to reference some other well developed plugin for the structure of code. That helped me a lot while I was coding. Our first official contributor has popped out his pull request.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Form validations and helper html will be a great help in the user point of view as well as developers. A minor bug was fixed with the guidance of mentors by writing tests with ‘Jenkins WebClient`. Until the end of the week, builder class of the plugin has been implemented with lots of research and discussion. Finally,  Test connection was added to the global configuration page to start the connection and test it. A single issue that blocked me using py4j authentication about zeppelin-python was reported in Jira.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Server Configuration&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jenkinsci/machine-learning-plugin/master/docs/images/global_config.png&quot; alt=&quot;global_config&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;issues-and-challenges-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#issues-and-challenges-2&quot; /&gt;Issues and challenges&lt;/h4&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Backend depends on Apache zeppelin-python API to connect IPython&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find relevant extension points to extend the plugin&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;week-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#week-3&quot; /&gt;Week 3&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Earlier in this week, we were trying to merge our IPython builder PR without any memory leaks or bugs that will cause the system to be devastating while running this plugin. Later, this whole week I was implementing a file parser that could copy the necessary files and had the ability to accomplish the file conversion.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;supported-file-types&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#supported-file-types&quot; /&gt;Supported file types&lt;/h4&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python (.py)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSON (Zeppelin notebooks format)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;IPython builder was able to run Jupyter Notebooks and Zeppelin formatted JSON files at the end of the 3rd week. Minor issues were fixed in the code. We used ANSI color plugin to fix the abnormal view of error messages produced by the ipython kernel.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Copying and converting Jupyter Notebook&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jenkinsci/machine-learning-plugin/master/docs/images/file_parser.png&quot; alt=&quot;file_convert&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;issues-and-challenges-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#issues-and-challenges-3&quot; /&gt;Issues and Challenges&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Python error messages could not be displayed in rich format
If a job is running at user level, but if the python code access file/file path which is not authorized to the user, it returns a permission denied message.
While running on agent, notebook has to be written/copied to agent workspace
Artifacts should be maintained/reachable from controller after build.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;week-4&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#week-4&quot; /&gt;Week 4&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As all the major tasks has done, the demo preparation and plan for a experimental release was carried during the last week. There were lots of research on how to connect to a existing kernel in remote. Demo and presentation were prepared along the week.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;issues-and-challenges-4&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#issues-and-challenges-4&quot; /&gt;Issues and Challenges&lt;/h4&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Releasing the first version was bit late&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;knowledge-transfer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#knowledge-transfer&quot; /&gt;Knowledge transfer&lt;/h3&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;how-to-debug-the-code-through-intellij&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-debug-the-code-through-intellij&quot; /&gt;How to debug the code through IntelliJ&lt;/h4&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Edit configuration → Add new Configuration → Maven&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Command line → type &lt;code&gt;hpi:run&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the debug icon on the toolbar or go to &lt;code&gt;Run&lt;/code&gt; menu then &lt;code&gt;Debug&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;how-to-setup-to-test-the-plugin&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-setup-to-test-the-plugin&quot; /&gt;How to setup to test the plugin&lt;/h4&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Setup JDK 8 and Maven 3.5.*&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a directory &lt;code&gt;$ mkdir machine-learning-plugin&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a virtual environment &lt;code&gt;$ virtualenv venv&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Activate your virtual environment $ source venv/bin/activate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;$ which python&lt;/code&gt; to ensure your python path&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$ git clone &lt;a href=&quot;https://github.com/jenkinsci/machine-learning-plugin.git&quot; class=&quot;bare&quot;&gt;https://github.com/jenkinsci/machine-learning-plugin.git&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;$ mvn clean install&lt;/code&gt; from the machine-learning-plugin directory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;$ mvn hpi:run&lt;/code&gt; to start Jenkins with the plugin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up the builder with localhost and other parameters&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a job&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Write python code like print(“plugin works”)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build the job&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;issues-and-bugs&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#issues-and-bugs&quot; /&gt;Issues and bugs&lt;/h4&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62528&quot;&gt;JENKINS-62528&lt;/a&gt; Issues on Jenkins build in the plugin repository&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-&quot;&gt;JENKINS-62621&lt;/a&gt; Global configuration for IPython servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62649&quot;&gt;JENKINS-62649&lt;/a&gt; Implementation of IPython Builder&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62711&quot;&gt;JENKINS-62711&lt;/a&gt; File parser to copy source files to workspace&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62733&quot;&gt;JENKINS-62733&lt;/a&gt; Python errors are not displayed properly in console log&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62735&quot;&gt;JENKINS-62735&lt;/a&gt; Send/Receive necessary files from controller/agent to agent/controller&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62593&quot;&gt;JENKINS-62593&lt;/a&gt; Improve the documentation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62742&quot;&gt;JENKINS-62742&lt;/a&gt; Increase Test coverage&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;resources-and-links&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#resources-and-links&quot; /&gt;Resources and Links&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/machine-learning-plugin.git&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/gsoc/2020/projects/machine-learning/&quot;&gt;Project page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/10FjktNmWpdjgbGg3tEViadV_JNevn9W0sMOu-bF8m-o/edit?usp=sharing&quot;&gt;Design document&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/27/external-fingerprint-storage/</id>
<title>External Fingerprint Storage Phase-1 Updates</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-06-27T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/27/external-fingerprint-storage/" />
<author>
<name>stellargo</name>
</author>
<category term="plugins"></category>
<category term="fingerprint"></category>
<category term="cloud-native"></category>
<category term="external-storage"></category>
<category term="developer"></category>
<category term="redis"></category>
<category term="gsoc"></category>
<category term="gsoc2020"></category>
<summary>
Externalizing fingerprint storage for Jenkins is a  Google Summer of Code 2020 project.
We are working on building a pluggable storage engine for fingerprints (see JEP-226).


File fingerprinting is a way to track which version of a file is being used by a job/build, making dependency tracking easy. The fingerprint engine of Jenkins can track usages of artifacts, credentials, files, etc. within the system. Currently, it does this by maintaining a local XML-based database which leads to dependence on the physical disk of the Jenkins controller.


Allowing fingerprint storage to be moved to external storages decreases the dependence of Jenkins instances on...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Externalizing fingerprint storage for Jenkins is a  Google Summer of Code 2020 project.
We are working on building a pluggable storage engine for fingerprints (see &lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/226/README.adoc&quot;&gt;JEP-226&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;File fingerprinting is a way to track which version of a file is being used by a job/build, making dependency tracking easy. The fingerprint engine of Jenkins can track usages of artifacts, credentials, files, etc. within the system. Currently, it does this by maintaining a local XML-based database which leads to dependence on the physical disk of the Jenkins controller.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Allowing fingerprint storage to be moved to external storages decreases the dependence of Jenkins instances on the physical disk space and also allows for tracking the flow of fingerprints across instances of Jenkins connected to the same external storage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Advantages of using external storage drivers:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Remove dependence on Jenkins controller disk storage&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can configure pay-as-you-use cloud storages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easy Backup Management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Better Reliability and Availability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fingerprints can be tracked across Jenkins instances&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Along with this API, we are also working on a &lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin&quot;&gt;reference implementation&lt;/a&gt; in the form of a plugin, powered by Redis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As phase 1 of this project comes to an end, this blog post serves as a summary of the progress we made to the entire Jenkins community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;current-state&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#current-state&quot; /&gt;Current State&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/jenkinsci/jenkins/pull/4731&quot;&gt;new API&lt;/a&gt; introduced in Jenkins core is under review. Once merged, it will offer developers to extend it to build external fingerprint storage plugins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin&quot;&gt;Redis Fingerprint Storage Plugin&lt;/a&gt; is alpha release ready. We would immensely appreciate any feedback.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;External Fingerprint Storage Demo&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;800&quot; height=&quot;420&quot; src=&quot;https://www.youtube.com/embed/yzd-y5ByXg8?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1 youtube com/watch?v=yzd-y5ByXg8&amp;amp;feature=youtu be[Demo]&quot;&gt;
&lt;h2 id=&quot;introducing-the-new-api-for-plugin-developers&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#introducing-the-new-api-for-plugin-developers&quot; /&gt;Introducing the new API for plugin developers&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With &lt;a href=&quot;https://github.com/jenkinsci/jenkins/pull/4731&quot;&gt;PR-4731&lt;/a&gt;, we introduce a new fingerprint storage API, allowing configuring custom storage engines.
We exposed the following methods in the new &lt;code&gt;FingerprintStorage&lt;/code&gt; class:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;void save()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Saves the given Fingerprint in the storage.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Fingerprint load(String id)&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Returns the Fingerprint with the given unique ID. The unique ID for a fingerprint is defined by Fingerprint#getHashString().&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;void delete(String id)&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deletes the Fingerprint with the given unique ID.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;boolean isReady()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Returns true if there is some data in the fingerprint database corresponding to the particular Jenkins instance.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;introducing-redis-fingerprint-storage-plugin&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#introducing-redis-fingerprint-storage-plugin&quot; /&gt;Introducing Redis Fingerprint Storage Plugin&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin&quot;&gt;Redis Fingerprint Storage Plugin&lt;/a&gt; uses the new External Fingerprint Storage API to store the fingerprints in a Redis instance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#installation&quot; /&gt;Installation:&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The alpha release (version &lt;code&gt;0.1-alpha-1&lt;/code&gt;) for the plugin was drafted, and can be installed using the &lt;a href=&quot;https://www.jenkins.io/doc/developer/publishing/releasing-experimental-updates/&quot;&gt;experimental update center&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Follow along the following steps after running Jenkins to download and install the plugin:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;code&gt;Manage Jenkins&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;code&gt;Manage Plugins&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;code&gt;Advanced&lt;/code&gt; tab&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure the Update Site URL as: &lt;a href=&quot;https://updates.jenkins.io/experimental/update-center.json&quot; class=&quot;bare&quot;&gt;https://updates.jenkins.io/experimental/update-center.json&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;Submit&lt;/code&gt;, and then press the &lt;code&gt;Check Now&lt;/code&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;code&gt;Available&lt;/code&gt; tab.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Search for &lt;code&gt;Redis Fingerprint Storage Plugin&lt;/code&gt; and check the box along it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;Install without restart&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The plugin should now be installed on your system.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;usage&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#usage&quot; /&gt;Usage&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once the plugin has been installed, you can configure the Redis server details by following the steps below:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;code&gt;Manage Jenkins&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;code&gt;Configure System&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scroll to the section &lt;code&gt;Redis Fingerprint Storage Configuration&lt;/code&gt; and fill in the required details:&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/06-external-fingerprint-storage/configure_redis.png&quot; alt=&quot;Configure Redis&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Host&lt;/code&gt; - Enter hostname where Redis is running&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Port&lt;/code&gt; - Specify the port on which Redis is running&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SSL&lt;/code&gt; - Click if SSL is enabled&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Database&lt;/code&gt; - Redis supports integer indexed databases, which can be specified here.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Connection Timeout&lt;/code&gt; - Set the connection timeout duration in milliseconds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Socked Timeout&lt;/code&gt; - Set the socket timeout duration in milliseconds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Credentials&lt;/code&gt; - Configure authentication using username and password to the Redis instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Enabled&lt;/code&gt; - Check this to enable the plugin (Note: This is likely to be removed very soon, and will be enabled by default.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;li&gt;
&lt;p&gt;Use the &lt;code&gt;Test Redis Connection&lt;/code&gt; to verify that the details are correct and Jenkins is able to connect to the Redis instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Press the &lt;code&gt;Save&lt;/code&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, all the fingerprints produced by this Jenkins instance should be saved in the configured Redis server!&lt;/p&gt;
&lt;/li&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future-work&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#future-work&quot; /&gt;Future Work&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some of the topics we aim to tackle in the next phases include extending the API, fingerprint cleanup, migrations (internal→external, external→internal, external→external), tracing, ORM, implementing the saveable listener, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#acknowledgements&quot; /&gt;Acknowledgements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Redis Fingerprint Storage plugin is built and maintained by the Google Summer of Code (GSoC) Team for
&lt;a href=&quot;https://www.jenkins.io/projects/gsoc/2020/projects/external-fingerprint-storage/&quot;&gt;External Fingerprint Storage for Jenkins&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Special thanks to &lt;a href=&quot;https://github.com/oleg-nenashev&quot;&gt;Oleg Nenashev&lt;/a&gt;, &lt;a href=&quot;https://github.com/afalko&quot;&gt;Andrey Falko&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikecirioli&quot;&gt;Mike Cirioli&lt;/a&gt;, &lt;a href=&quot;https://github.com/jglick&quot;&gt;Jesse Glick&lt;/a&gt;, and the entire Jenkins community for all the contribution to this project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;reaching-out&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#reaching-out&quot; /&gt;Reaching Out&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to reach out to us for any questions, feedback, etc. on the project’s &lt;a href=&quot;https://gitter.im/jenkinsci/external-fingerprint-storage&quot;&gt;Gitter Channel&lt;/a&gt; or the &lt;a href=&quot;mailto:jenkinsci-dev@googlegroups.com&quot;&gt;Jenkins Developer Mailing list&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We use Jenkins &lt;a href=&quot;https://issues.jenkins.io/&quot;&gt;Jira&lt;/a&gt; to track issues.
Feel free to file issues under &lt;code&gt;redis-fingerprint-storage-plugin&lt;/code&gt; component.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;other-links&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#other-links&quot; /&gt;Other Links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=yzd-y5ByXg8&amp;amp;feature=youtu.be&quot;&gt;Phase 1 demo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1hrdOYKXBWyQG-k53KUe6zFXJ3KWEK4t7smdtpNtp1Wo/edit#slide=id.g8061b508ca_0_149&quot;&gt;Presentation slides&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/redis-fingerprint-storage-plugin&quot;&gt;Redis Fingerprint Storage Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62344&quot;&gt;Issue Tracker for Phase 1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/jep/blob/master/jep/226/README.adoc&quot;&gt;JEP-226&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/jenkinsci/external-fingerprint-storage&quot;&gt;Gitter Channel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jenkins.io/projects/gsoc/2020/projects/external-fingerprint-storage/&quot;&gt;Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/26/ui-ux-hackfest-ui-track/</id>
<title>UI/UX Hackfest: Jenkins User Interface track highlights</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-06-26T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/26/ui-ux-hackfest-ui-track/" />
<category term="community"></category>
<category term="event"></category>
<category term="ui"></category>
<category term="outreach-programs"></category>
<category term="jenkins-is-the-way"></category>
<summary>
In this article, I would like to share some highlights from the User Interface track of the
Jenkins UI/UX Hackfest we held on May 25..29.
This blog post has been slightly delayed by the infrastructure issues we had in the project,
but, as for improving the Jenkins UI, it is better late than never.
Key highlights from the event:




We delivered a preview of Jenkins read-only configuration.
During the hackfest we discovered and fixed many compatibility issues.


We created a new Dark Theme for Jenkins.
We also improved theming support in the core, and fixed compatibility in many plugins.


We contributed to the Jenkins UI accessibility, including UX testing...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article, I would like to share some highlights from the User Interface track of the
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/events/online-hackfest/2020-uiux/&quot;&gt;Jenkins UI/UX Hackfest&lt;/a&gt; we held on May 25..29.
This blog post has been slightly delayed by the infrastructure issues we had in the project,
but, as for improving the Jenkins UI, it is better late than never.
Key highlights from the event:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We delivered a preview of &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/05/25/read-only-jenkins-announcement/&quot;&gt;Jenkins read-only configuration&lt;/a&gt;.
During the hackfest we discovered and fixed many compatibility issues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We created a new &lt;a href=&quot;https://github.com/jenkinsci/dark-theme-plugin&quot;&gt;Dark Theme&lt;/a&gt; for Jenkins.
We also improved theming support in the core, and fixed compatibility in many plugins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We contributed to the Jenkins UI accessibility, including UX testing and fixing the reported issues.
&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62437&quot;&gt;JENKINS-62437: Configuration UI: Tables to divs migration&lt;/a&gt; testing was the dominant story there.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We worked on a New Script Security approvals management UI&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We had &lt;a href=&quot;https://github.com/jenkinsci/ui-ux-hackfest-2020#contributors&quot;&gt;54 contributors&lt;/a&gt; at the hackfest.
22 of them have contributed to the user interface track as committers, testers and reviewers:
&lt;a href=&quot;https://github.com/timja&quot;&gt;Tim Jacomb&lt;/a&gt;,
&lt;a href=&quot;https://github.com/uhafner&quot;&gt;Ullrich Hafner&lt;/a&gt;,
&lt;a href=&quot;https://github.com/res0nance&quot;&gt;Raihaan Shouhell&lt;/a&gt;,
&lt;a href=&quot;https://github.com/stellargo&quot;&gt;Sumit Sarin&lt;/a&gt;,
&lt;a href=&quot;https://github.com/daniel-beck&quot;&gt;Daniel Beck&lt;/a&gt;,
&lt;a href=&quot;https://github.com/romenrg&quot;&gt;Romén Rodríguez-Gil&lt;/a&gt;,
&lt;a href=&quot;https://github.com/wadeck&quot;&gt;wadeck Follonier&lt;/a&gt;,
&lt;a href=&quot;https://github.com/megathaum&quot;&gt;Runxia Ye&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fqueiruga&quot;&gt;Félix Queiruga&lt;/a&gt;,
&lt;a href=&quot;https://github.com/aytuncbeken&quot;&gt;Aytunc Beken&lt;/a&gt;,
&lt;a href=&quot;https://github.com/95jonpet&quot;&gt;Peter Jonsson&lt;/a&gt;,
&lt;a href=&quot;https://github.com/amuniz&quot;&gt;Antonio Muniz&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ksenia-nenasheva&quot;&gt;Kseniia Nenasheva&lt;/a&gt;,
&lt;a href=&quot;https://github.com/sladyn98&quot;&gt;Sladyn Nuner&lt;/a&gt;,
&lt;a href=&quot;https://github.com/AbhyudayaSharma&quot;&gt;Abhyudaya Sharma&lt;/a&gt;,
&lt;a href=&quot;https://github.com/oleg-nenashev&quot;&gt;Oleg Nenashev&lt;/a&gt;,
&lt;a href=&quot;https://github.com/nimishbongale&quot;&gt;Nimish Bongale&lt;/a&gt;,
&lt;a href=&quot;https://github.com/EstherAF&quot;&gt;Esther Álvarez Feijoo&lt;/a&gt;,
&lt;a href=&quot;https://github.com/duemir&quot;&gt;Denys Digtiar&lt;/a&gt;,
&lt;a href=&quot;https://github.com/skundrik&quot;&gt;Slavo&lt;/a&gt;,
&lt;a href=&quot;https://github.com/bitwiseman&quot;&gt;Liam Newman&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/halkeye&quot;&gt;Gavin Mogan&lt;/a&gt;.
Thanks to all contributors!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See the blog post below to know more about these and other user interface improvements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;read-only-jenkins-configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#read-only-jenkins-configuration&quot; /&gt;Read-only Jenkins Configuration&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Quick access:&lt;/em&gt;
&lt;a href=&quot;http://www.youtube.com/watch?v=Wy8PdkS0kjQ&quot;&gt;demo&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/05/25/read-only-jenkins-announcement/&quot;&gt;feature preview announcement&lt;/a&gt;,
&lt;a href=&quot;https://github.com/jenkinsci/ui-ux-hackfest-2020/tree/master/presentations/05-system-read&quot;&gt;presentation materials&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A read-only view of Jenkins configurations, jobs and agents is important to &lt;a href=&quot;https://plugins.jenkins.io/configuration-as-code&quot;&gt;Jenkins Configuration-as-Code&lt;/a&gt; users.
It would allow them to access configuration and diagnostics information about their Jenkins instances while having no opportunity to occasionally change it.
This story is a part of the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/project/roadmap&quot;&gt;Jenkins roadmap&lt;/a&gt;,
and it was featured as an area for contribution during the UI/UX hackfest.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;On May 25th we have released a preview for Read-only Jenkins Configuration.
Read the announcement by Tim Jacomb &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/05/25/read-only-jenkins-announcement/&quot;&gt;in this blogpost&lt;/a&gt;.
During the hackfest we kept testing the change and fixing compatibility in the Jenkins plugins,
including the Cloud Stats Plugin, Role Strategy Plugin, Simple Disk Usage Plugin and others.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020/05-read-only-jenkins-announcement/build-discarder-read.png&quot; alt=&quot;Read-only build discarder configuration&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We would appreciate feedback and testing from the Jenkins users!
See the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/05/25/read-only-jenkins-announcement/&quot;&gt;blogpost&lt;/a&gt; for the guidelines.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;dark-theme&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#dark-theme&quot; /&gt;Dark Theme&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Quick access:&lt;/em&gt;
&lt;a href=&quot;https://youtu.be/0ZLAOCs3XwU?t=958&quot;&gt;demo&lt;/a&gt;,
&lt;a href=&quot;https://github.com/jenkinsci/dark-theme-plugin&quot;&gt;project repository&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dark user interface themes are very popular among developers: in IDE, communication tools, etc.
And there is an interest to have one for Jenkins.
There were a few of implementations before the hackfest, most notably &lt;a href=&quot;https://github.com/camalot/jenkins-dark-stylish&quot;&gt;camalot/jenkins-dark-stylish&lt;/a&gt; and a dark version of the &lt;a href=&quot;https://github.com/TobiX/jenkins-neo2-theme&quot;&gt;Neo2 Theme&lt;/a&gt;.
These themes were difficult to maintain, and finally they were either removed or abandoned.
What if Jenkins had an official theme?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the event a group of contributors focused on creating a new &lt;a href=&quot;https://github.com/jenkinsci/dark-theme-plugin&quot;&gt;Dark Theme&lt;/a&gt; for Jenkins.
This effort included:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Patches to the Jenkins core which simplified development and maintenance of UI themes.
Support for CSS variables was added, as well as PostCSS processing which helps to simplify browser compatibility.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/dark-theme-plugin&quot;&gt;Dark Theme&lt;/a&gt; itself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UI Testing and compatibility fixes in the core and multiple Jenkins plugins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/dark-theme-plugin/tree/master/demo&quot;&gt;Dark theme demo&lt;/a&gt; with support for the development mode.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can try out this theme starting from Jenkins 2.239.
It is available as a &lt;a href=&quot;https://plugins.jenkins.io/dark-theme&quot;&gt;plugin&lt;/a&gt; from the Jenkins Update Center.
An example screenshot of the main page:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/jenkins-is-the-way/uiux-hackfest-results/dark-theme-main.png&quot; alt=&quot;Dark Theme - Main page&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you discover any Dark theme compatibility issues,
please report them &lt;a href=&quot;https://github.com/jenkinsci/dark-theme-plugin/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;jenkins-configuration-ui-accessibility&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#jenkins-configuration-ui-accessibility&quot; /&gt;Jenkins Configuration UI Accessibility&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Quick access:&lt;/em&gt;
&lt;a href=&quot;https://youtu.be/0ZLAOCs3XwU?t=275&quot;&gt;demo&lt;/a&gt;,
&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/ux/#project-ui-accessibility&quot;&gt;project page&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins Web UI accessibility was one of the suggested topics at the event.
We would like to make Jenkins usable by as many people as possible.
It includes multiple groups of users: people with disabilities, ones using mobile devices, or those with slow network connections.
In general, all Jenkins users would benefit from better navigation and layouts.
Some of the accessibility improvements we implemented during the event:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added aria-labels to username &amp;amp; password input fields&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Indicate the language of the page in the footer (not merged yet)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove page generation timestamp from the footer&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the UI/UX hackfest the major focus was on migrating configuration pages from tables to divs
(&lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62437&quot;&gt;JENKINS-62437&lt;/a&gt;).
It will make them more user-friendly on narrow and especially mobile screens.
The change will also help users to navigate complex forms with multiple levels of nesting.
Our progress:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;User Experience testing.
Thanks to the contributors, we discovered several compatibility issues in plugins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bug fixes in several plugins&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A new &lt;a href=&quot;https://github.com/oleg-nenashev/jenkins-tables-to-divs-config-migration-testenv&quot;&gt;Dockerized demo&lt;/a&gt; which allows to evaluate the change with a set of pre-configured plugins.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is an example of a job configuration page using the new layout:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/jenkins-is-the-way/uiux-hackfest-results/tables-to-divs-job-config.png&quot; alt=&quot;Tables to Divs - Job configuration example&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will keep working on this change in the coming weeks,
and we invite Jenkins users and Contributors to help us with testing the change!
Testing guidelines are available in the &lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-62437&quot;&gt;JENKINS-62437&lt;/a&gt; ticket.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;new-script-security-approvals-management-ui&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-script-security-approvals-management-ui&quot; /&gt;New Script Security approvals management UI&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Quick access:&lt;/em&gt;
&lt;a href=&quot;https://youtu.be/0ZLAOCs3XwU?t=2569&quot;&gt;demo&lt;/a&gt;,
&lt;a href=&quot;https://github.com/jenkinsci/script-security-plugin/pull/300&quot;&gt;pull request&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the hackfest &lt;a href=&quot;https://github.com/wadeck&quot;&gt;Wadeck Follonier&lt;/a&gt; redesigned the script approval interface in the &lt;a href=&quot;https://plugins.jenkins.io/script-security&quot;&gt;Script Security Plugin&lt;/a&gt;.
The new UI allows viewing the list of approved scripts, shows the last access timestamp, and allows managing the approvals individually.
Before, it was not possible to do it from the Web interface.
Once &lt;a href=&quot;https://github.com/jenkinsci/script-security-plugin/pull/300&quot;&gt;the pull request&lt;/a&gt; is released,
the feature will become available to Jenkins users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/jenkins-is-the-way/uiux-hackfest-results/script-security-expanded.png&quot; alt=&quot;New Script Security approvals management UI&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;other-ui-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#other-ui-improvements&quot; /&gt;Other UI improvements&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In addition to the major improvements listed above,
there were also many smaller patches in the Jenkins core and various plugins.
You can find a full list of contributions to the user interface &lt;a href=&quot;https://github.com/jenkinsci/ui-ux-hackfest-2020/issues?q=is%3Aissue+label%3Aui&quot;&gt;here&lt;/a&gt;,
some important improvements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Improved navigation in the &lt;a href=&quot;https://plugins.jenkins.io/credentials&quot;&gt;Credentials plugin&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for wide screens in the &lt;a href=&quot;https://plugins.jenkins.io/autograding&quot;&gt;Autograding plugin&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UI Improvements in the &lt;a href=&quot;https://plugins.jenkins.io/folder-auth&quot;&gt;Folder-based Authorization Strategy&lt;/a&gt; plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improved Fingerprint listing in the Jenkins core&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/jenkins-is-the-way/uiux-hackfest-results/auto-grading-xl-screens.png&quot; alt=&quot;Auto-grading plugin - XL Screens&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;contributing&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#contributing&quot; /&gt;Contributing&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We invite Jenkins users and contributors to join the effort and to improve the user interface together.
The Jenkins project gradually adopts modern frontend stacks (JavaScript, React, Gatsby, Vue.js, etc.) and design methodologies.
For example, see the presentation about &lt;a href=&quot;https://github.com/jenkinsci/ui-ux-hackfest-2020/tree/master/presentations/02-beautify-plugin-ui&quot;&gt;beautifying the UI of Jenkins reporter plugins&lt;/a&gt; by &lt;a href=&quot;https://github.com/uhafner&quot;&gt;Ullrich Hafner&lt;/a&gt;.
It is a great opportunity for frontend developers to join the project, share their experiences, experiment with new technologies, and improve the Jenkins user interface and user experience.
Join us!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/participate/code/&quot;&gt;this page&lt;/a&gt; for more information about contributing to the Jenkins codebase.
If you want to know more, join us in the &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/ux/&quot;&gt;Jenkins User Experience SIG&lt;/a&gt; channels.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;references&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#references&quot; /&gt;References&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can find more information about the Hackfest here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/events/online-hackfest/2020-uiux/&quot;&gt;Jenkins UI/UX Hackfest Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/ui-ux-hackfest-2020/tree/master/presentations/09-demo-sessions&quot;&gt;UI/UX Hackfest Closing Demos&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/ui-ux-hackfest-2020/tree/master/presentations&quot;&gt;All presentations and demos&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jenkinsci/ui-ux-hackfest-2020/issues?q=is%3Aissue+label%3Aui&quot;&gt;Full list of contributions to the user interface&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/18/terminology-update/</id>
<title>On Jenkins Terminology Updates</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-06-18T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/18/terminology-update/" />
<author>
<name>markyjackson-taulia</name>
</author>
<category term="community"></category>
<category term="opensource"></category>
<category term="governance"></category>
<category term="documentation"></category>
<summary>
In 2016, the Jenkins community decided to start removing offensive terminology within the project.
The "slave" term was deprecated in Jenkins 2.0 and replaced by the "agent" term.
Other terminology was slated for review after the cleanup of the "slave" term which was considered as most problematic one.
In 2017, the project began tracking areas for correction.
Work has been done on renaming the SSH build agent plugin as well as gradual removal of offensive naming in services and repositories.
This year, a group of core contributors continued addressing this critical work.


The Advocacy &amp; Outreach SIG met to discuss and prioritize the continued work. The...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In 2016, the Jenkins community decided to start removing offensive terminology within the project.
The &quot;slave&quot; term was deprecated in Jenkins 2.0 and replaced by the &quot;agent&quot; term.
Other terminology was slated for review after the cleanup of the &quot;slave&quot; term which was considered as most problematic one.
In 2017, the project began &lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-42816&quot;&gt;tracking areas for correction&lt;/a&gt;.
Work has been done on renaming the SSH build agent plugin as well as gradual removal of offensive naming in services and repositories.
This year, a group of core contributors continued addressing this critical &lt;a href=&quot;https://www.jenkins.io/blog/2020/05/06/docker-agent-image-renaming/&quot;&gt;work&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Advocacy &amp;amp; Outreach SIG met to discuss and prioritize the continued work. The governance board has also met and there will be more information coming regarding removal of offensive terminology.
Last week we took another step towards removing offensive terminology within the project by updating previous blog posts and &lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/pull/3447&quot;&gt;removing offensive terminology in old blogs&lt;/a&gt;, cleaning up some references in Jenkins built-in documetation and localization, etc.
The meeting minutes are available &lt;a href=&quot;https://docs.google.com/document/d/1K5dTSqe56chFhDSGNfg_MCy-LmseUs_S3ys_tg60sTs/edit&quot;&gt;here&lt;/a&gt; and a recording of the meeting &lt;a href=&quot;https://www.youtube.com/watch?v=hGZ1CvkmZXU&quot;&gt;here&lt;/a&gt;
There is more &lt;a href=&quot;https://groups.google.com/forum/#!topic/jenkinsci-dev/CLR55wMZwZ8&quot;&gt;work to do&lt;/a&gt;. The core team is working to address terms such as &quot;Master&quot;, &quot;whitelist&quot; and &quot;blacklist&quot; as well addressing git branching terminology.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We could use &lt;a href=&quot;https://www.jenkins.io/participate/&quot;&gt;your help&lt;/a&gt;
We continue to do this much needed work and would like to remind everyone that the Jenkins project is governed by the &lt;a href=&quot;https://www.jenkins.io/project/conduct/&quot;&gt;Code of Conduct.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sincerely,
Marky Jackson&lt;/p&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/17/infra-and-aws-donation/</id>
<title>Jenkins Infrastructure: Stats, Updates, and AWS sponsorship</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-06-17T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/17/infra-and-aws-donation/" />
<author>
<name>olblak</name>
</author>
<category term="aws"></category>
<category term="community"></category>
<category term="infrastructure"></category>
<summary>
The Jenkins project relies heavily on its infrastructure.
We use websites like www.jenkins.io and plugins.jenkins.io, ticketing systems like issues.jenkins.io  , CI/CD infrastructure like ci.jenkins.io , and many other services.
Just to provide some context about the Jenkins infrastructure scale, here are some stats from April 2020:




Over 600 000 people visited www.jenkins.io


Over 250 000 Jenkins servers regularly checked the
Jenkins package server and the
Jenkins update server


Over 43 000 continuous integration jobs ran on ci.jenkins.io


Over 950 plugins ran their continuous integration pipelines on ci.jenkins.io




Country by country visitors to jenkins.io



The Jenkins project, as an open source project, is built and maintained by its awesome community.
Like...
</summary>
<content type="html">
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins project relies heavily on its infrastructure.
We use websites like &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/&quot;&gt;www.jenkins.io&lt;/a&gt; and &lt;a href=&quot;https://plugins.jenkins.io/&quot;&gt;plugins.jenkins.io&lt;/a&gt;, ticketing systems like &lt;a href=&quot;https://issues.jenkins.io/&quot;&gt;issues.jenkins.io&lt;/a&gt;  , CI/CD infrastructure like &lt;a href=&quot;https://ci.jenkins.io/&quot;&gt;ci.jenkins.io&lt;/a&gt; , and many other services.
Just to provide some context about the Jenkins infrastructure scale, here are some stats from April 2020:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Over 600 000 people visited &lt;a href=&quot;https://www.jenkins.io/&quot;&gt;www.jenkins.io&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Over 250 000 Jenkins servers regularly checked the
&lt;a href=&quot;https://pkg.jenkins.io/&quot;&gt;Jenkins package server&lt;/a&gt; and the
&lt;a href=&quot;https://updates.jenkins.io/&quot;&gt;Jenkins update server&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Over 43 000 continuous integration jobs ran on &lt;a href=&quot;https://ci.jenkins.io/&quot;&gt;ci.jenkins.io&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Over 950 plugins ran their continuous integration pipelines on &lt;a href=&quot;https://ci.jenkins.io/&quot;&gt;ci.jenkins.io&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Country by country visitors to jenkins.io&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-06-17-infra-update/world-map.png&quot; alt=&quot;Country by country visitors to jenkins.io&quot; height=&quot;308&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins project, as an open source project, is built and maintained by its awesome community.
Like in any organization, there are specific people who make sure that those services are always up and running.
Everyone is welcome to &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/participate&quot;&gt;participate&lt;/a&gt;.
Infrastructure is no exception, we are always &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/projects/infrastructure/#contributing&quot;&gt;looking for new contributors&lt;/a&gt; to the infrastructure!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While we can’t share publicly everything like secrets and certificates,
we still try to be as transparent as possible so that everybody can understand and improve our infrastructure without having privileged access.
What better way than using Git to manage infrastructure work?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;who-said-gitops&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#who-said-gitops&quot; /&gt;Who said GitOps?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since the creation of the &lt;a href=&quot;https://github.com/jenkins-infra&quot;&gt;Jenkins-infra organization&lt;/a&gt; on GitHub in March 2008, more than 650 people have contributed to over 80 git repositories.
Those contributions make the Jenkins community what it is today.
If you can’t find something there, it probably means that some help is welcomed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More recently, with help from &lt;a href=&quot;https://github.com/halkeye&quot;&gt;Gavin Mogan&lt;/a&gt;, &lt;a href=&quot;https://github.com/timja&quot;&gt;Tim Jacomb&lt;/a&gt;, and &lt;a href=&quot;https://github.com/slide&quot;&gt;Alex Earl&lt;/a&gt;, big achievements have been possible on many fronts like automating Jenkins releases, refreshing &lt;a href=&quot;https://plugins.jenkins.io/&quot;&gt;plugins.jenkins.io&lt;/a&gt;, adding new agents to &lt;a href=&quot;https://ci.jenkins.io/computer/&quot;&gt;ci.jenkins.io&lt;/a&gt;, and maintaining our Kubernetes cluster.
We thank them for their help and for the infrastructure progress they have enabled.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;infrastructure-at-scale&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#infrastructure-at-scale&quot; /&gt;Infrastructure at Scale&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Running infrastructure at the scale the Jenkins project does is expensive and sometimes quite challenging.
We are fortunate enough to be supported by many leading companies that provide us their expertise, their products, and their support.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recently, Amazon Web Services donated $60 000 to run Jenkins infrastructure on the AWS cloud.
We’re so grateful for their donation and for the flexibility it provides.
We’re running Linux agents with AMD64 and ARM64 architectures on AWS.
We’re using AWS cloud for our Windows agents.
The generous infrastructure donation from Amazon Web Services has increased our continuous integration capacity and broadened our platform coverage.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;our-sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#our-sponsors&quot; /&gt;Our Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Major sponsors of the Jenkins infrastructure include
&lt;a href=&quot;https://cloudbees.com/&quot;&gt;CloudBees&lt;/a&gt;,
&lt;a href=&quot;https://osuosl.org/&quot;&gt;Oregon State University Open Source Lab&lt;/a&gt;,
&lt;a href=&quot;https://cd.foundation/&quot;&gt;Continuous Delivery Foundation&lt;/a&gt;,
&lt;a href=&quot;https://redhat.com/&quot;&gt;Red Hat&lt;/a&gt;,
&lt;a href=&quot;https://aws.amazon.com/&quot;&gt;Amazon Web Services&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Additional sponsors of Jenkins infrastructure services and software include
&lt;a href=&quot;https://www.atlassian.com/&quot;&gt;Atlassian&lt;/a&gt;,
&lt;a href=&quot;https://www.datadoghq.com/&quot;&gt;Datadog&lt;/a&gt;,
&lt;a href=&quot;https://www.fastly.com/&quot;&gt;Fastly&lt;/a&gt;,
&lt;a href=&quot;https://www.ibm.com/&quot;&gt;IBM&lt;/a&gt;.
&lt;a href=&quot;https://jfrog.com/&quot;&gt;JFrog&lt;/a&gt;,
&lt;a href=&quot;https://www.pagerduty.com/&quot;&gt;Pagerduty&lt;/a&gt;,
&lt;a href=&quot;https://www.rackspace.com/&quot;&gt;Rackspace&lt;/a&gt;,
&lt;a href=&quot;https://www.sentry.io/&quot;&gt;Sentry&lt;/a&gt;,
&lt;a href=&quot;https://www.serverion.com/&quot;&gt;Serverion&lt;/a&gt;,
&lt;a href=&quot;https://spinup.com/&quot;&gt;SpinUp&lt;/a&gt;,
&lt;a href=&quot;https://www.tsinghua.edu.cn/&quot;&gt;Tsinghua University&lt;/a&gt;, and
&lt;a href=&quot;https://xmission.com/&quot;&gt;XMission&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Each of these organizations support the Jenkins project in their own way.
We thank them for their contributions, their support and for their willingness to help the Jenkins community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jenkins.io/projects/infrastructure/&quot; class=&quot;bare&quot;&gt;https://www.jenkins.io/projects/infrastructure/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
<entry>
<id>https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/08/hackfest-docs-results/</id>
<title>Jenkins User Experience Hackfest Documentation Results</title>
<updated>2021-03-04T07:23:04+00:00</updated>
<published>2020-06-08T00:00:00+00:00</published>
<link rel="alternate" type="text/html" href="https://halkeye.github.io/jenkins.io/add-algolia/blog/2020/06/08/hackfest-docs-results/" />
<category term="ux"></category>
<category term="documentation"></category>
<category term="community"></category>
<category term="outreach-programs"></category>
<category term="jenkins-is-the-way"></category>
<summary>
Documentation is not glamorous, but it is goodness.



&#8212; Thomas Otter



Jenkins technical documentation is an important part of our project as it is key to using Jenkins well.
Good documentation guides users and encourages good implementation choices.
It is a crucial part of the user experience.


In the recent Jenkins UI/UX hackfest, documentation was a specific track to improve the Jenkins user experience.
We received many improvements from experienced Jenkins contributors and newcomers alike.
Contributors from all around the world submitted pull requests for documentation on installing, managing, administering, and operating Jenkins.





Documentation migration from Wiki


The Jenkins Wiki pages have collected 15 years of experience and wisdom...
</summary>
<content type="html">
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Documentation is not glamorous, but it is goodness.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;attribution&quot;&gt;
— &lt;a href=&quot;https://www.otteradvisory.com/2020/01/documentation-and-safety/&quot;&gt;Thomas Otter&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins technical documentation is an important part of our project as it is key to using Jenkins well.
Good documentation guides users and encourages good implementation choices.
It is a crucial part of the user experience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the recent Jenkins UI/UX hackfest, documentation was a specific track to improve the Jenkins user experience.
We received many improvements from experienced Jenkins contributors and newcomers alike.
Contributors from all around the world submitted pull requests for documentation on installing, managing, administering, and operating Jenkins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-06-08-docs-from-hackfest/contributions-by-country.png&quot; alt=&quot;Contributors to Docs by country&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documentation-migration-from-wiki&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#documentation-migration-from-wiki&quot; /&gt;Documentation migration from Wiki&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins Wiki pages have collected 15 years of experience and wisdom for Jenkins users.
However, that experience and wisdom is intermixed with inaccurate, incomplete, and outdated information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins Wiki migration project identified the 50 most accessed pages on the Jenkins wiki and created GitHub issues to track the migration of those pages to www.jenkins.io.
This was our first large scale experiment using GitHub issues for documentation.
The results have been overwhelmingly positive.
Hackfest contributors added new sections to many documentation chapters, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/using/&quot;&gt;Using Jenkins&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/pipeline/&quot;&gt;Pipeline&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/managing/&quot;&gt;Managing Jenkins&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/doc/book/system-administration/&quot;&gt;System Administration&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hackfest closed 19 of the wiki migration issues.
Work is in progress on an additional 25 wiki migration issues.
We’ve made great progress and look forward to even better results in the future.
New contributors used the &quot;good first issue&quot; label very effectively.
We started the Hackfest with most of the 25 &quot;good first issues&quot; unassigned and completed the Hackfest with 14 closed and 10 others in progress.
We’ll provide more &quot;good first issues&quot; as we use the Jenkins Wiki migration to welcome new documentation contributors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-06-08-docs-from-hackfest/sample-pages.png&quot; alt=&quot;Sample Hackfest documentation pages&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;migrating-plugin-documentation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#migrating-plugin-documentation&quot; /&gt;Migrating plugin documentation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Plugin documentation is also in transition.
Since November 2019, plugins have been moving their documentation into the GitHub repository that hosts the plugin source code.
This &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/blog/2019/10/21/plugin-docs-on-github/&quot;&gt;&quot;documentation as code&quot;&lt;/a&gt; approach allows plugin maintainers to include documentation improvements in the same pull requests that implement new capabilities.
It assures that documentation changes are reviewed by the same maintainers who review and approve new capabilities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hackfest participants submitted pull requests to migrate plugin documentation to GitHub.
10 plugin pull requests are in progress from the Hackfest.
5 plugin pull requests from the Hackfest have been already merged and are awaiting the release of the plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;chuck-norris-uses-documentation-as-code&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#chuck-norris-uses-documentation-as-code&quot; /&gt;Chuck Norris uses documentation as code&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the spirit of fun and adventure, Oleg Nenashev migrated the &quot;Chuck Norris plugin&quot; to GitHub documentation as code in a &lt;a href=&quot;https://www.youtube.com/watch?v=BaEJ8v7INNQ&quot;&gt;live Hackfest presentation May 26, 2020&lt;/a&gt;.
Links to the recording, the plugin migration guide, and the export tool are available from &lt;a href=&quot;https://github.com/jenkinsci/ui-ux-hackfest-2020/tree/master/presentations/04-migrating-plugin-docs&quot;&gt;&quot;Migrating plugins to documentation-as-code&quot;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-06-08-docs-from-hackfest/chuck-norris-docs-as-code.png&quot; alt=&quot;Chuck Norris plugin uses documentation-as-code&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documentation-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#documentation-updates&quot; /&gt;Documentation updates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jenkins works with other technologies to solve automation challenges in many different environments.
We describe those environments in our &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/solutions/&quot;&gt;&quot;Solution Pages&quot;&lt;/a&gt;.
As part of the Hackfest, we’ve started a series of improvements to the solution pages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/solutions/&quot;&gt;Docker solutions page&lt;/a&gt; now includes updated videos and a better page layout for easier reading and better navigation.
Other solution pages will receive similar improvements in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-06-08-docs-from-hackfest/jenkins-and-docker.png&quot; alt=&quot;Jenkins and Docker&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;system-properties&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#system-properties&quot; /&gt;System properties&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The global configuration of Jenkins can be modified at startup by defining Java properties.
System properties can change system defaults and can provide compatibility &quot;escape hatches&quot; when a new default configuration might be incompatible with existing installations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Daniel Beck has improved the navigation and user experience of the system properties page as part of the Hackfest.
It is now much easier to read and to reference, with embeddable links available with a mouse-over to the right of every property and labels that categorize and classify each property.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-06-08-docs-from-hackfest/system-properties.png&quot; alt=&quot;System Properties&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;plugin-site-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#plugin-site-improvements&quot; /&gt;Plugin site improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the Hackfest, Gavin Mogan has continued his efforts to improve the &lt;a href=&quot;https://plugins.jenkins.io/&quot;&gt;Jenkins Plugins Site&lt;/a&gt; so that users can easily access plugin changelogs and reported issues.
Once this pull request is merged, it will greatly improve the experience of those Jenkins users who want to update plugins and look for documentation about what has changed in them and what are the possible issues they might experience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Example of the incoming UI for the Jira plugin:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://halkeye.github.io/jenkins.io/add-algolia/images/post-images/2020-06-08-docs-from-hackfest/plugins-site.png&quot; alt=&quot;Plugins Site&quot; /&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#whats-next&quot; /&gt;What’s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is still much to do in Jenkins documentation and we need your help to do it.
There are many ways to &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/participate/&quot;&gt;participate&lt;/a&gt; in the Jenkins project, including &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/participate/document&quot;&gt;documentation&lt;/a&gt;.
See the &lt;a href=&quot;https://github.com/jenkins-infra/jenkins.io/blob/master/CONTRIBUTING.adoc&quot;&gt;contributing guidelines&lt;/a&gt; for detailed instructions.
Join the &lt;a href=&quot;https://gitter.im/jenkinsci/docs&quot;&gt;documentation chat&lt;/a&gt; for personalized help and encouragement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Jenkins project has been also accepted to &lt;a href=&quot;https://developers.google.com/season-of-docs&quot;&gt;Google Season of Docs&lt;/a&gt; this year.
This open-source mentorship program brings together open source and technical writers communities for the benefit of both.
We are looking for technical writers who are interested to contribute to the project in September-December 2020.
It is a great opportunity to study Documentation-as-code tools and to learn more about contributing to open-source projects.
You can find Jenkins project ideas and more information &lt;a href=&quot;https://halkeye.github.io/jenkins.io/add-algolia/sigs/docs/gsod/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
</entry>
</feed>
